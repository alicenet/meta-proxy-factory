{
  "id": "eda25ede2f73f19e839379f5644b2eb1",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.11",
  "solcLongVersion": "0.8.11+commit.d7f03943",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DeterministicAddress.sol": {
        "content": "// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n/**\n * @title DeterministicAddress\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\nabstract contract DeterministicAddress {\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\n        public\n        pure\n        returns (address)\n    {\n        // byte code for metamorphic contract\n        // 6020363636335afa1536363636515af43d36363e3d36f3\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\n        return\n            address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                hex\"ff\",\n                                _factory,\n                                _salt,\n                                metamorphicContractBytecodeHash_\n                            )\n                        )\n                    )\n                )\n            );\n    }\n}\n"
      },
      "contracts/ProxyFactoryBase.sol": {
        "content": "// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\nimport \"./proxy/Proxy.sol\";\nimport \"./DeterministicAddress.sol\";\nimport \"./proxy/ProxyUpgrader.sol\";\nimport \"./proxy/IProxy.sol\";\n\n/**\n * @title ProxyFactoryBase\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\nabstract contract ProxyFactoryBase is DeterministicAddress, ProxyUpgrader {\n    /**\n    @dev owner role for privileged access to functions\n    */\n    address private _owner;\n\n    /**\n    @dev delegator role for privileged access to delegateCallAny\n    */\n    address private _delegator;\n\n    /**\n    @dev array to store list of contract salts\n    */\n    bytes32[] private _contracts;\n\n    /**\n    @dev slot for storing implementation address\n    */\n    address private _implementation;\n\n    address private immutable _proxyTemplate;\n\n    bytes8 private constant _UNIVERSAL_DEPLOY_CODE = 0x38585839386009f3;\n\n    /**\n     *@dev events that notify of contract deployment\n     */\n    event Deployed(bytes32 salt, address contractAddr);\n    event DeployedTemplate(address contractAddr);\n    event DeployedStatic(address contractAddr);\n    event DeployedRaw(address contractAddr);\n    event DeployedProxy(address contractAddr);\n\n    // modifier restricts caller to owner or self via multicall\n    modifier onlyOwner() {\n        require(msg.sender == address(this) || msg.sender == owner());\n        _;\n    }\n\n    // modifier restricts caller to owner or self via multicall\n    modifier onlyOwnerOrDelegator() {\n        require(\n            msg.sender == address(this) || msg.sender == owner() || msg.sender == delegator()\n        );\n        _;\n    }\n\n    /**\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n     * account will be set as the first owner of the factory.\n     */\n    constructor() {\n        bytes memory proxyDeployCode = abi.encodePacked(\n            //8 byte code copy constructor code\n            _UNIVERSAL_DEPLOY_CODE,\n            type(Proxy).creationCode,\n            bytes32(uint256(uint160(address(this))))\n        );\n        //variable to store the address created from create(the location of the proxy template contract)\n        address addr;\n        assembly {\n            //deploys the proxy template contract\n            addr := create(0, add(proxyDeployCode, 0x20), mload(proxyDeployCode))\n            if iszero(addr) {\n                //if contract creation fails, we want to return any err messages\n                returndatacopy(0x00, 0x00, returndatasize())\n                //revert and return errors\n                revert(0x00, returndatasize())\n            }\n        }\n        //State var that stores the proxyTemplate address\n        _proxyTemplate = addr;\n        //State var that stores the _owner address\n        _owner = msg.sender;\n    }\n\n    // solhint-disable payable-fallback\n    /**\n     * @dev fallback function returns the address of the most recent deployment of a template\n     */\n    fallback() external {\n        assembly {\n            mstore(returndatasize(), sload(_implementation.slot))\n            return(returndatasize(), 0x20)\n        }\n    }\n\n    /**\n     * @dev Sets a new implementation address\n     * @param newImplementationAddress_: address of the contract with the new implementation\n     */\n    function setImplementation(address newImplementationAddress_) public onlyOwnerOrDelegator {\n        _implementation = newImplementationAddress_;\n    }\n\n    /**\n     * @dev Sets the new owner\n     * @param newOwner_: address of the new owner\n     */\n    function setOwner(address newOwner_) public onlyOwner {\n        _owner = newOwner_;\n    }\n\n    /**\n     * @dev Sets the new delegator\n     * @param newDelegator_: address of the new delegator\n     */\n    function setDelegator(address newDelegator_) public onlyOwner {\n        _delegator = newDelegator_;\n    }\n\n    /**\n     * @dev lookup allows anyone interacting with the contract to get the address of contract specified\n     * by its name_\n     * @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file\n     */\n    function lookup(bytes32 salt_) public view returns (address addr) {\n        addr = getMetamorphicContractAddress(salt_, address(this));\n    }\n\n    /**\n     * @dev getImplementation is public getter function for the _owner account address\n     */\n    function getImplementation() public view returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev owner is public getter function for the _owner account address\n     * @return owner_ address of the owner account\n     */\n    function owner() public view returns (address owner_) {\n        owner_ = _owner;\n    }\n\n    /**\n     * @dev delegator is public getter function for the _delegator account address\n     * @return delegator_ address of the delegator account\n     */\n    function delegator() public view returns (address delegator_) {\n        delegator_ = _delegator;\n    }\n\n    /**\n     * @dev contracts is public getter that gets the array of salts associated with all the contracts\n     * deployed with this factory\n     * @return contracts_ the array of salts associated with all the contracts deployed with this\n     * factory\n     */\n    function contracts() public view returns (bytes32[] memory contracts_) {\n        contracts_ = _contracts;\n    }\n\n    /**\n     * @dev getNumContracts getter function for retrieving the total number of contracts\n     * deployed with this factory\n     * @return the length of the contract array\n     */\n    function getNumContracts() public view returns (uint256) {\n        return _contracts.length;\n    }\n\n    /**\n     * @dev _callAny allows EOA to call function impersonating the factory address\n     * @param target_: the address of the contract to be called\n     * @param value_: value in WEIs to send together the call\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\n     */\n    function _callAny(\n        address target_,\n        uint256 value_,\n        bytes memory cdata_\n    ) internal {\n        assembly {\n            let size := mload(cdata_)\n            let ptr := add(0x20, cdata_)\n            if iszero(call(gas(), target_, value_, ptr, size, 0x00, 0x00)) {\n                returndatacopy(0x00, 0x00, returndatasize())\n                revert(0x00, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev _delegateCallAny allows EOA to call a function in a contract without impersonating the factory\n     * @param target_: the address of the contract to be called\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\n     */\n    function _delegateCallAny(address target_, bytes memory cdata_) internal {\n        assembly {\n            let size := mload(cdata_)\n            let ptr := add(0x20, cdata_)\n            if iszero(delegatecall(gas(), target_, ptr, size, 0x00, 0x00)) {\n                returndatacopy(0x00, 0x00, returndatasize())\n                revert(0x00, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev _deployCreate allows the owner to deploy raw contracts through the factory using\n     * non-deterministic address generation (create OpCode)\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function _deployCreate(bytes calldata deployCode_) internal returns (address contractAddr) {\n        assembly {\n            //get the next free pointer\n            let basePtr := mload(0x40)\n            let ptr := basePtr\n\n            //copies the initialization code of the implementation contract\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\n\n            //Move the ptr to the end of the code in memory\n            ptr := add(ptr, deployCode_.length)\n\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\n        }\n        require((_extCodeSize(contractAddr) != 0));\n        emit DeployedRaw(contractAddr);\n        return contractAddr;\n    }\n\n    /**\n     * @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\n     * factory\n     * @param value_ endowment value in WEIS for the created contract\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function _deployCreate2(\n        uint256 value_,\n        bytes32 salt_,\n        bytes calldata deployCode_\n    ) internal returns (address contractAddr) {\n        assembly {\n            //get the next free pointer\n            let basePtr := mload(0x40)\n            let ptr := basePtr\n\n            //copies the initialization code of the implementation contract\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\n\n            //Move the ptr to the end of the code in memory\n            ptr := add(ptr, deployCode_.length)\n\n            contractAddr := create2(value_, basePtr, sub(ptr, basePtr), salt_)\n        }\n        require(uint160(contractAddr) != 0);\n        //record the contract salt to the _contracts array for lookup\n        _contracts.push(salt_);\n        emit DeployedRaw(contractAddr);\n        return contractAddr;\n    }\n\n    /**\n     * @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     */\n    function _deployProxy(bytes32 salt_) internal returns (address contractAddr) {\n        address proxyTemplate = _proxyTemplate;\n        assembly {\n            // store proxy template address as implementation,\n            sstore(_implementation.slot, proxyTemplate)\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, 0x20))\n            // put metamorphic code as initCode\n            // push1 20\n            mstore(ptr, shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3))\n            contractAddr := create2(0, ptr, 0x17, salt_)\n        }\n        require((_extCodeSize(contractAddr) != 0));\n        // record the contract salt to the contracts array\n        _contracts.push(salt_);\n        emit DeployedProxy(contractAddr);\n        return contractAddr;\n    }\n\n    /**\n     * @dev _deployStatic finishes the deployment started with the deployTemplate of a contract with\n     * determinist address. This function call any initialize() function in the deployed contract\n     * in case the arguments are provided. Should be called after deployTemplate.\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\n     * @return contractAddr the address of the deployed template contract\n     */\n    function _deployStatic(bytes32 salt_, bytes calldata initCallData_)\n        internal\n        returns (address contractAddr)\n    {\n        assembly {\n            // store proxy template address as implementation,\n            //sstore(_implementation.slot, _impl)\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, 0x20))\n            // put metamorphic code as initcode\n            /*\n                00 60 PUSH1     20\n                02 36 CALLDATASIZE          20\n                03 36 CALLDATASIZE          0 | 20\n                04 36 CALLDATASIZE          0 | 0 | 20\n                05 33 CALLER                0 | 0 | 0 | 20\n                06 5a GAS                   CALLER | 0 | 0 | 0 | 20\n                07 fa STATICCALL            GAS | CALLER | 0 | 0 | 0 | 20\n                08 15 ISZERO                tmeplateaddress\n                09 36 CALLDATASIZE          0\n                0a 36 CALLDATASIZE          0 | 0\n                0b 36 CALLDATASIZE          0 | 0 | 0\n                0c 36 CALLDATASIZE          0 | 0 | 0 | 0\n                0d 51 MLOAD                 0 | 0 | 0 | 0 | 0\n                0e 5a GAS                   address | 0 | 0 | 0 | 0\n                0f f4 DELEGATECALL          GAS | address | 0 | 0 | 0 | 0\n                10 3d RETURNDATASIZE\n                11 36 CALLDATASIZE          RETURNDATASIZE\n                12 36 CALLDATASIZE\n                13 3e RETURNDATACOPY\n                14 3d RETURNDATASIZE\n                15 36 CALLDATASIZE\n                16 f3 RETURN\n            */\n            mstore(ptr, shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3))\n            contractAddr := create2(0, ptr, 0x17, salt_)\n            //if the returndatasize is not 0 revert with the error message\n            if iszero(iszero(returndatasize())) {\n                returndatacopy(0x00, 0x00, returndatasize())\n                revert(0, returndatasize())\n            }\n            //if contractAddr or code size at contractAddr is 0 revert with deploy fail message\n            if or(iszero(contractAddr), iszero(extcodesize(contractAddr))) {\n                mstore(0, \"Static deploy failed\")\n                revert(0, 0x20)\n            }\n        }\n        if (initCallData_.length > 0) {\n            _initializeContract(contractAddr, initCallData_);\n        }\n        require((_extCodeSize(contractAddr) != 0));\n        _contracts.push(salt_);\n        emit DeployedStatic(contractAddr);\n        return contractAddr;\n    }\n\n    /**\n     * @dev _deployTemplate deploys a template contract with the universal code copy constructor that\n     * deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\n     * @param deployCode_ Hex encoded data with the deploymentCode + (constructor args appended if any)\n     * @return contractAddr the address of the deployed template contract\n     */\n    function _deployTemplate(bytes calldata deployCode_) internal returns (address contractAddr) {\n        assembly {\n            //get the next free pointer\n            let basePtr := mload(0x40)\n            mstore(0x40, add(basePtr, add(deployCode_.length, 0x28)))\n            let ptr := basePtr\n            //codesize, pc,  pc, codecopy, codesize, push1 09, return push2 <codesize> 56 5b\n            /*\n            00 38 codesize\n            01 58 pc            codesize\n            02 58 pc            01 | codesize\n            03 39 codecopy      02 | 01 | codesize\n            04 38 codesize\n            05 60 push1 09      codesize\n            07 f3 return        09 | codesize\n             */\n            mstore(ptr, hex\"38585839386009f3\")\n            //0x38585839386009f3\n            ptr := add(ptr, 0x08)\n            //copy the initialization code of the implementation contract\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\n            // Move the ptr to the end of the code in memory\n            ptr := add(ptr, deployCode_.length)\n            // put address on constructor\n            mstore(ptr, address())\n            ptr := add(ptr, 0x20)\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\n        }\n        require((_extCodeSize(contractAddr) != 0));\n        emit DeployedTemplate(contractAddr);\n        _implementation = contractAddr;\n        return contractAddr;\n    }\n\n    /**\n     * @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\n     * @param contract_ address of the contract that will be initialized\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * deployed contract\n     */\n    function _initializeContract(address contract_, bytes calldata initCallData_) internal {\n        assembly {\n            if iszero(iszero(initCallData_.length)) {\n                let ptr := mload(0x40)\n                mstore(0x40, add(initCallData_.length, ptr))\n                calldatacopy(ptr, initCallData_.offset, initCallData_.length)\n                if iszero(call(gas(), contract_, 0, ptr, initCallData_.length, 0x00, 0x00)) {\n                    ptr := mload(0x40)\n                    mstore(0x40, add(returndatasize(), ptr))\n                    returndatacopy(ptr, 0x00, returndatasize())\n                    revert(ptr, returndatasize())\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev _multiCall allows EOA to make multiple function calls within a single transaction\n     * impersonating the factory\n     * @param cdata_: array of abi encoded data with the function calls (function signature + arguments)\n     */\n    function _multiCall(bytes[] calldata cdata_) internal {\n        for (uint256 i = 0; i < cdata_.length; i++) {\n            bytes memory cdata = cdata_[i];\n            _callAny(address(this), 0, cdata);\n        }\n        _returnAvailableData();\n    }\n\n    /**\n     * @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n     * @param newImpl_ address of the new contract that contains the new implementation logic\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * new implementation contract\n     */\n    function _upgradeProxy(\n        bytes32 salt_,\n        address newImpl_,\n        bytes calldata initCallData_\n    ) internal {\n        address proxy = DeterministicAddress.getMetamorphicContractAddress(salt_, address(this));\n        __upgrade(proxy, newImpl_);\n        assert(IProxy(proxy).getImplementationAddress() == newImpl_);\n        _initializeContract(proxy, initCallData_);\n    }\n\n    /**\n     * @dev Aux function to return the external code size\n     */\n    function _extCodeSize(address target_) internal view returns (uint256 size) {\n        assembly {\n            size := extcodesize(target_)\n        }\n        return size;\n    }\n\n    /**\n     * @dev Aux function to get the return data size\n     */\n    function _returnAvailableData() internal pure {\n        assembly {\n            returndatacopy(0x00, 0x00, returndatasize())\n            return(0x00, returndatasize())\n        }\n    }\n}"
      },
      "contracts/proxy/Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\nimport \"../DeterministicAddress.sol\";\n\n/**\n * @title Proxy\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\n/**\n *@notice RUN OPTIMIZER OFF\n */\n/**\n * @notice Proxy is a delegatecall reverse proxy implementation\n * the forwarding address is stored at the slot location of not(0)\n * if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address >\n * the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation\n * from upgrading the proxy by changing this slot.\n * The proxy may be directly upgraded ( if the lock is not set )\n * by calling the proxy from the factory address using the format\n * abi.encodeWithSelector(0xca11c0de, <address>);\n * All other calls will be proxied through to the implementation.\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal\n * mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets\n * the higher order bits to lock the upgrade capability of the proxy.\n */\ncontract Proxy {\n    address private immutable _factory;\n\n    constructor() {\n        _factory = msg.sender;\n    }\n\n    receive() external payable {\n        _fallback();\n    }\n\n    fallback() external payable {\n        _fallback();\n    }\n\n    function getImplementationAddress() public view returns (address) {\n        assembly {\n            mstore(\n                0x00,\n                and(\n                    sload(not(0x00)),\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n            return(0x00, 0x20)\n        }\n    }\n\n    function _fallback() internal {\n        // make local copy of factory since immutables\n        // are not accessable in assembly as of yet\n        address factory = _factory;\n        assembly {\n            // admin is the builtin logic to change the implementation\n            function admin() {\n                // this is an assignment to implementation\n                let newImpl := shr(96, shl(96, calldataload(0x04)))\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10cced0000) {\n                    mstore(0x00, \"imploc\")\n                    revert(0x00, 0x20)\n                }\n                // store address into slot\n                sstore(not(0x00), newImpl)\n                stop()\n            }\n\n            // passthrough is the passthrough logic to delegate to the implementation\n            function passthrough() {\n                // load free memory pointer\n                let _ptr := mload(0x40)\n                // allocate memory proportionate to calldata\n                mstore(0x40, add(_ptr, calldatasize()))\n                // copy calldata into memory\n                calldatacopy(_ptr, 0x00, calldatasize())\n                let ret := delegatecall(gas(), sload(not(0x00)), _ptr, calldatasize(), 0x00, 0x00)\n                returndatacopy(_ptr, 0x00, returndatasize())\n                if iszero(ret) {\n                    revert(_ptr, returndatasize())\n                }\n                return(_ptr, returndatasize())\n            }\n\n            // if caller is factory,\n            // and has 0xca11c0de<address> as calldata\n            // run admin logic and return\n            if eq(caller(), factory) {\n                if eq(calldatasize(), 0x24) {\n                    if eq(shr(224, calldataload(0x00)), 0xca11c0de) {\n                        admin()\n                    }\n                }\n            }\n            // admin logic was not run so fallthrough to delegatecall\n            passthrough()\n        }\n    }\n}"
      },
      "contracts/proxy/ProxyUpgrader.sol": {
        "content": "// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\n/**\n * @title ProxyUpgrader\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\nabstract contract ProxyUpgrader {\n    function __upgrade(address _proxy, address _newImpl) internal {\n        bytes memory cdata = abi.encodeWithSelector(0xca11c0de, _newImpl);\n        assembly {\n            if iszero(call(gas(), _proxy, 0, add(cdata, 0x20), mload(cdata), 0x00, 0x00)) {\n                let ptr := mload(0x40)\n                mstore(0x40, add(ptr, returndatasize()))\n                returndatacopy(ptr, 0x00, returndatasize())\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n}"
      },
      "contracts/proxy/IProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\ninterface IProxy {\n    function getImplementationAddress() external view returns (address);\n}"
      },
      "contracts/ProxyFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\nimport \"./DeterministicAddress.sol\";\nimport \"./proxy/Proxy.sol\";\nimport \"./ProxyFactoryBase.sol\";\n\n/**\n * @title ProxyFactory\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\n/// @custom:salt ProxyFactory\ncontract ProxyFactory is ProxyFactoryBase {\n    /**\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n     * account will be set as the first owner of the factory.\n     */\n    constructor() ProxyFactoryBase() {}\n\n    /**\n     * @dev callAny allows EOA to call function impersonating the factory address\n     * @param target_: the address of the contract to be called\n     * @param value_: value in WEIs to send together the call\n     * @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\n     */\n    function callAny(\n        address target_,\n        uint256 value_,\n        bytes calldata cdata_\n    ) public payable onlyOwner {\n        bytes memory cdata = cdata_;\n        _callAny(target_, value_, cdata);\n        _returnAvailableData();\n    }\n\n    /**\n     * @dev delegateCallAny allows EOA to call a function in a contract without impersonating the factory\n     * @param target_: the address of the contract to be called\n     * @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\n     */\n    function delegateCallAny(address target_, bytes calldata cdata_)\n        public\n        payable\n        onlyOwnerOrDelegator\n    {\n        bytes memory cdata = cdata_;\n        _delegateCallAny(target_, cdata);\n        _returnAvailableData();\n    }\n\n    /**\n     * @dev deployCreate allows the owner to deploy raw contracts through the factory using\n     * non-deterministic address generation (create OpCode)\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function deployCreate(bytes calldata deployCode_)\n        public\n        onlyOwner\n        returns (address contractAddr)\n    {\n        return _deployCreate(deployCode_);\n    }\n\n    /**\n     * @dev deployCreate2 allows the owner to deploy contracts with deterministic address\n     * through the factory\n     * @param value_ endowment value in WEIS for the created contract\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function deployCreate2(\n        uint256 value_,\n        bytes32 salt_,\n        bytes calldata deployCode_\n    ) public payable onlyOwner returns (address contractAddr) {\n        contractAddr = _deployCreate2(value_, salt_, deployCode_);\n    }\n\n    /**\n     * @dev deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     */\n    function deployProxy(bytes32 salt_) public onlyOwner returns (address contractAddr) {\n        contractAddr = _deployProxy(salt_);\n    }\n\n    /**\n     * @dev deployStatic finishes the deployment started with the deployTemplate of a contract with\n     * determinist address. This function call any initialize() function in the deployed contract\n     * in case the arguments are provided. Should be called after deployTemplate.\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\n     * @return contractAddr the address of the deployed template contract\n     */\n    function deployStatic(bytes32 salt_, bytes calldata initCallData_)\n        public\n        onlyOwner\n        returns (address contractAddr)\n    {\n        contractAddr = _deployStatic(salt_, initCallData_);\n    }\n\n    /**\n     * @dev deployTemplate deploys a template contract with the universal code copy constructor that\n     * deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\n     * @param deployCode_ Hex encoded state with the deploymentCode + (constructor args appended if any)\n     * @return contractAddr the address of the deployed template contract\n     */\n    function deployTemplate(bytes calldata deployCode_)\n        public\n        onlyOwner\n        returns (address contractAddr)\n    {\n        contractAddr = _deployTemplate(deployCode_);\n    }\n\n    /**\n     * @dev initializeContract allows the owner/delegator to initialize contracts deployed via factory\n     * @param contract_ address of the contract that will be initialized\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * deployed contract\n     */\n    function initializeContract(address contract_, bytes calldata initCallData_)\n        public\n        onlyOwnerOrDelegator\n    {\n        _initializeContract(contract_, initCallData_);\n    }\n\n    /**\n     * @dev multiCall allows EOA to make multiple function calls within a single transaction\n     * impersonating the factory\n     * @param cdata_: array of hex encoded state with the function calls (function signature + arguments)\n     */\n    function multiCall(bytes[] calldata cdata_) public onlyOwner {\n        _multiCall(cdata_);\n    }\n\n    /**\n     * @dev upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n     * @param newImpl_ address of the new contract that contains the new implementation logic\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * new implementation contract\n     */\n    function upgradeProxy(\n        bytes32 salt_,\n        address newImpl_,\n        bytes calldata initCallData_\n    ) public onlyOwner {\n        _upgradeProxy(salt_, newImpl_, initCallData_);\n    }\n}"
      }
    },
    "settings": {
      "outputSelection": {
        "*": {
          "*": [
            "metadata",
            "evm.bytecode",
            "evm.bytecode.sourceMap",
            "abi",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        },
        "def": {
          "MyContract": [
            "abi",
            "evm.bytecode.opcodes"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      },
      "optimizer": {
        "enabled": true,
        "runs": 20000000
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/DeterministicAddress.sol": {
        "DeterministicAddress": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_factory",
                  "type": "address"
                }
              ],
              "name": "getMetamorphicContractAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)",
            "kind": "dev",
            "methods": {},
            "title": "DeterministicAddress",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "getMetamorphicContractAddress(bytes32,address)": "8653a465"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getMetamorphicContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DeterministicAddress\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeterministicAddress.sol\":\"DeterministicAddress\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/ProxyFactory.sol": {
        "ProxyFactory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "Deployed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedProxy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedRaw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedStatic",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedTemplate",
              "type": "event"
            },
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value_",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "cdata_",
                  "type": "bytes"
                }
              ],
              "name": "callAny",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "contracts",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "contracts_",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target_",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "cdata_",
                  "type": "bytes"
                }
              ],
              "name": "delegateCallAny",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "delegator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "delegator_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "deployCode_",
                  "type": "bytes"
                }
              ],
              "name": "deployCreate",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value_",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt_",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "deployCode_",
                  "type": "bytes"
                }
              ],
              "name": "deployCreate2",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "salt_",
                  "type": "bytes32"
                }
              ],
              "name": "deployProxy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "salt_",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "initCallData_",
                  "type": "bytes"
                }
              ],
              "name": "deployStatic",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "deployCode_",
                  "type": "bytes"
                }
              ],
              "name": "deployTemplate",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getImplementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_factory",
                  "type": "address"
                }
              ],
              "name": "getMetamorphicContractAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNumContracts",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "contract_",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initCallData_",
                  "type": "bytes"
                }
              ],
              "name": "initializeContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "salt_",
                  "type": "bytes32"
                }
              ],
              "name": "lookup",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "cdata_",
                  "type": "bytes[]"
                }
              ],
              "name": "multiCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newDelegator_",
                  "type": "address"
                }
              ],
              "name": "setDelegator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementationAddress_",
                  "type": "address"
                }
              ],
              "name": "setImplementation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner_",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "salt_",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "newImpl_",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initCallData_",
                  "type": "bytes"
                }
              ],
              "name": "upgradeProxy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "custom:salt": "ProxyFactory",
            "kind": "dev",
            "methods": {
              "callAny(address,uint256,bytes)": {
                "details": "callAny allows EOA to call function impersonating the factory address",
                "params": {
                  "cdata_": ": Hex encoded state with function signature + arguments of the target function to be called",
                  "target_": ": the address of the contract to be called",
                  "value_": ": value in WEIs to send together the call"
                }
              },
              "constructor": {
                "details": "The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory."
              },
              "contracts()": {
                "details": "contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory",
                "returns": {
                  "contracts_": "the array of salts associated with all the contracts deployed with this factory"
                }
              },
              "delegateCallAny(address,bytes)": {
                "details": "delegateCallAny allows EOA to call a function in a contract without impersonating the factory",
                "params": {
                  "cdata_": ": Hex encoded state with function signature + arguments of the target function to be called",
                  "target_": ": the address of the contract to be called"
                }
              },
              "delegator()": {
                "details": "delegator is public getter function for the _delegator account address",
                "returns": {
                  "delegator_": "address of the delegator account"
                }
              },
              "deployCreate(bytes)": {
                "details": "deployCreate allows the owner to deploy raw contracts through the factory using non-deterministic address generation (create OpCode)",
                "params": {
                  "deployCode_": "Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)"
                },
                "returns": {
                  "contractAddr": "the deployed contract address"
                }
              },
              "deployCreate2(uint256,bytes32,bytes)": {
                "details": "deployCreate2 allows the owner to deploy contracts with deterministic address through the factory",
                "params": {
                  "deployCode_": "Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)",
                  "salt_": "salt used to determine the final determinist address for the deployed contract",
                  "value_": "endowment value in WEIS for the created contract"
                },
                "returns": {
                  "contractAddr": "the deployed contract address"
                }
              },
              "deployProxy(bytes32)": {
                "details": "deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.",
                "params": {
                  "salt_": "salt used to determine the final determinist address for the deployed contract"
                }
              },
              "deployStatic(bytes32,bytes)": {
                "details": "deployStatic finishes the deployment started with the deployTemplate of a contract with determinist address. This function call any initialize() function in the deployed contract in case the arguments are provided. Should be called after deployTemplate.",
                "params": {
                  "initCallData_": "Hex encoded initialization function signature + parameters to initialize the deployed contract",
                  "salt_": "salt used to determine the final determinist address for the deployed contract"
                },
                "returns": {
                  "contractAddr": "the address of the deployed template contract"
                }
              },
              "deployTemplate(bytes)": {
                "details": "deployTemplate deploys a template contract with the universal code copy constructor that deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.",
                "params": {
                  "deployCode_": "Hex encoded state with the deploymentCode + (constructor args appended if any)"
                },
                "returns": {
                  "contractAddr": "the address of the deployed template contract"
                }
              },
              "getImplementation()": {
                "details": "getImplementation is public getter function for the _owner account address"
              },
              "getNumContracts()": {
                "details": "getNumContracts getter function for retrieving the total number of contracts deployed with this factory",
                "returns": {
                  "_0": "the length of the contract array"
                }
              },
              "initializeContract(address,bytes)": {
                "details": "initializeContract allows the owner/delegator to initialize contracts deployed via factory",
                "params": {
                  "contract_": "address of the contract that will be initialized",
                  "initCallData_": "Hex encoded initialization function signature + parameters to initialize the deployed contract"
                }
              },
              "lookup(bytes32)": {
                "details": "lookup allows anyone interacting with the contract to get the address of contract specified by its name_",
                "params": {
                  "salt_": ": Custom NatSpec tag @custom:salt at the top of the contract solidity file"
                }
              },
              "multiCall(bytes[])": {
                "details": "multiCall allows EOA to make multiple function calls within a single transaction impersonating the factory",
                "params": {
                  "cdata_": ": array of hex encoded state with the function calls (function signature + arguments)"
                }
              },
              "owner()": {
                "details": "owner is public getter function for the _owner account address",
                "returns": {
                  "owner_": "address of the owner account"
                }
              },
              "setDelegator(address)": {
                "details": "Sets the new delegator",
                "params": {
                  "newDelegator_": ": address of the new delegator"
                }
              },
              "setImplementation(address)": {
                "details": "Sets a new implementation address",
                "params": {
                  "newImplementationAddress_": ": address of the contract with the new implementation"
                }
              },
              "setOwner(address)": {
                "details": "Sets the new owner",
                "params": {
                  "newOwner_": ": address of the new owner"
                }
              },
              "upgradeProxy(bytes32,address,bytes)": {
                "details": "upgradeProxy updates the implementation/logic address of an already deployed proxy contract.",
                "params": {
                  "initCallData_": "Hex encoded initialization function signature + parameters to initialize the new implementation contract",
                  "newImpl_": "address of the new contract that contains the new implementation logic",
                  "salt_": "salt used to determine the final determinist address for the deployed proxy contract"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_382": {
                  "entryPoint": null,
                  "id": 382,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_51": {
                  "entryPoint": null,
                  "id": 51,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_encode_tuple_packed_t_bytes8_t_bytes_memory_ptr_t_bytes32__to_t_bytes8_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 187,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:664:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "205:457:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "222:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "231:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "251:3:6",
                                                    "type": "",
                                                    "value": "192"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "256:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "247:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "247:11:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "260:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "243:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "243:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "239:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "239:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "227:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "227:37:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "215:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "215:50:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "215:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "274:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "294:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "288:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "288:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "278:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "310:10:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "319:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "314:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "381:85:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "410:3:6"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "415:1:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "406:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "406:11:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "419:1:6",
                                              "type": "",
                                              "value": "8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "402:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "402:19:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value1",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "437:6:6"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "445:1:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "433:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "433:14:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "449:4:6",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "429:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "429:25:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "423:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "423:32:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "395:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "395:61:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "395:61:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "343:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "337:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "337:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "351:21:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "353:17:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "362:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "365:4:6",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "353:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "333:3:6",
                                "statements": []
                              },
                              "src": "329:137:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "500:59:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "529:3:6"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "534:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "525:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "525:16:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "543:1:6",
                                              "type": "",
                                              "value": "8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "521:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "521:24:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "547:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "514:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "514:35:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "514:35:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "481:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "484:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "478:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "478:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "475:84:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "568:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "582:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "587:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "578:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "578:16:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "572:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "614:2:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "618:1:6",
                                        "type": "",
                                        "value": "8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "610:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "610:10:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "622:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "603:26:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "603:26:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "638:18:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "649:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "653:2:6",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:11:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "638:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes8_t_bytes_memory_ptr_t_bytes32__to_t_bytes8_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "165:3:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "170:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "178:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "186:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "197:3:6",
                            "type": ""
                          }
                        ],
                        "src": "14:648:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes8_t_bytes_memory_ptr_t_bytes32__to_t_bytes8_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, not(sub(shl(192, 1), 1))))\n        let length := mload(value1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 8), mload(add(add(value1, i), 0x20)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 8), 0)\n        }\n        let _1 := add(pos, length)\n        mstore(add(_1, 8), value2)\n        end := add(_1, 40)\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a06040523480156200001157600080fd5b506040516000906738585839386009f360c01b906200003360208201620000ad565b601f1982820381018352601f9091011660408190526200005a9291903090602001620000bb565b604051602081830303815290604052905060008151602083016000f090508062000088573d6000803e3d6000fd5b6001600160a01b031660805250600080546001600160a01b0319163317905562000117565b61024680620017b483390190565b6001600160c01b0319841681528251600090815b81811015620000ee5760208187018101516008868401015201620000cf565b8181111562000101576000600883860101525b5060089201918201929092526028019392505050565b608051611681620001336000396000610e2d01526116816000f3fe60806040526004361061015f5760003560e01c806383cd9cc3116100c0578063cfe10b3011610074578063e1d7a8e411610059578063e1d7a8e41461047f578063f39ec1f71461049f578063fa481da5146104bf5761015f565b8063cfe10b3014610441578063d784d4261461045f5761015f565b80638da5cb5b116100a55780638da5cb5b146103c0578063aaf10f42146103eb578063ce9b7930146104165761015f565b806383cd9cc3146102bd5780638653a465146102dd5761015f565b8063348a0cdc116101175780634713ee7a116100fc5780634713ee7a1461027557806356f2a761146102885780636c0f79b61461029b5761015f565b8063348a0cdc1461023557806339cab472146102555761015f565b806313af40351161014857806313af4035146101ab57806317cff2c5146101cb57806327fe1822146102155761015f565b8063043c94141461017657806312e6bf6a14610198575b34801561016b57600080fd5b506003543d5260203df35b34801561018257600080fd5b50610196610191366004611247565b6104df565b005b6101966101a63660046112a3565b61051f565b3480156101b757600080fd5b506101966101c63660046112e7565b6105a5565b3480156101d757600080fd5b506101eb6101e6366004611304565b61061a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561022157600080fd5b506101eb610230366004611304565b61065b565b34801561024157600080fd5b50610196610250366004611346565b610695565b34801561026157600080fd5b506101eb6102703660046113bb565b6106d1565b6101966102833660046113d4565b610710565b6101eb610296366004611429565b6107b0565b3480156102a757600080fd5b506102b06107f5565b60405161020c9190611464565b3480156102c957600080fd5b506101966102d83660046112e7565b61084d565b3480156102e957600080fd5b506101eb6102f83660046114a8565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b3480156103cc57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166101eb565b3480156103f757600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff166101eb565b34801561042257600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166101eb565b34801561044d57600080fd5b5060025460405190815260200161020c565b34801561046b57600080fd5b5061019661047a3660046112e7565b6108c2565b34801561048b57600080fd5b5061019661049a3660046113d4565b610959565b3480156104ab57600080fd5b506101eb6104ba3660046113bb565b6109b9565b3480156104cb57600080fd5b506101eb6104da3660046114d8565b610a62565b33301480610504575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61050d57600080fd5b61051984848484610aa5565b50505050565b33301480610544575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61054d57600080fd5b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350610596925087915086905083610c04565b61059e610c21565b5050505050565b333014806105ca575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6105d357600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600033301480610641575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61064a57600080fd5b6106548383610c2b565b9392505050565b600033301480610682575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61068b57600080fd5b6106548383610d20565b333014806106ba575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6106c357600080fd5b6106cd8282610d97565b5050565b6000333014806106f8575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61070157600080fd5b61070a82610e28565b92915050565b33301480610735575060005473ffffffffffffffffffffffffffffffffffffffff1633145b80610757575060015473ffffffffffffffffffffffffffffffffffffffff1633145b61076057600080fd5b600082828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506107a89250869150839050610f12565b610519610c21565b6000333014806107d7575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6107e057600080fd5b6107ec85858585610f2e565b95945050505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561084357602002820191906000526020600020905b81548152602001906001019080831161082f575b5050505050905090565b33301480610872575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61087b57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b333014806108e7575060005473ffffffffffffffffffffffffffffffffffffffff1633145b80610909575060015473ffffffffffffffffffffffffffffffffffffffff1633145b61091257600080fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3330148061097e575060005473ffffffffffffffffffffffffffffffffffffffff1633145b806109a0575060015473ffffffffffffffffffffffffffffffffffffffff1633145b6109a957600080fd5b6109b4838383610feb565b505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018490527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be605580840191909152835180840390910181526075909201909252805191012060009061070a565b600033301480610a89575060005473ffffffffffffffffffffffffffffffffffffffff1633145b610a9257600080fd5b610a9d848484611020565b949350505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018790527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be6055808401919091528351808403909101815260759092019092528051910120610b508185611139565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16630cbcae706040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd6919061150b565b73ffffffffffffffffffffffffffffffffffffffff1614610bf957610bf9611528565b61059e818484610feb565b805181602001600080838387895af161059e573d6000803e3d6000fd5b3d6000803e3d6000f35b6000604051602883018101604052807f38585839386009f30000000000000000000000000000000000000000000000008152600881019050838582378381019050308152602081019050818103826000f092505050610c88813b90565b610c9157600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527f6cd94ea1c5d9f99038bb4629d8a759399654d3861b73bf3a2b0cf484dae721389060200160405180910390a1600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905592915050565b600060405180838582378301818103826000f092505050610d3f813b90565b610d4857600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a192915050565b60005b81811015610e1f576000838383818110610db657610db6611557565b9050602002810190610dc89190611586565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939450610e0c933093509150849050610c04565b5080610e17816115eb565b915050610d9a565b506106cd610c21565b6000807f000000000000000000000000000000000000000000000000000000000000000090508060035560405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152836017826000f5925050813b610e8e57600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0183905560405173ffffffffffffffffffffffffffffffffffffffff831681527f06690e5b52be10a3d5820ec875c3dd3327f3077954a09f104201e40e5f7082c69060200160405180910390a150919050565b8051816020016000808383875af4610519573d6000803e3d6000fd5b600060405180838582378301858282038389f59250505073ffffffffffffffffffffffffffffffffffffffff8116610f6557600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a1949350505050565b80156109b4576040518082016040528183823760008083836000885af1610519576040519050803d016040523d6000823e3d81fd5b600060405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152846017826000f59150503d15611063573d6000803e3d6000fd5b803b1581151715611098577f537461746963206465706c6f79206661696c656400000000000000000000000060005260206000fd5b81156110a9576110a9818484610feb565b803b6110b457600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fe8b9cb7d60827a7d55e211f1382dd0f129adb541af9fe45a09ab4a18b76e7c659060200160405180910390a19392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff83166024808301919091528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fca11c0de00000000000000000000000000000000000000000000000000000000178152815160009182919082875af16109b4576040513d81016040523d6000823e3d81fd5b73ffffffffffffffffffffffffffffffffffffffff811681146111fb57600080fd5b50565b60008083601f84011261121057600080fd5b50813567ffffffffffffffff81111561122857600080fd5b60208301915083602082850101111561124057600080fd5b9250929050565b6000806000806060858703121561125d57600080fd5b84359350602085013561126f816111d9565b9250604085013567ffffffffffffffff81111561128b57600080fd5b611297878288016111fe565b95989497509550505050565b600080600080606085870312156112b957600080fd5b84356112c4816111d9565b935060208501359250604085013567ffffffffffffffff81111561128b57600080fd5b6000602082840312156112f957600080fd5b8135610654816111d9565b6000806020838503121561131757600080fd5b823567ffffffffffffffff81111561132e57600080fd5b61133a858286016111fe565b90969095509350505050565b6000806020838503121561135957600080fd5b823567ffffffffffffffff8082111561137157600080fd5b818501915085601f83011261138557600080fd5b81358181111561139457600080fd5b8660208260051b85010111156113a957600080fd5b60209290920196919550909350505050565b6000602082840312156113cd57600080fd5b5035919050565b6000806000604084860312156113e957600080fd5b83356113f4816111d9565b9250602084013567ffffffffffffffff81111561141057600080fd5b61141c868287016111fe565b9497909650939450505050565b6000806000806060858703121561143f57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561128b57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561149c57835183529284019291840191600101611480565b50909695505050505050565b600080604083850312156114bb57600080fd5b8235915060208301356114cd816111d9565b809150509250929050565b6000806000604084860312156114ed57600080fd5b83359250602084013567ffffffffffffffff81111561141057600080fd5b60006020828403121561151d57600080fd5b8151610654816111d9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115bb57600080fd5b83018035915067ffffffffffffffff8211156115d657600080fd5b60200191503681900382131561124057600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611644577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212202ae784101319c6158f5ce53d62933e1f9796ffbe0f76c7f3c88007c1e28de5a164736f6c634300080b003360a060405234801561001057600080fd5b503360805260805161021761002f6000396000607901526102176000f3fe6080604052600436106100225760003560e01c80630cbcae701461003957610031565b366100315761002f610077565b005b61002f610077565b34801561004557600080fd5b5061004e61019e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610169565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5473ffffffffffffffffffffffffffffffffffffffff600435169060a01c6bca11c0de15dead10cced00001415610119577f696d706c6f63000000000000000000000000000000000000000000000000000060005260206000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff55005b60405136810160405236600082376000803683600019545af43d6000833e80610164573d82fd5b503d81f35b803314156101935760243614156101935763ca11c0de60003560e01c14156101935761019361009d565b61019b61013d565b50565b600073ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff541660005260206000f3fea26469706673582212204d2fc8317b6216965fbf33d316516c31e54e3ccc8875a5f50bba448cfefae1db64736f6c634300080b0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH8 0x38585839386009F3 PUSH1 0xC0 SHL SWAP1 PUSH3 0x33 PUSH1 0x20 DUP3 ADD PUSH3 0xAD JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5A SWAP3 SWAP2 SWAP1 ADDRESS SWAP1 PUSH1 0x20 ADD PUSH3 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP DUP1 PUSH3 0x88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x117 JUMP JUMPDEST PUSH2 0x246 DUP1 PUSH3 0x17B4 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP5 AND DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xEE JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x8 DUP7 DUP5 ADD ADD MSTORE ADD PUSH3 0xCF JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x101 JUMPI PUSH1 0x0 PUSH1 0x8 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x8 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x28 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1681 PUSH3 0x133 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xE2D ADD MSTORE PUSH2 0x1681 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83CD9CC3 GT PUSH2 0xC0 JUMPI DUP1 PUSH4 0xCFE10B30 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xE1D7A8E4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE1D7A8E4 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xF39EC1F7 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xFA481DA5 EQ PUSH2 0x4BF JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0xCFE10B30 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xD784D426 EQ PUSH2 0x45F JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xCE9B7930 EQ PUSH2 0x416 JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x83CD9CC3 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x8653A465 EQ PUSH2 0x2DD JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x348A0CDC GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x4713EE7A GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4713EE7A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x56F2A761 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6C0F79B6 EQ PUSH2 0x29B JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x348A0CDC EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x39CAB472 EQ PUSH2 0x255 JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x17CFF2C5 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x27FE1822 EQ PUSH2 0x215 JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x43C9414 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x12E6BF6A EQ PUSH2 0x198 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD RETURNDATASIZE MSTORE PUSH1 0x20 RETURNDATASIZE RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4DA CALLDATASIZE PUSH1 0x4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x504 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x519 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x544 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x596 SWAP3 POP DUP8 SWAP2 POP DUP7 SWAP1 POP DUP4 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x59E PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x5CA JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x641 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 DUP4 DUP4 PUSH2 0xC2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x682 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 DUP4 DUP4 PUSH2 0xD20 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x6BA JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x6F8 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0xE28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x735 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST DUP1 PUSH2 0x757 JUMPI POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x7A8 SWAP3 POP DUP7 SWAP2 POP DUP4 SWAP1 POP PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x519 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x7D7 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7EC DUP6 DUP6 DUP6 DUP6 PUSH2 0xF2E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x843 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x82F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x872 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x8E7 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST DUP1 PUSH2 0x909 JUMPI POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x97E JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST DUP1 PUSH2 0x9A0 JUMPI POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 DUP4 DUP4 DUP4 PUSH2 0xFEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0xA89 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9D DUP5 DUP5 DUP5 PUSH2 0x1020 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xB50 DUP2 DUP6 PUSH2 0x1139 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBCAE70 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF9 JUMPI PUSH2 0xBF9 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x59E DUP2 DUP5 DUP5 PUSH2 0xFEB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP4 DUP4 DUP8 DUP10 GAS CALL PUSH2 0x59E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x28 DUP4 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x38585839386009F3000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x8 DUP2 ADD SWAP1 POP DUP4 DUP6 DUP3 CALLDATACOPY DUP4 DUP2 ADD SWAP1 POP ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP2 DUP2 SUB DUP3 PUSH1 0x0 CREATE SWAP3 POP POP POP PUSH2 0xC88 DUP2 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x6CD94EA1C5D9F99038BB4629D8A759399654D3861B73BF3A2B0CF484DAE72138 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP2 DUP2 SUB DUP3 PUSH1 0x0 CREATE SWAP3 POP POP POP PUSH2 0xD3F DUP2 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE1F JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xDB6 JUMPI PUSH2 0xDB6 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP5 POP PUSH2 0xE0C SWAP4 ADDRESS SWAP4 POP SWAP2 POP DUP5 SWAP1 POP PUSH2 0xC04 JUMP JUMPDEST POP DUP1 PUSH2 0xE17 DUP2 PUSH2 0x15EB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD9A JUMP JUMPDEST POP PUSH2 0x6CD PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH23 0x6020363636335AFA1536363636515AF43D36363E3D36F3 PUSH1 0x48 SHL DUP2 MSTORE DUP4 PUSH1 0x17 DUP3 PUSH1 0x0 CREATE2 SWAP3 POP POP DUP2 EXTCODESIZE PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0x6690E5B52BE10A3D5820EC875C3DD3327F3077954A09F104201E40E5F7082C6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP4 DUP4 DUP8 GAS DELEGATECALL PUSH2 0x519 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP6 DUP3 DUP3 SUB DUP4 DUP10 CREATE2 SWAP3 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD DUP1 DUP3 ADD PUSH1 0x40 MSTORE DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP9 GAS CALL PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP1 POP DUP1 RETURNDATASIZE ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH23 0x6020363636335AFA1536363636515AF43D36363E3D36F3 PUSH1 0x48 SHL DUP2 MSTORE DUP5 PUSH1 0x17 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP RETURNDATASIZE ISZERO PUSH2 0x1063 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO DUP2 ISZERO OR ISZERO PUSH2 0x1098 JUMPI PUSH32 0x537461746963206465706C6F79206661696C6564000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x10A9 JUMPI PUSH2 0x10A9 DUP2 DUP5 DUP5 PUSH2 0xFEB JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x10B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xE8B9CB7D60827A7D55E211F1382DD0F129ADB541AF9FE45A09AB4A18B76E7C65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCA11C0DE00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE DUP2 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 DUP3 DUP8 GAS CALL PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP2 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x126F DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1297 DUP8 DUP3 DUP9 ADD PUSH2 0x11FE JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x12C4 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x654 DUP2 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133A DUP6 DUP3 DUP7 ADD PUSH2 0x11FE JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13F4 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141C DUP7 DUP3 DUP8 ADD PUSH2 0x11FE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x149C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1480 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14CD DUP2 PUSH2 0x11D9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x654 DUP2 PUSH2 0x11D9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1644 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xE7 DUP5 LT SGT NOT 0xC6 ISZERO DUP16 0x5C 0xE5 RETURNDATASIZE PUSH3 0x933E1F SWAP8 SWAP7 SELFDESTRUCT 0xBE 0xF PUSH23 0xC7F3C88007C1E28DE5A164736F6C634300080B003360A0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x217 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x79 ADD MSTORE PUSH2 0x217 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBCAE70 EQ PUSH2 0x39 JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F PUSH2 0x77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH2 0x169 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND SWAP1 PUSH1 0xA0 SHR PUSH12 0xCA11C0DE15DEAD10CCED0000 EQ ISZERO PUSH2 0x119 JUMPI PUSH32 0x696D706C6F630000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE DUP2 ADD PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 PUSH1 0x0 NOT SLOAD GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 PUSH2 0x164 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN JUMPDEST DUP1 CALLER EQ ISZERO PUSH2 0x193 JUMPI PUSH1 0x24 CALLDATASIZE EQ ISZERO PUSH2 0x193 JUMPI PUSH4 0xCA11C0DE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR EQ ISZERO PUSH2 0x193 JUMPI PUSH2 0x193 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x19B PUSH2 0x13D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD AND PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0x2F 0xC8 BALANCE PUSH28 0x6216965FBF33D316516C31E54E3CCC8875A5F50BBA448CFEFAE1DB64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "299:6381:1:-:0;;;937:35;;;;;;;;;-1:-1:-1;2414:24:2;;2269:28;;-1:-1:-1;;;2378:22:2;2414:24;;;;;:::i;:::-;-1:-1:-1;;2414:24:2;;;;;;;;;;;;;;;;2300:202;;;2414:24;2484:4;;2414:24;2300:202;;:::i;:::-;;;;;;;;;;;;;2269:233;;2617:12;2764:15;2758:22;2751:4;2734:15;2730:26;2727:1;2720:61;2712:69;;2804:4;2794:263;;2936:16;2930:4;2924;2909:44;3026:16;3020:4;3013:30;2794:263;-1:-1:-1;;;;;3134:21:2;;;-1:-1:-1;3216:6:2;:19;;-1:-1:-1;;;;;;3216:19:2;3225:10;3216:19;;;299:6381:1;;;;;;;;;;:::o;14:648:6:-;-1:-1:-1;;;;;;227:37:6;;215:50;;288:13;;197:3;;;329:137;343:6;340:1;337:13;329:137;;;449:4;433:14;;;429:25;;423:32;419:1;406:11;;;402:19;395:61;358:12;329:137;;;484:6;481:1;478:13;475:84;;;547:1;543;534:6;529:3;525:16;521:24;514:35;475:84;-1:-1:-1;618:1:6;578:16;;610:10;;;603:26;;;;653:2;645:11;;14:648;-1:-1:-1;;;14:648:6:o;:::-;299:6381:1;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_388": {
                  "entryPoint": null,
                  "id": 388,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@__upgrade_873": {
                  "entryPoint": 4409,
                  "id": 873,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_callAny_511": {
                  "entryPoint": 3076,
                  "id": 511,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_delegateCallAny_521": {
                  "entryPoint": 3858,
                  "id": 521,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_deployCreate2_581": {
                  "entryPoint": 3886,
                  "id": 581,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@_deployCreate_546": {
                  "entryPoint": 3360,
                  "id": 546,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_deployProxy_616": {
                  "entryPoint": 3624,
                  "id": 616,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@_deployStatic_660": {
                  "entryPoint": 4128,
                  "id": 660,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@_deployTemplate_689": {
                  "entryPoint": 3115,
                  "id": 689,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_extCodeSize_792": {
                  "entryPoint": null,
                  "id": 792,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@_initializeContract_699": {
                  "entryPoint": 4075,
                  "id": 699,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_multiCall_738": {
                  "entryPoint": 3479,
                  "id": 738,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_returnAvailableData_798": {
                  "entryPoint": 3105,
                  "id": 798,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_upgradeProxy_780": {
                  "entryPoint": 2725,
                  "id": 780,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@callAny_77": {
                  "entryPoint": 1311,
                  "id": 77,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@contracts_489": {
                  "entryPoint": 2037,
                  "id": 489,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@delegateCallAny_100": {
                  "entryPoint": 1808,
                  "id": 100,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@delegator_477": {
                  "entryPoint": null,
                  "id": 477,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@deployCreate2_138": {
                  "entryPoint": 1968,
                  "id": 138,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@deployCreate_115": {
                  "entryPoint": 1627,
                  "id": 115,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@deployProxy_155": {
                  "entryPoint": 1745,
                  "id": 155,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@deployStatic_175": {
                  "entryPoint": 2658,
                  "id": 175,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@deployTemplate_192": {
                  "entryPoint": 1562,
                  "id": 192,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getImplementation_455": {
                  "entryPoint": null,
                  "id": 455,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getMetamorphicContractAddress_35": {
                  "entryPoint": null,
                  "id": 35,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getNumContracts_499": {
                  "entryPoint": null,
                  "id": 499,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@initializeContract_208": {
                  "entryPoint": 2393,
                  "id": 208,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@lookup_446": {
                  "entryPoint": 2489,
                  "id": 446,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@multiCall_222": {
                  "entryPoint": 1685,
                  "id": 222,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@owner_466": {
                  "entryPoint": null,
                  "id": 466,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@setDelegator_427": {
                  "entryPoint": 2125,
                  "id": 427,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setImplementation_401": {
                  "entryPoint": 2242,
                  "id": 401,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setOwner_414": {
                  "entryPoint": 1445,
                  "id": 414,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@upgradeProxy_241": {
                  "entryPoint": 1247,
                  "id": 241,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 4606,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 4839,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 5387,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
                  "entryPoint": 5076,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
                  "entryPoint": 4771,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr": {
                  "entryPoint": 4934,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 5051,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_address": {
                  "entryPoint": 5288,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr": {
                  "entryPoint": 4679,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr": {
                  "entryPoint": 5336,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_bytes_calldata_ptr": {
                  "entryPoint": 4868,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_bytes32t_bytes_calldata_ptr": {
                  "entryPoint": 5161,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5220,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "access_calldata_tail_t_bytes_calldata_ptr": {
                  "entryPoint": 5510,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "increment_t_uint256": {
                  "entryPoint": 5611,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x01": {
                  "entryPoint": 5416,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 5463,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 4569,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8358:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:109:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "100:42:6",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:54:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:65:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "72:73:6"
                              },
                              "nodeType": "YulIf",
                              "src": "69:93:6"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48:5:6",
                            "type": ""
                          }
                        ],
                        "src": "14:154:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "245:275:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "294:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "303:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "306:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "296:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "296:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "296:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "273:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "281:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "269:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "269:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "255:55:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "319:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "342:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "329:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "329:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "319:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "392:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "401:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "404:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "394:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "394:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "394:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "372:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "361:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "361:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "358:50:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "417:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "433:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "441:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "429:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "429:17:6"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "417:8:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "498:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "507:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "510:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "500:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "500:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "500:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "469:6:6"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "477:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "465:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "465:19:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "486:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "461:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "461:30:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "458:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "458:39:6"
                              },
                              "nodeType": "YulIf",
                              "src": "455:59:6"
                            }
                          ]
                        },
                        "name": "abi_decode_bytes_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "208:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "216:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "224:8:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "234:6:6",
                            "type": ""
                          }
                        ],
                        "src": "173:347:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "648:489:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "694:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "703:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "706:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "696:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "696:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "696:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "669:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "678:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "665:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "665:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "690:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "661:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "661:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "658:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "719:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "742:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "729:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "729:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "719:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "761:45:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "791:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "802:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "787:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "787:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "774:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "774:32:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "765:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "840:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "815:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "815:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "855:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "865:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "855:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "879:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "910:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "921:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "906:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "906:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "893:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "893:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "883:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "968:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "977:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "980:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "970:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "970:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "970:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "940:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "948:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "937:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "937:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "934:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "993:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1049:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1060:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1045:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1045:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1069:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "1019:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1019:58:6"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "997:8:6",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1007:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1086:18:6",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "1096:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1086:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1113:18:6",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "1123:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "590:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "601:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "613:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "621:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "629:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "637:6:6",
                            "type": ""
                          }
                        ],
                        "src": "525:612:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1265:489:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1311:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1320:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1323:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1313:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1313:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1313:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1286:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1295:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1282:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1282:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1307:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1278:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1278:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1275:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1336:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1362:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1349:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1349:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1340:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1406:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1381:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1381:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1381:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1421:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1431:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1421:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1445:42:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1472:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1483:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1468:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1468:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1455:32:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1496:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1527:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1538:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1523:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1523:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1510:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1510:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1500:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1585:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1594:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1597:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1587:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1587:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1587:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1557:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1565:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1554:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1554:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1551:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1610:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1666:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1677:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1662:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1662:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1686:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "1636:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1636:58:6"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1614:8:6",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1624:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1703:18:6",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "1713:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1703:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1730:18:6",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "1740:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1730:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1207:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1218:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1230:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1238:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1246:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1254:6:6",
                            "type": ""
                          }
                        ],
                        "src": "1142:612:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1829:177:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1875:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1884:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1887:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1877:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1877:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1877:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1850:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1859:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1846:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1846:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1871:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1842:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1842:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1839:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1900:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1926:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1913:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1913:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1904:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1970:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1945:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1945:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1945:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1985:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1995:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1985:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1795:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1806:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1818:6:6",
                            "type": ""
                          }
                        ],
                        "src": "1759:247:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2100:320:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2146:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2155:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2158:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2148:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2148:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2148:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2121:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2130:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2117:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2117:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2142:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2113:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2113:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2110:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2171:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2198:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2185:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2185:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2175:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2251:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2260:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2263:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2253:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2253:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2253:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2223:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2231:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2220:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2217:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2276:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2332:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2343:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2328:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2328:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2352:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "2302:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2302:58:6"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2280:8:6",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2290:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2369:18:6",
                              "value": {
                                "name": "value0_1",
                                "nodeType": "YulIdentifier",
                                "src": "2379:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2369:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2396:18:6",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "2406:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2396:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2058:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2069:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2081:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2089:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2011:409:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2526:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2536:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2548:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2559:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2544:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2544:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2536:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2578:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2593:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2601:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2589:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2589:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2571:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2571:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2571:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2495:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2506:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2517:4:6",
                            "type": ""
                          }
                        ],
                        "src": "2425:226:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2772:510:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2818:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2827:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2830:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2820:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2820:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2820:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2793:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2802:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2789:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2789:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2814:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2785:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2785:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2782:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2843:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2870:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2857:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2857:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2847:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2889:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2899:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2893:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2944:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2953:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2956:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2946:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2946:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2946:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2932:6:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2940:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2929:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2929:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2926:34:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2969:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2983:9:6"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2994:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2979:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2979:22:6"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "2973:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3049:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3058:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3061:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3051:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3051:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3051:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "3028:2:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3032:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3024:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3024:13:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3039:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3020:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3020:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3013:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3013:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3010:55:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3074:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3101:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3088:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3088:16:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3078:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3131:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3140:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3143:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3133:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3133:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3133:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3119:6:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3127:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3116:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3116:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3113:34:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3205:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3214:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3217:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3207:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3207:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3207:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "3170:2:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3178:1:6",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "3181:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3174:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3174:14:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3166:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3166:23:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3191:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3162:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3162:32:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3196:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3159:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3159:45:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3156:65:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3230:21:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3244:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3248:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3240:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3240:11:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3230:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3260:16:6",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3270:6:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3260:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2730:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2741:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2753:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2761:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2656:626:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3357:110:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3403:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3412:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3415:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3405:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3405:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3405:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3378:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3387:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3374:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3374:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3399:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3370:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3370:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3367:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3428:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3451:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3438:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3438:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3428:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3323:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3334:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3346:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3287:180:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3578:438:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3624:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3633:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3636:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3626:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3626:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3626:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3599:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3608:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3595:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3595:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3620:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3591:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3591:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3588:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3649:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3675:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3662:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3662:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3653:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3719:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3694:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3694:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3694:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3734:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3744:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3734:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3758:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3789:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3800:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3785:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3785:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3772:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3772:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3762:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3847:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3856:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3859:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3849:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3849:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3849:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3819:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3827:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3816:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3816:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3813:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3872:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3928:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3939:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3924:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3924:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3948:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "3898:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3898:58:6"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3876:8:6",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3886:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3965:18:6",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "3975:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3965:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3992:18:6",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "4002:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3992:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3528:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3539:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3551:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3559:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3567:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3472:544:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4144:422:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4190:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4199:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4202:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4192:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4192:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4192:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4165:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4174:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4161:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4161:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4186:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4157:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4157:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4154:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4215:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4238:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4225:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4225:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4215:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4257:42:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4284:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4295:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4280:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4280:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4267:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4267:32:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4257:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4308:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4339:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4350:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4335:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4335:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4322:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4322:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4312:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4397:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4406:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4409:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4399:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4399:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4399:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4369:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4377:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4366:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4366:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4363:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4422:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4478:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4489:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4474:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4474:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4498:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "4448:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4448:58:6"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4426:8:6",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4436:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4515:18:6",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "4525:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4515:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4542:18:6",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "4552:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4542:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bytes32t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4086:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4097:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4109:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4117:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4125:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4133:6:6",
                            "type": ""
                          }
                        ],
                        "src": "4021:545:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4722:481:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4732:12:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4742:2:6",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4736:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4753:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4771:9:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4782:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4767:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4767:18:6"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4757:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4801:9:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4812:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4794:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4794:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4794:21:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4824:17:6",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "4835:6:6"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "4828:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4850:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4870:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4864:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4864:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4854:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4893:6:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4901:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4886:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4886:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4886:22:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4917:25:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4928:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4939:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4924:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4924:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4917:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4951:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4969:6:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4977:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4965:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4965:15:6"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "4955:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4989:10:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4998:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "4993:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5057:120:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5078:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "5089:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5083:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5083:13:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5071:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5071:26:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5071:26:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5110:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5121:3:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5126:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5117:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5117:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5110:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5142:25:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "5156:6:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5164:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5152:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5152:15:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5142:6:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5019:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5022:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5016:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5016:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5030:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5032:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5041:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5044:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5037:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5037:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5032:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5012:3:6",
                                "statements": []
                              },
                              "src": "5008:169:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5186:11:6",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5194:3:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5186:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4691:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4702:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4713:4:6",
                            "type": ""
                          }
                        ],
                        "src": "4571:632:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5295:228:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5341:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5350:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5353:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5343:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5343:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5343:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5316:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5325:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5312:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5312:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5337:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5308:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5308:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5305:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5366:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5389:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5376:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5376:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5366:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5408:45:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5438:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5449:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5434:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5434:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5421:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5421:32:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "5412:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5487:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5462:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5462:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5462:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5502:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5512:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5502:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5253:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5264:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5276:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5284:6:6",
                            "type": ""
                          }
                        ],
                        "src": "5208:315:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5629:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5639:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5651:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5662:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5647:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5647:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5639:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5681:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5692:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5674:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5674:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5674:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5598:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5609:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5620:4:6",
                            "type": ""
                          }
                        ],
                        "src": "5528:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5816:371:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5862:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5871:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5874:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5864:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5864:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5864:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5837:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5846:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5833:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5833:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5858:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5829:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5829:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5826:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5887:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5910:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5897:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5897:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5887:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5929:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5960:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5971:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5956:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5956:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5943:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5943:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5933:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6018:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6027:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6030:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6020:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6020:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6020:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5990:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5998:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5987:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5987:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5984:50:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6043:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6099:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6110:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6095:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6095:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6119:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "6069:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6069:58:6"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6047:8:6",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6057:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6136:18:6",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "6146:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6136:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6163:18:6",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "6173:8:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "6163:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5766:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5777:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5789:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5797:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5805:6:6",
                            "type": ""
                          }
                        ],
                        "src": "5710:477:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6468:315:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6485:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6490:66:6",
                                    "type": "",
                                    "value": "0xff00000000000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6478:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6478:79:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6478:79:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6577:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6582:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6573:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6573:11:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6594:2:6",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "6598:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "6590:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6590:15:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6607:66:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6586:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6586:88:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6566:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6566:109:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6566:109:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6695:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6700:2:6",
                                        "type": "",
                                        "value": "21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6691:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6691:12:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6705:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6684:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6684:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6684:28:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6732:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6737:2:6",
                                        "type": "",
                                        "value": "53"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6728:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6728:12:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6742:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6721:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6721:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6721:28:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6758:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6769:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6774:2:6",
                                    "type": "",
                                    "value": "85"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6765:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6765:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6758:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6428:3:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6433:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6441:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6449:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6460:3:6",
                            "type": ""
                          }
                        ],
                        "src": "6192:591:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6869:170:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6915:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6924:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6927:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6917:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6917:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6917:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6890:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6899:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6886:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6886:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6911:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6882:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6882:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "6879:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6940:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6959:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6953:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6953:16:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "6944:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7003:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "6978:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6978:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6978:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7018:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7028:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7018:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6835:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6846:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6858:6:6",
                            "type": ""
                          }
                        ],
                        "src": "6788:251:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7076:152:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7093:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7096:77:6",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7086:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7086:88:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7086:88:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7190:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7193:4:6",
                                    "type": "",
                                    "value": "0x01"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7183:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7183:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7183:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7214:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7217:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7207:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7207:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7207:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x01",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7044:184:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7265:152:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7282:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7285:77:6",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7275:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7275:88:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7275:88:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7379:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7382:4:6",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7372:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7372:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7372:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7403:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7406:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7396:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7396:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7396:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7233:184:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7516:486:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7526:51:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr_to_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7565:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7552:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7552:25:6"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "7530:18:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7725:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7734:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7737:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7727:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7727:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7727:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "7600:18:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7628:12:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7628:14:6"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "7644:8:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "7624:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7624:29:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7655:66:6",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7620:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7620:102:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "7596:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7596:127:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7589:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7589:135:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7586:155:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7750:47:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "7768:8:6"
                                  },
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7778:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7764:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7764:33:6"
                              },
                              "variables": [
                                {
                                  "name": "addr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7754:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7806:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7829:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7816:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7816:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7806:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7879:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7888:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7891:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7881:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7881:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7881:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7851:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7859:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7848:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7848:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7845:50:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7904:25:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7916:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7924:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7912:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7912:17:6"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7904:4:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7980:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7989:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7992:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7982:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7982:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7982:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7945:4:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "calldatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "7955:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7955:14:6"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7971:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7951:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7951:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7941:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7941:38:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7938:58:6"
                            }
                          ]
                        },
                        "name": "access_calldata_tail_t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "7473:8:6",
                            "type": ""
                          },
                          {
                            "name": "ptr_to_tail",
                            "nodeType": "YulTypedName",
                            "src": "7483:11:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "addr",
                            "nodeType": "YulTypedName",
                            "src": "7499:4:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "7505:6:6",
                            "type": ""
                          }
                        ],
                        "src": "7422:580:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8054:302:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8153:168:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8174:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8177:77:6",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8167:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8167:88:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8167:88:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8275:1:6",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8278:4:6",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8268:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8268:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8268:15:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8303:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8306:4:6",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8296:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8296:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8296:15:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8070:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8077:66:6",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "8067:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8067:77:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8064:257:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8330:20:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8341:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8348:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8337:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8337:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "8330:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8036:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "8046:3:6",
                            "type": ""
                          }
                        ],
                        "src": "8007:349:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0xff00000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 1), and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "268": [
                  {
                    "length": 32,
                    "start": 3629
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361061015f5760003560e01c806383cd9cc3116100c0578063cfe10b3011610074578063e1d7a8e411610059578063e1d7a8e41461047f578063f39ec1f71461049f578063fa481da5146104bf5761015f565b8063cfe10b3014610441578063d784d4261461045f5761015f565b80638da5cb5b116100a55780638da5cb5b146103c0578063aaf10f42146103eb578063ce9b7930146104165761015f565b806383cd9cc3146102bd5780638653a465146102dd5761015f565b8063348a0cdc116101175780634713ee7a116100fc5780634713ee7a1461027557806356f2a761146102885780636c0f79b61461029b5761015f565b8063348a0cdc1461023557806339cab472146102555761015f565b806313af40351161014857806313af4035146101ab57806317cff2c5146101cb57806327fe1822146102155761015f565b8063043c94141461017657806312e6bf6a14610198575b34801561016b57600080fd5b506003543d5260203df35b34801561018257600080fd5b50610196610191366004611247565b6104df565b005b6101966101a63660046112a3565b61051f565b3480156101b757600080fd5b506101966101c63660046112e7565b6105a5565b3480156101d757600080fd5b506101eb6101e6366004611304565b61061a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561022157600080fd5b506101eb610230366004611304565b61065b565b34801561024157600080fd5b50610196610250366004611346565b610695565b34801561026157600080fd5b506101eb6102703660046113bb565b6106d1565b6101966102833660046113d4565b610710565b6101eb610296366004611429565b6107b0565b3480156102a757600080fd5b506102b06107f5565b60405161020c9190611464565b3480156102c957600080fd5b506101966102d83660046112e7565b61084d565b3480156102e957600080fd5b506101eb6102f83660046114a8565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b3480156103cc57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166101eb565b3480156103f757600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff166101eb565b34801561042257600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166101eb565b34801561044d57600080fd5b5060025460405190815260200161020c565b34801561046b57600080fd5b5061019661047a3660046112e7565b6108c2565b34801561048b57600080fd5b5061019661049a3660046113d4565b610959565b3480156104ab57600080fd5b506101eb6104ba3660046113bb565b6109b9565b3480156104cb57600080fd5b506101eb6104da3660046114d8565b610a62565b33301480610504575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61050d57600080fd5b61051984848484610aa5565b50505050565b33301480610544575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61054d57600080fd5b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350610596925087915086905083610c04565b61059e610c21565b5050505050565b333014806105ca575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6105d357600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600033301480610641575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61064a57600080fd5b6106548383610c2b565b9392505050565b600033301480610682575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61068b57600080fd5b6106548383610d20565b333014806106ba575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6106c357600080fd5b6106cd8282610d97565b5050565b6000333014806106f8575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61070157600080fd5b61070a82610e28565b92915050565b33301480610735575060005473ffffffffffffffffffffffffffffffffffffffff1633145b80610757575060015473ffffffffffffffffffffffffffffffffffffffff1633145b61076057600080fd5b600082828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506107a89250869150839050610f12565b610519610c21565b6000333014806107d7575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6107e057600080fd5b6107ec85858585610f2e565b95945050505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561084357602002820191906000526020600020905b81548152602001906001019080831161082f575b5050505050905090565b33301480610872575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61087b57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b333014806108e7575060005473ffffffffffffffffffffffffffffffffffffffff1633145b80610909575060015473ffffffffffffffffffffffffffffffffffffffff1633145b61091257600080fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3330148061097e575060005473ffffffffffffffffffffffffffffffffffffffff1633145b806109a0575060015473ffffffffffffffffffffffffffffffffffffffff1633145b6109a957600080fd5b6109b4838383610feb565b505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018490527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be605580840191909152835180840390910181526075909201909252805191012060009061070a565b600033301480610a89575060005473ffffffffffffffffffffffffffffffffffffffff1633145b610a9257600080fd5b610a9d848484611020565b949350505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018790527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be6055808401919091528351808403909101815260759092019092528051910120610b508185611139565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16630cbcae706040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd6919061150b565b73ffffffffffffffffffffffffffffffffffffffff1614610bf957610bf9611528565b61059e818484610feb565b805181602001600080838387895af161059e573d6000803e3d6000fd5b3d6000803e3d6000f35b6000604051602883018101604052807f38585839386009f30000000000000000000000000000000000000000000000008152600881019050838582378381019050308152602081019050818103826000f092505050610c88813b90565b610c9157600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527f6cd94ea1c5d9f99038bb4629d8a759399654d3861b73bf3a2b0cf484dae721389060200160405180910390a1600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905592915050565b600060405180838582378301818103826000f092505050610d3f813b90565b610d4857600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a192915050565b60005b81811015610e1f576000838383818110610db657610db6611557565b9050602002810190610dc89190611586565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939450610e0c933093509150849050610c04565b5080610e17816115eb565b915050610d9a565b506106cd610c21565b6000807f000000000000000000000000000000000000000000000000000000000000000090508060035560405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152836017826000f5925050813b610e8e57600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0183905560405173ffffffffffffffffffffffffffffffffffffffff831681527f06690e5b52be10a3d5820ec875c3dd3327f3077954a09f104201e40e5f7082c69060200160405180910390a150919050565b8051816020016000808383875af4610519573d6000803e3d6000fd5b600060405180838582378301858282038389f59250505073ffffffffffffffffffffffffffffffffffffffff8116610f6557600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a1949350505050565b80156109b4576040518082016040528183823760008083836000885af1610519576040519050803d016040523d6000823e3d81fd5b600060405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152846017826000f59150503d15611063573d6000803e3d6000fd5b803b1581151715611098577f537461746963206465706c6f79206661696c656400000000000000000000000060005260206000fd5b81156110a9576110a9818484610feb565b803b6110b457600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fe8b9cb7d60827a7d55e211f1382dd0f129adb541af9fe45a09ab4a18b76e7c659060200160405180910390a19392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff83166024808301919091528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fca11c0de00000000000000000000000000000000000000000000000000000000178152815160009182919082875af16109b4576040513d81016040523d6000823e3d81fd5b73ffffffffffffffffffffffffffffffffffffffff811681146111fb57600080fd5b50565b60008083601f84011261121057600080fd5b50813567ffffffffffffffff81111561122857600080fd5b60208301915083602082850101111561124057600080fd5b9250929050565b6000806000806060858703121561125d57600080fd5b84359350602085013561126f816111d9565b9250604085013567ffffffffffffffff81111561128b57600080fd5b611297878288016111fe565b95989497509550505050565b600080600080606085870312156112b957600080fd5b84356112c4816111d9565b935060208501359250604085013567ffffffffffffffff81111561128b57600080fd5b6000602082840312156112f957600080fd5b8135610654816111d9565b6000806020838503121561131757600080fd5b823567ffffffffffffffff81111561132e57600080fd5b61133a858286016111fe565b90969095509350505050565b6000806020838503121561135957600080fd5b823567ffffffffffffffff8082111561137157600080fd5b818501915085601f83011261138557600080fd5b81358181111561139457600080fd5b8660208260051b85010111156113a957600080fd5b60209290920196919550909350505050565b6000602082840312156113cd57600080fd5b5035919050565b6000806000604084860312156113e957600080fd5b83356113f4816111d9565b9250602084013567ffffffffffffffff81111561141057600080fd5b61141c868287016111fe565b9497909650939450505050565b6000806000806060858703121561143f57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561128b57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561149c57835183529284019291840191600101611480565b50909695505050505050565b600080604083850312156114bb57600080fd5b8235915060208301356114cd816111d9565b809150509250929050565b6000806000604084860312156114ed57600080fd5b83359250602084013567ffffffffffffffff81111561141057600080fd5b60006020828403121561151d57600080fd5b8151610654816111d9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115bb57600080fd5b83018035915067ffffffffffffffff8211156115d657600080fd5b60200191503681900382131561124057600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611644577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212202ae784101319c6158f5ce53d62933e1f9796ffbe0f76c7f3c88007c1e28de5a164736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83CD9CC3 GT PUSH2 0xC0 JUMPI DUP1 PUSH4 0xCFE10B30 GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xE1D7A8E4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE1D7A8E4 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xF39EC1F7 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xFA481DA5 EQ PUSH2 0x4BF JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0xCFE10B30 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xD784D426 EQ PUSH2 0x45F JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xCE9B7930 EQ PUSH2 0x416 JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x83CD9CC3 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x8653A465 EQ PUSH2 0x2DD JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x348A0CDC GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x4713EE7A GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4713EE7A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x56F2A761 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6C0F79B6 EQ PUSH2 0x29B JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x348A0CDC EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x39CAB472 EQ PUSH2 0x255 JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x13AF4035 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x17CFF2C5 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x27FE1822 EQ PUSH2 0x215 JUMPI PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH4 0x43C9414 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x12E6BF6A EQ PUSH2 0x198 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD RETURNDATASIZE MSTORE PUSH1 0x20 RETURNDATASIZE RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1346 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1464 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4DA CALLDATASIZE PUSH1 0x4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x504 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x519 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x544 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x596 SWAP3 POP DUP8 SWAP2 POP DUP7 SWAP1 POP DUP4 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x59E PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x5CA JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x641 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 DUP4 DUP4 PUSH2 0xC2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x682 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 DUP4 DUP4 PUSH2 0xD20 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x6BA JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x6F8 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP3 PUSH2 0xE28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x735 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST DUP1 PUSH2 0x757 JUMPI POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x7A8 SWAP3 POP DUP7 SWAP2 POP DUP4 SWAP1 POP PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x519 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x7D7 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7EC DUP6 DUP6 DUP6 DUP6 PUSH2 0xF2E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x843 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x82F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x872 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x8E7 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST DUP1 PUSH2 0x909 JUMPI POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x97E JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST DUP1 PUSH2 0x9A0 JUMPI POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 DUP4 DUP4 DUP4 PUSH2 0xFEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0xA89 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9D DUP5 DUP5 DUP5 PUSH2 0x1020 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xB50 DUP2 DUP6 PUSH2 0x1139 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBCAE70 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x150B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF9 JUMPI PUSH2 0xBF9 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x59E DUP2 DUP5 DUP5 PUSH2 0xFEB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP4 DUP4 DUP8 DUP10 GAS CALL PUSH2 0x59E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x28 DUP4 ADD DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x38585839386009F3000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x8 DUP2 ADD SWAP1 POP DUP4 DUP6 DUP3 CALLDATACOPY DUP4 DUP2 ADD SWAP1 POP ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP2 DUP2 SUB DUP3 PUSH1 0x0 CREATE SWAP3 POP POP POP PUSH2 0xC88 DUP2 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x6CD94EA1C5D9F99038BB4629D8A759399654D3861B73BF3A2B0CF484DAE72138 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP2 DUP2 SUB DUP3 PUSH1 0x0 CREATE SWAP3 POP POP POP PUSH2 0xD3F DUP2 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE1F JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xDB6 JUMPI PUSH2 0xDB6 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP5 POP PUSH2 0xE0C SWAP4 ADDRESS SWAP4 POP SWAP2 POP DUP5 SWAP1 POP PUSH2 0xC04 JUMP JUMPDEST POP DUP1 PUSH2 0xE17 DUP2 PUSH2 0x15EB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD9A JUMP JUMPDEST POP PUSH2 0x6CD PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH23 0x6020363636335AFA1536363636515AF43D36363E3D36F3 PUSH1 0x48 SHL DUP2 MSTORE DUP4 PUSH1 0x17 DUP3 PUSH1 0x0 CREATE2 SWAP3 POP POP DUP2 EXTCODESIZE PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0x6690E5B52BE10A3D5820EC875C3DD3327F3077954A09F104201E40E5F7082C6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP4 DUP4 DUP8 GAS DELEGATECALL PUSH2 0x519 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP6 DUP3 DUP3 SUB DUP4 DUP10 CREATE2 SWAP3 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD DUP1 DUP3 ADD PUSH1 0x40 MSTORE DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP9 GAS CALL PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP1 POP DUP1 RETURNDATASIZE ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH23 0x6020363636335AFA1536363636515AF43D36363E3D36F3 PUSH1 0x48 SHL DUP2 MSTORE DUP5 PUSH1 0x17 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP RETURNDATASIZE ISZERO PUSH2 0x1063 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO DUP2 ISZERO OR ISZERO PUSH2 0x1098 JUMPI PUSH32 0x537461746963206465706C6F79206661696C6564000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x10A9 JUMPI PUSH2 0x10A9 DUP2 DUP5 DUP5 PUSH2 0xFEB JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x10B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xE8B9CB7D60827A7D55E211F1382DD0F129ADB541AF9FE45A09AB4A18B76E7C65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCA11C0DE00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE DUP2 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 DUP3 DUP8 GAS CALL PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP2 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x126F DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1297 DUP8 DUP3 DUP9 ADD PUSH2 0x11FE JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x12C4 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x654 DUP2 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133A DUP6 DUP3 DUP7 ADD PUSH2 0x11FE JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13F4 DUP2 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141C DUP7 DUP3 DUP8 ADD PUSH2 0x11FE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x149C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1480 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14CD DUP2 PUSH2 0x11D9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x654 DUP2 PUSH2 0x11D9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1644 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xE7 DUP5 LT SGT NOT 0xC6 ISZERO DUP16 0x5C 0xE5 RETURNDATASIZE PUSH3 0x933E1F SWAP8 SWAP7 SELFDESTRUCT 0xBE 0xF PUSH23 0xC7F3C88007C1E28DE5A164736F6C634300080B00330000 ",
              "sourceMap": "299:6381:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3482:20:2;3476:27;3458:16;3451:53;3542:4;3524:16;3517:30;6484:194:1;;;;;;;;;;-1:-1:-1;6484:194:1;;;;;:::i;:::-;;:::i;:::-;;1314:246;;;;;;:::i;:::-;;:::i;3977:89:2:-;;;;;;;;;;-1:-1:-1;3977:89:2;;;;;:::i;:::-;;:::i;4965:188:1:-;;;;;;;;;;-1:-1:-1;4965:188:1;;;;;:::i;:::-;;:::i;:::-;;;2601:42:6;2589:55;;;2571:74;;2559:2;2544:18;4965:188:1;;;;;;;;2480:176;;;;;;;;;;-1:-1:-1;2480:176:1;;;;;:::i;:::-;;:::i;5922:96::-;;;;;;;;;;-1:-1:-1;5922:96:1;;;;;:::i;:::-;;:::i;3618:135::-;;;;;;;;;;-1:-1:-1;3618:135:1;;;;;:::i;:::-;;:::i;1864:247::-;;;;;;:::i;:::-;;:::i;3159:242::-;;;;;;:::i;:::-;;:::i;5645:111:2:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4181:105::-;;;;;;;;;;-1:-1:-1;4181:105:2;;;;;:::i;:::-;;:::i;223:829:0:-;;;;;;;;;;-1:-1:-1;223:829:0;;;;;:::i;:::-;731:234;;6490:66:6;731:234:0;;;6478:79:6;6607:66;6594:2;6590:15;;;6586:88;6573:11;;;6566:109;6691:12;;;6684:28;;;510:66:0;6728:12:6;;;6721:28;;;340:7:0;;6765:12:6;;731:234:0;;;;;;;;;;;;;692:299;;731:234;692:299;;;;;223:829;-1:-1:-1;;;;223:829:0;5022:86:2;;;;;;;;;;-1:-1:-1;5060:14:2;5095:6;;;5022:86;;4776:98;;;;;;;;;;-1:-1:-1;4852:15:2;;;;4776:98;;5272:102;;;;;;;;;;-1:-1:-1;5357:10:2;;;;5272:102;;5949:98;;;;;;;;;;-1:-1:-1;6023:10:2;:17;5949:98;;5674:25:6;;;5662:2;5647:18;5949:98:2;5528:177:6;3724:150:2;;;;;;;;;;-1:-1:-1;3724:150:2;;;;;:::i;:::-;;:::i;5481:187:1:-;;;;;;;;;;-1:-1:-1;5481:187:1;;;;;:::i;:::-;;:::i;4526:141:2:-;;;;;;;;;;-1:-1:-1;4526:141:2;;;;;:::i;:::-;;:::i;4351:210:1:-;;;;;;;;;;-1:-1:-1;4351:210:1;;;;;:::i;:::-;;:::i;6484:194::-;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;6626:45:1::1;6640:5;6647:8;6657:13;;6626;:45::i;:::-;6484:194:::0;;;;:::o;1314:246::-;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;1452:18:1::1;1473:6;;1452:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;1452:27:1;;-1:-1:-1;1489:32:1::1;::::0;-1:-1:-1;1498:7:1;;-1:-1:-1;1507:6:1;;-1:-1:-1;1452:27:1;1489:8:::1;:32::i;:::-;1531:22;:20;:22::i;:::-;1442:118;1314:246:::0;;;;:::o;3977:89:2:-;1336:10;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;4041:6:::1;:18:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3977:89::o;4965:188:1:-;5067:20;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;5118:28:1::1;5134:11;;5118:15;:28::i;:::-;5103:43:::0;4965:188;-1:-1:-1;;;4965:188:1:o;2480:176::-;2580:20;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;2623:26:1::1;2637:11;;2623:13;:26::i;5922:96::-:0;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;5993:18:1::1;6004:6;;5993:10;:18::i;:::-;5922:96:::0;;:::o;3618:135::-;3680:20;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;3727:19:1::1;3740:5;3727:12;:19::i;:::-;3712:34:::0;3618:135;-1:-1:-1;;3618:135:1:o;1864:247::-;1540:10:2;1562:4;1540:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1571:10;:21;1540:52;:81;;;-1:-1:-1;5357:10:2;;;;1596;:25;1540:81;1519:112;;;;;;2003:18:1::1;2024:6;;2003:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2003:27:1;;-1:-1:-1;2040:32:1::1;::::0;-1:-1:-1;2057:7:1;;-1:-1:-1;2003:27:1;;-1:-1:-1;2040:16:1::1;:32::i;:::-;2082:22;:20;:22::i;3159:242::-:0;3305:20;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;3352:42:1::1;3367:6;3375:5;3382:11;;3352:14;:42::i;:::-;3337:57:::0;3159:242;-1:-1:-1;;;;;3159:242:1:o;5645:111:2:-;5687:27;5739:10;5726:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5645:111;:::o;4181:105::-;1336:10;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;4253:10:::1;:26:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4181:105::o;3724:150::-;1540:10;1562:4;1540:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1571:10;:21;1540:52;:81;;;-1:-1:-1;5357:10:2;;;;1596;:25;1540:81;1519:112;;;;;;3824:15:::1;:43:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3724:150::o;5481:187:1:-;1540:10:2;1562:4;1540:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1571:10;:21;1540:52;:81;;;-1:-1:-1;5357:10:2;;;;1596;:25;1540:81;1519:112;;;;;;5616:45:1::1;5636:9;5647:13;;5616:19;:45::i;:::-;5481:187:::0;;;:::o;4526:141:2:-;731:234:0;;;6490:66:6;731:234:0;;;;6478:79:6;;;;4654:4:2;6594:2:6;6590:15;6607:66;6586:88;6573:11;;;6566:109;6691:12;;;6684:28;;;510:66:0;6728:12:6;;;;6721:28;;;;731:234:0;;;;;;;;;;6765:12:6;;;;731:234:0;;;692:299;;;;;4578:12:2;;4609:51;223:829:0;4351:210:1;4468:20;1336:10:2;1358:4;1336:27;;:52;;-1:-1:-1;5060:14:2;5095:6;;;1367:10;:21;1336:52;1328:61;;;;;;4519:35:1::1;4533:5;4540:13;;4519;:35::i;:::-;4504:50:::0;4351:210;-1:-1:-1;;;;4351:210:1:o;17809:387:2:-;731:234:0;;;6490:66:6;731:234:0;;;;6478:79:6;;;;18026:4:2;6594:2:6;6590:15;6607:66;6586:88;6573:11;;;6566:109;6691:12;;;6684:28;;;510:66:0;6728:12:6;;;;6721:28;;;;731:234:0;;;;;;;;;;6765:12:6;;;;731:234:0;;;692:299;;;;;18042:26:2;18052:5;18059:8;18042:9;:26::i;:::-;18129:8;18085:52;;18092:5;18085:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;18078:60;;;;:::i;:::-;18148:41;18168:5;18175:13;;18148:19;:41::i;6389:425::-;6551:6;6545:13;6592:6;6586:4;6582:17;6668:4;6662;6656;6651:3;6643:6;6634:7;6627:5;6622:51;6612:186;;6720:16;6714:4;6708;6693:44;6767:16;6761:4;6754:30;18525:182;18631:16;18625:4;;18604:44;18674:16;18625:4;18661:30;14394:1422;14465:20;14581:4;14575:11;14649:4;14629:18;14625:29;14616:7;14612:43;14606:4;14599:57;14680:7;15115:21;15110:3;15103:34;15199:4;15194:3;15190:14;15183:21;;15329:18;15309;15304:3;15291:57;15438:18;15433:3;15429:28;15422:35;;15524:9;15519:3;15512:22;15563:4;15558:3;15554:14;15547:21;;15625:7;15620:3;15616:17;15607:7;15604:1;15597:37;15581:53;;;;15662:26;15675:12;18393:20;;18276:174;15662:26;15653:42;;;;;;15710:30;;2601:42:6;2589:55;;2571:74;;15710:30:2;;2559:2:6;2544:18;15710:30:2;;;;;;;15750:15;:30;;;;;;;;;;;14394:1422;-1:-1:-1;;14394:1422:2:o;7874:681::-;7943:20;8059:4;8053:11;8088:7;8223:18;8203;8198:3;8185:57;8323:28;;8400:17;;;8409:7;8388:1;8381:37;8365:53;;;;8446:26;8459:12;18393:20;;18276:174;8446:26;8437:42;;;;;;8494:25;;2601:42:6;2589:55;;2571:74;;8494:25:2;;2559:2:6;2544:18;8494:25:2;;;;;;;7874:681;;;;:::o;17094:248::-;17163:9;17158:146;17178:17;;;17158:146;;;17216:18;17237:6;;17244:1;17237:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;17216:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17216:30:2;;-1:-1:-1;17260:33:2;;17277:4;;-1:-1:-1;17216:30:2;-1:-1:-1;17216:30:2;;-1:-1:-1;17260:8:2;:33::i;:::-;-1:-1:-1;17197:3:2;;;;:::i;:::-;;;;17158:146;;;;17313:22;:20;:22::i;10127:782::-;10182:20;10214:21;10238:14;10214:38;;10377:13;10355:20;10348:43;10421:4;10415:11;10461:4;10456:3;10452:14;10446:4;10439:28;10572:48;10568:2;10564:57;10559:3;10552:70;10673:5;10667:4;10662:3;10659:1;10651:28;10635:44;-1:-1:-1;;18393:20:2;;10698:42;;;;;;10809:10;:22;;;;;;;-1:-1:-1;10809:22:2;;;;;;;;;10846:27;;2601:42:6;2589:55;;2571:74;;10846:27:2;;2559:2:6;2544:18;10846:27:2;;;;;;;10883:19;10127:782;;;:::o;7118:387::-;7242:6;7236:13;7283:6;7277:4;7273:17;7359:4;7353;7347;7342:3;7333:7;7326:5;7313:51;7303:186;;7411:16;7405:4;7399;7384:44;7458:16;7452:4;7445:30;9058:851;9189:20;9305:4;9299:11;9334:7;9469:18;9449;9444:3;9431:57;9569:28;;9671:5;9652:17;;;9661:7;9635:6;9627:50;9611:66;-1:-1:-1;;;9704:26:2;;;9696:35;;;;;;9811:10;:22;;;;;;;-1:-1:-1;9811:22:2;;;;;;;;;9848:25;;2601:42:6;2589:55;;2571:74;;9848:25:2;;2559:2:6;2544:18;9848:25:2;;;;;;;9058:851;;;;;;:::o;16145:695::-;16282:20;16275:28;16265:559;;16340:4;16334:11;16401:3;16379:20;16375:30;16369:4;16362:44;16463:20;16441;16436:3;16423:61;16570:4;16564;16542:20;16537:3;16534:1;16523:9;16516:5;16511:64;16501:309;;16612:4;16606:11;16599:18;;16673:3;16655:16;16651:26;16645:4;16638:40;16725:16;16719:4;16714:3;16699:43;16775:16;16770:3;16763:29;11508:2482;11610:20;11799:4;11793:11;11839:4;11834:3;11830:14;11824:4;11817:28;13086:48;13082:2;13078:57;13073:3;13066:70;13187:5;13181:4;13176:3;13173:1;13165:28;13149:44;;;13298:16;13291:24;13281:156;;13362:16;13356:4;13350;13335:44;13406:16;13403:1;13396:27;13281:156;13593:12;13581:25;13574:33;13559:12;13552:20;13549:59;13546:160;;;13637:22;13634:1;13627:33;13687:4;13684:1;13677:15;13546:160;13729:24;;13725:103;;13769:48;13789:12;13803:13;;13769:19;:48::i;:::-;18393:20;;13837:42;;;;;;13889:10;:22;;;;;;;-1:-1:-1;13889:22:2;;;;;;;;;13926:28;;2601:42:6;2589:55;;2571:74;;13926:28:2;;2559:2:6;2544:18;13926:28:2;;;;;;;11508:2482;;;;;:::o;210:481:5:-;303:44;;;2601:42:6;2589:55;;303:44:5;;;;2571:74:6;;;;303:44:5;;;;;;;;;;2544:18:6;;;;303:44:5;;;;;;;;;;;;;;431:12;;282:18;;;;431:12;282:18;402:6;395:5;390:66;380:295;;493:4;487:11;537:16;532:3;528:26;522:4;515:40;598:16;592:4;587:3;572:43;644:16;639:3;632:29;14:154:6;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:347::-;224:8;234:6;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;-1:-1:-1;329:20:6;;372:18;361:30;;358:50;;;404:1;401;394:12;358:50;441:4;433:6;429:17;417:29;;493:3;486:4;477:6;469;465:19;461:30;458:39;455:59;;;510:1;507;500:12;455:59;173:347;;;;;:::o;525:612::-;613:6;621;629;637;690:2;678:9;669:7;665:23;661:32;658:52;;;706:1;703;696:12;658:52;742:9;729:23;719:33;;802:2;791:9;787:18;774:32;815:31;840:5;815:31;:::i;:::-;865:5;-1:-1:-1;921:2:6;906:18;;893:32;948:18;937:30;;934:50;;;980:1;977;970:12;934:50;1019:58;1069:7;1060:6;1049:9;1045:22;1019:58;:::i;:::-;525:612;;;;-1:-1:-1;1096:8:6;-1:-1:-1;;;;525:612:6:o;1142:::-;1230:6;1238;1246;1254;1307:2;1295:9;1286:7;1282:23;1278:32;1275:52;;;1323:1;1320;1313:12;1275:52;1362:9;1349:23;1381:31;1406:5;1381:31;:::i;:::-;1431:5;-1:-1:-1;1483:2:6;1468:18;;1455:32;;-1:-1:-1;1538:2:6;1523:18;;1510:32;1565:18;1554:30;;1551:50;;;1597:1;1594;1587:12;1759:247;1818:6;1871:2;1859:9;1850:7;1846:23;1842:32;1839:52;;;1887:1;1884;1877:12;1839:52;1926:9;1913:23;1945:31;1970:5;1945:31;:::i;2011:409::-;2081:6;2089;2142:2;2130:9;2121:7;2117:23;2113:32;2110:52;;;2158:1;2155;2148:12;2110:52;2198:9;2185:23;2231:18;2223:6;2220:30;2217:50;;;2263:1;2260;2253:12;2217:50;2302:58;2352:7;2343:6;2332:9;2328:22;2302:58;:::i;:::-;2379:8;;2276:84;;-1:-1:-1;2011:409:6;-1:-1:-1;;;;2011:409:6:o;2656:626::-;2753:6;2761;2814:2;2802:9;2793:7;2789:23;2785:32;2782:52;;;2830:1;2827;2820:12;2782:52;2870:9;2857:23;2899:18;2940:2;2932:6;2929:14;2926:34;;;2956:1;2953;2946:12;2926:34;2994:6;2983:9;2979:22;2969:32;;3039:7;3032:4;3028:2;3024:13;3020:27;3010:55;;3061:1;3058;3051:12;3010:55;3101:2;3088:16;3127:2;3119:6;3116:14;3113:34;;;3143:1;3140;3133:12;3113:34;3196:7;3191:2;3181:6;3178:1;3174:14;3170:2;3166:23;3162:32;3159:45;3156:65;;;3217:1;3214;3207:12;3156:65;3248:2;3240:11;;;;;3270:6;;-1:-1:-1;2656:626:6;;-1:-1:-1;;;;2656:626:6:o;3287:180::-;3346:6;3399:2;3387:9;3378:7;3374:23;3370:32;3367:52;;;3415:1;3412;3405:12;3367:52;-1:-1:-1;3438:23:6;;3287:180;-1:-1:-1;3287:180:6:o;3472:544::-;3551:6;3559;3567;3620:2;3608:9;3599:7;3595:23;3591:32;3588:52;;;3636:1;3633;3626:12;3588:52;3675:9;3662:23;3694:31;3719:5;3694:31;:::i;:::-;3744:5;-1:-1:-1;3800:2:6;3785:18;;3772:32;3827:18;3816:30;;3813:50;;;3859:1;3856;3849:12;3813:50;3898:58;3948:7;3939:6;3928:9;3924:22;3898:58;:::i;:::-;3472:544;;3975:8;;-1:-1:-1;3872:84:6;;-1:-1:-1;;;;3472:544:6:o;4021:545::-;4109:6;4117;4125;4133;4186:2;4174:9;4165:7;4161:23;4157:32;4154:52;;;4202:1;4199;4192:12;4154:52;4238:9;4225:23;4215:33;;4295:2;4284:9;4280:18;4267:32;4257:42;;4350:2;4339:9;4335:18;4322:32;4377:18;4369:6;4366:30;4363:50;;;4409:1;4406;4399:12;4571:632;4742:2;4794:21;;;4864:13;;4767:18;;;4886:22;;;4713:4;;4742:2;4965:15;;;;4939:2;4924:18;;;4713:4;5008:169;5022:6;5019:1;5016:13;5008:169;;;5083:13;;5071:26;;5152:15;;;;5117:12;;;;5044:1;5037:9;5008:169;;;-1:-1:-1;5194:3:6;;4571:632;-1:-1:-1;;;;;;4571:632:6:o;5208:315::-;5276:6;5284;5337:2;5325:9;5316:7;5312:23;5308:32;5305:52;;;5353:1;5350;5343:12;5305:52;5389:9;5376:23;5366:33;;5449:2;5438:9;5434:18;5421:32;5462:31;5487:5;5462:31;:::i;:::-;5512:5;5502:15;;;5208:315;;;;;:::o;5710:477::-;5789:6;5797;5805;5858:2;5846:9;5837:7;5833:23;5829:32;5826:52;;;5874:1;5871;5864:12;5826:52;5910:9;5897:23;5887:33;;5971:2;5960:9;5956:18;5943:32;5998:18;5990:6;5987:30;5984:50;;;6030:1;6027;6020:12;6788:251;6858:6;6911:2;6899:9;6890:7;6886:23;6882:32;6879:52;;;6927:1;6924;6917:12;6879:52;6959:9;6953:16;6978:31;7003:5;6978:31;:::i;7044:184::-;7096:77;7093:1;7086:88;7193:4;7190:1;7183:15;7217:4;7214:1;7207:15;7233:184;7285:77;7282:1;7275:88;7382:4;7379:1;7372:15;7406:4;7403:1;7396:15;7422:580;7499:4;7505:6;7565:11;7552:25;7655:66;7644:8;7628:14;7624:29;7620:102;7600:18;7596:127;7586:155;;7737:1;7734;7727:12;7586:155;7764:33;;7816:20;;;-1:-1:-1;7859:18:6;7848:30;;7845:50;;;7891:1;7888;7881:12;7845:50;7924:4;7912:17;;-1:-1:-1;7955:14:6;7951:27;;;7941:38;;7938:58;;;7992:1;7989;7982:12;8007:349;8046:3;8077:66;8070:5;8067:77;8064:257;;;8177:77;8174:1;8167:88;8278:4;8275:1;8268:15;8306:4;8303:1;8296:15;8064:257;-1:-1:-1;8348:1:6;8337:13;;8007:349::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1152200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "infinite",
                "callAny(address,uint256,bytes)": "infinite",
                "contracts()": "infinite",
                "delegateCallAny(address,bytes)": "infinite",
                "delegator()": "2385",
                "deployCreate(bytes)": "infinite",
                "deployCreate2(uint256,bytes32,bytes)": "infinite",
                "deployProxy(bytes32)": "infinite",
                "deployStatic(bytes32,bytes)": "infinite",
                "deployTemplate(bytes)": "infinite",
                "getImplementation()": "2363",
                "getMetamorphicContractAddress(bytes32,address)": "659",
                "getNumContracts()": "2325",
                "initializeContract(address,bytes)": "infinite",
                "lookup(bytes32)": "600",
                "multiCall(bytes[])": "infinite",
                "owner()": "2341",
                "setDelegator(address)": "26726",
                "setImplementation(address)": "28880",
                "setOwner(address)": "26726",
                "upgradeProxy(bytes32,address,bytes)": "infinite"
              }
            },
            "methodIdentifiers": {
              "callAny(address,uint256,bytes)": "12e6bf6a",
              "contracts()": "6c0f79b6",
              "delegateCallAny(address,bytes)": "4713ee7a",
              "delegator()": "ce9b7930",
              "deployCreate(bytes)": "27fe1822",
              "deployCreate2(uint256,bytes32,bytes)": "56f2a761",
              "deployProxy(bytes32)": "39cab472",
              "deployStatic(bytes32,bytes)": "fa481da5",
              "deployTemplate(bytes)": "17cff2c5",
              "getImplementation()": "aaf10f42",
              "getMetamorphicContractAddress(bytes32,address)": "8653a465",
              "getNumContracts()": "cfe10b30",
              "initializeContract(address,bytes)": "e1d7a8e4",
              "lookup(bytes32)": "f39ec1f7",
              "multiCall(bytes[])": "348a0cdc",
              "owner()": "8da5cb5b",
              "setDelegator(address)": "83cd9cc3",
              "setImplementation(address)": "d784d426",
              "setOwner(address)": "13af4035",
              "upgradeProxy(bytes32,address,bytes)": "043c9414"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedRaw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedStatic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedTemplate\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"cdata_\",\"type\":\"bytes\"}],\"name\":\"callAny\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"contracts_\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"cdata_\",\"type\":\"bytes\"}],\"name\":\"delegateCallAny\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"delegator_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployCode_\",\"type\":\"bytes\"}],\"name\":\"deployCreate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"deployCode_\",\"type\":\"bytes\"}],\"name\":\"deployCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"deployProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCallData_\",\"type\":\"bytes\"}],\"name\":\"deployStatic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployCode_\",\"type\":\"bytes\"}],\"name\":\"deployTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getMetamorphicContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData_\",\"type\":\"bytes\"}],\"name\":\"initializeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"lookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"cdata_\",\"type\":\"bytes[]\"}],\"name\":\"multiCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDelegator_\",\"type\":\"address\"}],\"name\":\"setDelegator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementationAddress_\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImpl_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData_\",\"type\":\"bytes\"}],\"name\":\"upgradeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:salt\":\"ProxyFactory\",\"kind\":\"dev\",\"methods\":{\"callAny(address,uint256,bytes)\":{\"details\":\"callAny allows EOA to call function impersonating the factory address\",\"params\":{\"cdata_\":\": Hex encoded state with function signature + arguments of the target function to be called\",\"target_\":\": the address of the contract to be called\",\"value_\":\": value in WEIs to send together the call\"}},\"constructor\":{\"details\":\"The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory.\"},\"contracts()\":{\"details\":\"contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory\",\"returns\":{\"contracts_\":\"the array of salts associated with all the contracts deployed with this factory\"}},\"delegateCallAny(address,bytes)\":{\"details\":\"delegateCallAny allows EOA to call a function in a contract without impersonating the factory\",\"params\":{\"cdata_\":\": Hex encoded state with function signature + arguments of the target function to be called\",\"target_\":\": the address of the contract to be called\"}},\"delegator()\":{\"details\":\"delegator is public getter function for the _delegator account address\",\"returns\":{\"delegator_\":\"address of the delegator account\"}},\"deployCreate(bytes)\":{\"details\":\"deployCreate allows the owner to deploy raw contracts through the factory using non-deterministic address generation (create OpCode)\",\"params\":{\"deployCode_\":\"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)\"},\"returns\":{\"contractAddr\":\"the deployed contract address\"}},\"deployCreate2(uint256,bytes32,bytes)\":{\"details\":\"deployCreate2 allows the owner to deploy contracts with deterministic address through the factory\",\"params\":{\"deployCode_\":\"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)\",\"salt_\":\"salt used to determine the final determinist address for the deployed contract\",\"value_\":\"endowment value in WEIS for the created contract\"},\"returns\":{\"contractAddr\":\"the deployed contract address\"}},\"deployProxy(bytes32)\":{\"details\":\"deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\",\"params\":{\"salt_\":\"salt used to determine the final determinist address for the deployed contract\"}},\"deployStatic(bytes32,bytes)\":{\"details\":\"deployStatic finishes the deployment started with the deployTemplate of a contract with determinist address. This function call any initialize() function in the deployed contract in case the arguments are provided. Should be called after deployTemplate.\",\"params\":{\"initCallData_\":\"Hex encoded initialization function signature + parameters to initialize the deployed contract\",\"salt_\":\"salt used to determine the final determinist address for the deployed contract\"},\"returns\":{\"contractAddr\":\"the address of the deployed template contract\"}},\"deployTemplate(bytes)\":{\"details\":\"deployTemplate deploys a template contract with the universal code copy constructor that deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\",\"params\":{\"deployCode_\":\"Hex encoded state with the deploymentCode + (constructor args appended if any)\"},\"returns\":{\"contractAddr\":\"the address of the deployed template contract\"}},\"getImplementation()\":{\"details\":\"getImplementation is public getter function for the _owner account address\"},\"getNumContracts()\":{\"details\":\"getNumContracts getter function for retrieving the total number of contracts deployed with this factory\",\"returns\":{\"_0\":\"the length of the contract array\"}},\"initializeContract(address,bytes)\":{\"details\":\"initializeContract allows the owner/delegator to initialize contracts deployed via factory\",\"params\":{\"contract_\":\"address of the contract that will be initialized\",\"initCallData_\":\"Hex encoded initialization function signature + parameters to initialize the deployed contract\"}},\"lookup(bytes32)\":{\"details\":\"lookup allows anyone interacting with the contract to get the address of contract specified by its name_\",\"params\":{\"salt_\":\": Custom NatSpec tag @custom:salt at the top of the contract solidity file\"}},\"multiCall(bytes[])\":{\"details\":\"multiCall allows EOA to make multiple function calls within a single transaction impersonating the factory\",\"params\":{\"cdata_\":\": array of hex encoded state with the function calls (function signature + arguments)\"}},\"owner()\":{\"details\":\"owner is public getter function for the _owner account address\",\"returns\":{\"owner_\":\"address of the owner account\"}},\"setDelegator(address)\":{\"details\":\"Sets the new delegator\",\"params\":{\"newDelegator_\":\": address of the new delegator\"}},\"setImplementation(address)\":{\"details\":\"Sets a new implementation address\",\"params\":{\"newImplementationAddress_\":\": address of the contract with the new implementation\"}},\"setOwner(address)\":{\"details\":\"Sets the new owner\",\"params\":{\"newOwner_\":\": address of the new owner\"}},\"upgradeProxy(bytes32,address,bytes)\":{\"details\":\"upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\",\"params\":{\"initCallData_\":\"Hex encoded initialization function signature + parameters to initialize the new implementation contract\",\"newImpl_\":\"address of the new contract that contains the new implementation logic\",\"salt_\":\"salt used to determine the final determinist address for the deployed proxy contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyFactory.sol\":\"ProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"},\"contracts/ProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\nimport \\\"./DeterministicAddress.sol\\\";\\nimport \\\"./proxy/Proxy.sol\\\";\\nimport \\\"./ProxyFactoryBase.sol\\\";\\n\\n/**\\n * @title ProxyFactory\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\n/// @custom:salt ProxyFactory\\ncontract ProxyFactory is ProxyFactoryBase {\\n    /**\\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\\n     * account will be set as the first owner of the factory.\\n     */\\n    constructor() ProxyFactoryBase() {}\\n\\n    /**\\n     * @dev callAny allows EOA to call function impersonating the factory address\\n     * @param target_: the address of the contract to be called\\n     * @param value_: value in WEIs to send together the call\\n     * @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\\n     */\\n    function callAny(\\n        address target_,\\n        uint256 value_,\\n        bytes calldata cdata_\\n    ) public payable onlyOwner {\\n        bytes memory cdata = cdata_;\\n        _callAny(target_, value_, cdata);\\n        _returnAvailableData();\\n    }\\n\\n    /**\\n     * @dev delegateCallAny allows EOA to call a function in a contract without impersonating the factory\\n     * @param target_: the address of the contract to be called\\n     * @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\\n     */\\n    function delegateCallAny(address target_, bytes calldata cdata_)\\n        public\\n        payable\\n        onlyOwnerOrDelegator\\n    {\\n        bytes memory cdata = cdata_;\\n        _delegateCallAny(target_, cdata);\\n        _returnAvailableData();\\n    }\\n\\n    /**\\n     * @dev deployCreate allows the owner to deploy raw contracts through the factory using\\n     * non-deterministic address generation (create OpCode)\\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function deployCreate(bytes calldata deployCode_)\\n        public\\n        onlyOwner\\n        returns (address contractAddr)\\n    {\\n        return _deployCreate(deployCode_);\\n    }\\n\\n    /**\\n     * @dev deployCreate2 allows the owner to deploy contracts with deterministic address\\n     * through the factory\\n     * @param value_ endowment value in WEIS for the created contract\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function deployCreate2(\\n        uint256 value_,\\n        bytes32 salt_,\\n        bytes calldata deployCode_\\n    ) public payable onlyOwner returns (address contractAddr) {\\n        contractAddr = _deployCreate2(value_, salt_, deployCode_);\\n    }\\n\\n    /**\\n     * @dev deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     */\\n    function deployProxy(bytes32 salt_) public onlyOwner returns (address contractAddr) {\\n        contractAddr = _deployProxy(salt_);\\n    }\\n\\n    /**\\n     * @dev deployStatic finishes the deployment started with the deployTemplate of a contract with\\n     * determinist address. This function call any initialize() function in the deployed contract\\n     * in case the arguments are provided. Should be called after deployTemplate.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\\n     * @return contractAddr the address of the deployed template contract\\n     */\\n    function deployStatic(bytes32 salt_, bytes calldata initCallData_)\\n        public\\n        onlyOwner\\n        returns (address contractAddr)\\n    {\\n        contractAddr = _deployStatic(salt_, initCallData_);\\n    }\\n\\n    /**\\n     * @dev deployTemplate deploys a template contract with the universal code copy constructor that\\n     * deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\\n     * @param deployCode_ Hex encoded state with the deploymentCode + (constructor args appended if any)\\n     * @return contractAddr the address of the deployed template contract\\n     */\\n    function deployTemplate(bytes calldata deployCode_)\\n        public\\n        onlyOwner\\n        returns (address contractAddr)\\n    {\\n        contractAddr = _deployTemplate(deployCode_);\\n    }\\n\\n    /**\\n     * @dev initializeContract allows the owner/delegator to initialize contracts deployed via factory\\n     * @param contract_ address of the contract that will be initialized\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * deployed contract\\n     */\\n    function initializeContract(address contract_, bytes calldata initCallData_)\\n        public\\n        onlyOwnerOrDelegator\\n    {\\n        _initializeContract(contract_, initCallData_);\\n    }\\n\\n    /**\\n     * @dev multiCall allows EOA to make multiple function calls within a single transaction\\n     * impersonating the factory\\n     * @param cdata_: array of hex encoded state with the function calls (function signature + arguments)\\n     */\\n    function multiCall(bytes[] calldata cdata_) public onlyOwner {\\n        _multiCall(cdata_);\\n    }\\n\\n    /**\\n     * @dev upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\\n     * @param newImpl_ address of the new contract that contains the new implementation logic\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * new implementation contract\\n     */\\n    function upgradeProxy(\\n        bytes32 salt_,\\n        address newImpl_,\\n        bytes calldata initCallData_\\n    ) public onlyOwner {\\n        _upgradeProxy(salt_, newImpl_, initCallData_);\\n    }\\n}\",\"keccak256\":\"0xcfdcb644525717729216649508e2df34a797fd5460f9fe7cbd0d2bed3d8889df\",\"license\":\"MIT-open-group\"},\"contracts/ProxyFactoryBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\nimport \\\"./proxy/Proxy.sol\\\";\\nimport \\\"./DeterministicAddress.sol\\\";\\nimport \\\"./proxy/ProxyUpgrader.sol\\\";\\nimport \\\"./proxy/IProxy.sol\\\";\\n\\n/**\\n * @title ProxyFactoryBase\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyFactoryBase is DeterministicAddress, ProxyUpgrader {\\n    /**\\n    @dev owner role for privileged access to functions\\n    */\\n    address private _owner;\\n\\n    /**\\n    @dev delegator role for privileged access to delegateCallAny\\n    */\\n    address private _delegator;\\n\\n    /**\\n    @dev array to store list of contract salts\\n    */\\n    bytes32[] private _contracts;\\n\\n    /**\\n    @dev slot for storing implementation address\\n    */\\n    address private _implementation;\\n\\n    address private immutable _proxyTemplate;\\n\\n    bytes8 private constant _UNIVERSAL_DEPLOY_CODE = 0x38585839386009f3;\\n\\n    /**\\n     *@dev events that notify of contract deployment\\n     */\\n    event Deployed(bytes32 salt, address contractAddr);\\n    event DeployedTemplate(address contractAddr);\\n    event DeployedStatic(address contractAddr);\\n    event DeployedRaw(address contractAddr);\\n    event DeployedProxy(address contractAddr);\\n\\n    // modifier restricts caller to owner or self via multicall\\n    modifier onlyOwner() {\\n        require(msg.sender == address(this) || msg.sender == owner());\\n        _;\\n    }\\n\\n    // modifier restricts caller to owner or self via multicall\\n    modifier onlyOwnerOrDelegator() {\\n        require(\\n            msg.sender == address(this) || msg.sender == owner() || msg.sender == delegator()\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\\n     * account will be set as the first owner of the factory.\\n     */\\n    constructor() {\\n        bytes memory proxyDeployCode = abi.encodePacked(\\n            //8 byte code copy constructor code\\n            _UNIVERSAL_DEPLOY_CODE,\\n            type(Proxy).creationCode,\\n            bytes32(uint256(uint160(address(this))))\\n        );\\n        //variable to store the address created from create(the location of the proxy template contract)\\n        address addr;\\n        assembly {\\n            //deploys the proxy template contract\\n            addr := create(0, add(proxyDeployCode, 0x20), mload(proxyDeployCode))\\n            if iszero(addr) {\\n                //if contract creation fails, we want to return any err messages\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                //revert and return errors\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n        //State var that stores the proxyTemplate address\\n        _proxyTemplate = addr;\\n        //State var that stores the _owner address\\n        _owner = msg.sender;\\n    }\\n\\n    // solhint-disable payable-fallback\\n    /**\\n     * @dev fallback function returns the address of the most recent deployment of a template\\n     */\\n    fallback() external {\\n        assembly {\\n            mstore(returndatasize(), sload(_implementation.slot))\\n            return(returndatasize(), 0x20)\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets a new implementation address\\n     * @param newImplementationAddress_: address of the contract with the new implementation\\n     */\\n    function setImplementation(address newImplementationAddress_) public onlyOwnerOrDelegator {\\n        _implementation = newImplementationAddress_;\\n    }\\n\\n    /**\\n     * @dev Sets the new owner\\n     * @param newOwner_: address of the new owner\\n     */\\n    function setOwner(address newOwner_) public onlyOwner {\\n        _owner = newOwner_;\\n    }\\n\\n    /**\\n     * @dev Sets the new delegator\\n     * @param newDelegator_: address of the new delegator\\n     */\\n    function setDelegator(address newDelegator_) public onlyOwner {\\n        _delegator = newDelegator_;\\n    }\\n\\n    /**\\n     * @dev lookup allows anyone interacting with the contract to get the address of contract specified\\n     * by its name_\\n     * @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file\\n     */\\n    function lookup(bytes32 salt_) public view returns (address addr) {\\n        addr = getMetamorphicContractAddress(salt_, address(this));\\n    }\\n\\n    /**\\n     * @dev getImplementation is public getter function for the _owner account address\\n     */\\n    function getImplementation() public view returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev owner is public getter function for the _owner account address\\n     * @return owner_ address of the owner account\\n     */\\n    function owner() public view returns (address owner_) {\\n        owner_ = _owner;\\n    }\\n\\n    /**\\n     * @dev delegator is public getter function for the _delegator account address\\n     * @return delegator_ address of the delegator account\\n     */\\n    function delegator() public view returns (address delegator_) {\\n        delegator_ = _delegator;\\n    }\\n\\n    /**\\n     * @dev contracts is public getter that gets the array of salts associated with all the contracts\\n     * deployed with this factory\\n     * @return contracts_ the array of salts associated with all the contracts deployed with this\\n     * factory\\n     */\\n    function contracts() public view returns (bytes32[] memory contracts_) {\\n        contracts_ = _contracts;\\n    }\\n\\n    /**\\n     * @dev getNumContracts getter function for retrieving the total number of contracts\\n     * deployed with this factory\\n     * @return the length of the contract array\\n     */\\n    function getNumContracts() public view returns (uint256) {\\n        return _contracts.length;\\n    }\\n\\n    /**\\n     * @dev _callAny allows EOA to call function impersonating the factory address\\n     * @param target_: the address of the contract to be called\\n     * @param value_: value in WEIs to send together the call\\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\\n     */\\n    function _callAny(\\n        address target_,\\n        uint256 value_,\\n        bytes memory cdata_\\n    ) internal {\\n        assembly {\\n            let size := mload(cdata_)\\n            let ptr := add(0x20, cdata_)\\n            if iszero(call(gas(), target_, value_, ptr, size, 0x00, 0x00)) {\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev _delegateCallAny allows EOA to call a function in a contract without impersonating the factory\\n     * @param target_: the address of the contract to be called\\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\\n     */\\n    function _delegateCallAny(address target_, bytes memory cdata_) internal {\\n        assembly {\\n            let size := mload(cdata_)\\n            let ptr := add(0x20, cdata_)\\n            if iszero(delegatecall(gas(), target_, ptr, size, 0x00, 0x00)) {\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev _deployCreate allows the owner to deploy raw contracts through the factory using\\n     * non-deterministic address generation (create OpCode)\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate(bytes calldata deployCode_) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        emit DeployedRaw(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\\n     * factory\\n     * @param value_ endowment value in WEIS for the created contract\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate2(\\n        uint256 value_,\\n        bytes32 salt_,\\n        bytes calldata deployCode_\\n    ) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create2(value_, basePtr, sub(ptr, basePtr), salt_)\\n        }\\n        require(uint160(contractAddr) != 0);\\n        //record the contract salt to the _contracts array for lookup\\n        _contracts.push(salt_);\\n        emit DeployedRaw(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     */\\n    function _deployProxy(bytes32 salt_) internal returns (address contractAddr) {\\n        address proxyTemplate = _proxyTemplate;\\n        assembly {\\n            // store proxy template address as implementation,\\n            sstore(_implementation.slot, proxyTemplate)\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, 0x20))\\n            // put metamorphic code as initCode\\n            // push1 20\\n            mstore(ptr, shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3))\\n            contractAddr := create2(0, ptr, 0x17, salt_)\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        // record the contract salt to the contracts array\\n        _contracts.push(salt_);\\n        emit DeployedProxy(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployStatic finishes the deployment started with the deployTemplate of a contract with\\n     * determinist address. This function call any initialize() function in the deployed contract\\n     * in case the arguments are provided. Should be called after deployTemplate.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\\n     * @return contractAddr the address of the deployed template contract\\n     */\\n    function _deployStatic(bytes32 salt_, bytes calldata initCallData_)\\n        internal\\n        returns (address contractAddr)\\n    {\\n        assembly {\\n            // store proxy template address as implementation,\\n            //sstore(_implementation.slot, _impl)\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, 0x20))\\n            // put metamorphic code as initcode\\n            /*\\n                00 60 PUSH1     20\\n                02 36 CALLDATASIZE          20\\n                03 36 CALLDATASIZE          0 | 20\\n                04 36 CALLDATASIZE          0 | 0 | 20\\n                05 33 CALLER                0 | 0 | 0 | 20\\n                06 5a GAS                   CALLER | 0 | 0 | 0 | 20\\n                07 fa STATICCALL            GAS | CALLER | 0 | 0 | 0 | 20\\n                08 15 ISZERO                tmeplateaddress\\n                09 36 CALLDATASIZE          0\\n                0a 36 CALLDATASIZE          0 | 0\\n                0b 36 CALLDATASIZE          0 | 0 | 0\\n                0c 36 CALLDATASIZE          0 | 0 | 0 | 0\\n                0d 51 MLOAD                 0 | 0 | 0 | 0 | 0\\n                0e 5a GAS                   address | 0 | 0 | 0 | 0\\n                0f f4 DELEGATECALL          GAS | address | 0 | 0 | 0 | 0\\n                10 3d RETURNDATASIZE\\n                11 36 CALLDATASIZE          RETURNDATASIZE\\n                12 36 CALLDATASIZE\\n                13 3e RETURNDATACOPY\\n                14 3d RETURNDATASIZE\\n                15 36 CALLDATASIZE\\n                16 f3 RETURN\\n            */\\n            mstore(ptr, shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3))\\n            contractAddr := create2(0, ptr, 0x17, salt_)\\n            //if the returndatasize is not 0 revert with the error message\\n            if iszero(iszero(returndatasize())) {\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                revert(0, returndatasize())\\n            }\\n            //if contractAddr or code size at contractAddr is 0 revert with deploy fail message\\n            if or(iszero(contractAddr), iszero(extcodesize(contractAddr))) {\\n                mstore(0, \\\"Static deploy failed\\\")\\n                revert(0, 0x20)\\n            }\\n        }\\n        if (initCallData_.length > 0) {\\n            _initializeContract(contractAddr, initCallData_);\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        _contracts.push(salt_);\\n        emit DeployedStatic(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployTemplate deploys a template contract with the universal code copy constructor that\\n     * deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\\n     * @param deployCode_ Hex encoded data with the deploymentCode + (constructor args appended if any)\\n     * @return contractAddr the address of the deployed template contract\\n     */\\n    function _deployTemplate(bytes calldata deployCode_) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            mstore(0x40, add(basePtr, add(deployCode_.length, 0x28)))\\n            let ptr := basePtr\\n            //codesize, pc,  pc, codecopy, codesize, push1 09, return push2 <codesize> 56 5b\\n            /*\\n            00 38 codesize\\n            01 58 pc            codesize\\n            02 58 pc            01 | codesize\\n            03 39 codecopy      02 | 01 | codesize\\n            04 38 codesize\\n            05 60 push1 09      codesize\\n            07 f3 return        09 | codesize\\n             */\\n            mstore(ptr, hex\\\"38585839386009f3\\\")\\n            //0x38585839386009f3\\n            ptr := add(ptr, 0x08)\\n            //copy the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n            // Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n            // put address on constructor\\n            mstore(ptr, address())\\n            ptr := add(ptr, 0x20)\\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        emit DeployedTemplate(contractAddr);\\n        _implementation = contractAddr;\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\\n     * @param contract_ address of the contract that will be initialized\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * deployed contract\\n     */\\n    function _initializeContract(address contract_, bytes calldata initCallData_) internal {\\n        assembly {\\n            if iszero(iszero(initCallData_.length)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(initCallData_.length, ptr))\\n                calldatacopy(ptr, initCallData_.offset, initCallData_.length)\\n                if iszero(call(gas(), contract_, 0, ptr, initCallData_.length, 0x00, 0x00)) {\\n                    ptr := mload(0x40)\\n                    mstore(0x40, add(returndatasize(), ptr))\\n                    returndatacopy(ptr, 0x00, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev _multiCall allows EOA to make multiple function calls within a single transaction\\n     * impersonating the factory\\n     * @param cdata_: array of abi encoded data with the function calls (function signature + arguments)\\n     */\\n    function _multiCall(bytes[] calldata cdata_) internal {\\n        for (uint256 i = 0; i < cdata_.length; i++) {\\n            bytes memory cdata = cdata_[i];\\n            _callAny(address(this), 0, cdata);\\n        }\\n        _returnAvailableData();\\n    }\\n\\n    /**\\n     * @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\\n     * @param newImpl_ address of the new contract that contains the new implementation logic\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * new implementation contract\\n     */\\n    function _upgradeProxy(\\n        bytes32 salt_,\\n        address newImpl_,\\n        bytes calldata initCallData_\\n    ) internal {\\n        address proxy = DeterministicAddress.getMetamorphicContractAddress(salt_, address(this));\\n        __upgrade(proxy, newImpl_);\\n        assert(IProxy(proxy).getImplementationAddress() == newImpl_);\\n        _initializeContract(proxy, initCallData_);\\n    }\\n\\n    /**\\n     * @dev Aux function to return the external code size\\n     */\\n    function _extCodeSize(address target_) internal view returns (uint256 size) {\\n        assembly {\\n            size := extcodesize(target_)\\n        }\\n        return size;\\n    }\\n\\n    /**\\n     * @dev Aux function to get the return data size\\n     */\\n    function _returnAvailableData() internal pure {\\n        assembly {\\n            returndatacopy(0x00, 0x00, returndatasize())\\n            return(0x00, returndatasize())\\n        }\\n    }\\n}\",\"keccak256\":\"0x21e0e42b28c12bc301c7ace135a6e1ecfb0398801e20b0fe55682f994464b25b\",\"license\":\"MIT-open-group\"},\"contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\ninterface IProxy {\\n    function getImplementationAddress() external view returns (address);\\n}\",\"keccak256\":\"0xc347986b3d808c671158d689c9ad8a3a9e5f4a78efd5496de3d2777396f9547e\",\"license\":\"MIT-open-group\"},\"contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\nimport \\\"../DeterministicAddress.sol\\\";\\n\\n/**\\n * @title Proxy\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\n/**\\n *@notice RUN OPTIMIZER OFF\\n */\\n/**\\n * @notice Proxy is a delegatecall reverse proxy implementation\\n * the forwarding address is stored at the slot location of not(0)\\n * if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address >\\n * the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation\\n * from upgrading the proxy by changing this slot.\\n * The proxy may be directly upgraded ( if the lock is not set )\\n * by calling the proxy from the factory address using the format\\n * abi.encodeWithSelector(0xca11c0de, <address>);\\n * All other calls will be proxied through to the implementation.\\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal\\n * mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets\\n * the higher order bits to lock the upgrade capability of the proxy.\\n */\\ncontract Proxy {\\n    address private immutable _factory;\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    function getImplementationAddress() public view returns (address) {\\n        assembly {\\n            mstore(\\n                0x00,\\n                and(\\n                    sload(not(0x00)),\\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                )\\n            )\\n            return(0x00, 0x20)\\n        }\\n    }\\n\\n    function _fallback() internal {\\n        // make local copy of factory since immutables\\n        // are not accessable in assembly as of yet\\n        address factory = _factory;\\n        assembly {\\n            // admin is the builtin logic to change the implementation\\n            function admin() {\\n                // this is an assignment to implementation\\n                let newImpl := shr(96, shl(96, calldataload(0x04)))\\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10cced0000) {\\n                    mstore(0x00, \\\"imploc\\\")\\n                    revert(0x00, 0x20)\\n                }\\n                // store address into slot\\n                sstore(not(0x00), newImpl)\\n                stop()\\n            }\\n\\n            // passthrough is the passthrough logic to delegate to the implementation\\n            function passthrough() {\\n                // load free memory pointer\\n                let _ptr := mload(0x40)\\n                // allocate memory proportionate to calldata\\n                mstore(0x40, add(_ptr, calldatasize()))\\n                // copy calldata into memory\\n                calldatacopy(_ptr, 0x00, calldatasize())\\n                let ret := delegatecall(gas(), sload(not(0x00)), _ptr, calldatasize(), 0x00, 0x00)\\n                returndatacopy(_ptr, 0x00, returndatasize())\\n                if iszero(ret) {\\n                    revert(_ptr, returndatasize())\\n                }\\n                return(_ptr, returndatasize())\\n            }\\n\\n            // if caller is factory,\\n            // and has 0xca11c0de<address> as calldata\\n            // run admin logic and return\\n            if eq(caller(), factory) {\\n                if eq(calldatasize(), 0x24) {\\n                    if eq(shr(224, calldataload(0x00)), 0xca11c0de) {\\n                        admin()\\n                    }\\n                }\\n            }\\n            // admin logic was not run so fallthrough to delegatecall\\n            passthrough()\\n        }\\n    }\\n}\",\"keccak256\":\"0x5fa69b8f0352caf985bd7819ae57e2dd058242b2c0e80b438515eef4e0ebc463\",\"license\":\"MIT-open-group\"},\"contracts/proxy/ProxyUpgrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\n/**\\n * @title ProxyUpgrader\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyUpgrader {\\n    function __upgrade(address _proxy, address _newImpl) internal {\\n        bytes memory cdata = abi.encodeWithSelector(0xca11c0de, _newImpl);\\n        assembly {\\n            if iszero(call(gas(), _proxy, 0, add(cdata, 0x20), mload(cdata), 0x00, 0x00)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(ptr, returndatasize()))\\n                returndatacopy(ptr, 0x00, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x8624e3484483c08a915373bad20733917f498d0445a539025e93f7c29b5c1dbe\",\"license\":\"MIT-open-group\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 256,
                "contract": "contracts/ProxyFactory.sol:ProxyFactory",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 259,
                "contract": "contracts/ProxyFactory.sol:ProxyFactory",
                "label": "_delegator",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 263,
                "contract": "contracts/ProxyFactory.sol:ProxyFactory",
                "label": "_contracts",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "astId": 266,
                "contract": "contracts/ProxyFactory.sol:ProxyFactory",
                "label": "_implementation",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_bytes32)dyn_storage": {
                "base": "t_bytes32",
                "encoding": "dynamic_array",
                "label": "bytes32[]",
                "numberOfBytes": "32"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/ProxyFactoryBase.sol": {
        "ProxyFactoryBase": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "Deployed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedProxy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedRaw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedStatic",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "contractAddr",
                  "type": "address"
                }
              ],
              "name": "DeployedTemplate",
              "type": "event"
            },
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "contracts",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "contracts_",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "delegator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "delegator_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getImplementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_factory",
                  "type": "address"
                }
              ],
              "name": "getMetamorphicContractAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNumContracts",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "salt_",
                  "type": "bytes32"
                }
              ],
              "name": "lookup",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newDelegator_",
                  "type": "address"
                }
              ],
              "name": "setDelegator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementationAddress_",
                  "type": "address"
                }
              ],
              "name": "setImplementation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner_",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)",
            "events": {
              "Deployed(bytes32,address)": {
                "details": "events that notify of contract deployment"
              }
            },
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory."
              },
              "contracts()": {
                "details": "contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory",
                "returns": {
                  "contracts_": "the array of salts associated with all the contracts deployed with this factory"
                }
              },
              "delegator()": {
                "details": "delegator is public getter function for the _delegator account address",
                "returns": {
                  "delegator_": "address of the delegator account"
                }
              },
              "getImplementation()": {
                "details": "getImplementation is public getter function for the _owner account address"
              },
              "getNumContracts()": {
                "details": "getNumContracts getter function for retrieving the total number of contracts deployed with this factory",
                "returns": {
                  "_0": "the length of the contract array"
                }
              },
              "lookup(bytes32)": {
                "details": "lookup allows anyone interacting with the contract to get the address of contract specified by its name_",
                "params": {
                  "salt_": ": Custom NatSpec tag @custom:salt at the top of the contract solidity file"
                }
              },
              "owner()": {
                "details": "owner is public getter function for the _owner account address",
                "returns": {
                  "owner_": "address of the owner account"
                }
              },
              "setDelegator(address)": {
                "details": "Sets the new delegator",
                "params": {
                  "newDelegator_": ": address of the new delegator"
                }
              },
              "setImplementation(address)": {
                "details": "Sets a new implementation address",
                "params": {
                  "newImplementationAddress_": ": address of the contract with the new implementation"
                }
              },
              "setOwner(address)": {
                "details": "Sets the new owner",
                "params": {
                  "newOwner_": ": address of the new owner"
                }
              }
            },
            "stateVariables": {
              "_contracts": {
                "details": "array to store list of contract salts"
              },
              "_delegator": {
                "details": "delegator role for privileged access to delegateCallAny"
              },
              "_implementation": {
                "details": "slot for storing implementation address"
              },
              "_owner": {
                "details": "owner role for privileged access to functions"
              }
            },
            "title": "ProxyFactoryBase",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "contracts()": "6c0f79b6",
              "delegator()": "ce9b7930",
              "getImplementation()": "aaf10f42",
              "getMetamorphicContractAddress(bytes32,address)": "8653a465",
              "getNumContracts()": "cfe10b30",
              "lookup(bytes32)": "f39ec1f7",
              "owner()": "8da5cb5b",
              "setDelegator(address)": "83cd9cc3",
              "setImplementation(address)": "d784d426",
              "setOwner(address)": "13af4035"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedRaw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedStatic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedTemplate\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"contracts_\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"delegator_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getMetamorphicContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"lookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDelegator_\",\"type\":\"address\"}],\"name\":\"setDelegator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementationAddress_\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"events\":{\"Deployed(bytes32,address)\":{\"details\":\"events that notify of contract deployment\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory.\"},\"contracts()\":{\"details\":\"contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory\",\"returns\":{\"contracts_\":\"the array of salts associated with all the contracts deployed with this factory\"}},\"delegator()\":{\"details\":\"delegator is public getter function for the _delegator account address\",\"returns\":{\"delegator_\":\"address of the delegator account\"}},\"getImplementation()\":{\"details\":\"getImplementation is public getter function for the _owner account address\"},\"getNumContracts()\":{\"details\":\"getNumContracts getter function for retrieving the total number of contracts deployed with this factory\",\"returns\":{\"_0\":\"the length of the contract array\"}},\"lookup(bytes32)\":{\"details\":\"lookup allows anyone interacting with the contract to get the address of contract specified by its name_\",\"params\":{\"salt_\":\": Custom NatSpec tag @custom:salt at the top of the contract solidity file\"}},\"owner()\":{\"details\":\"owner is public getter function for the _owner account address\",\"returns\":{\"owner_\":\"address of the owner account\"}},\"setDelegator(address)\":{\"details\":\"Sets the new delegator\",\"params\":{\"newDelegator_\":\": address of the new delegator\"}},\"setImplementation(address)\":{\"details\":\"Sets a new implementation address\",\"params\":{\"newImplementationAddress_\":\": address of the contract with the new implementation\"}},\"setOwner(address)\":{\"details\":\"Sets the new owner\",\"params\":{\"newOwner_\":\": address of the new owner\"}}},\"stateVariables\":{\"_contracts\":{\"details\":\"array to store list of contract salts\"},\"_delegator\":{\"details\":\"delegator role for privileged access to delegateCallAny\"},\"_implementation\":{\"details\":\"slot for storing implementation address\"},\"_owner\":{\"details\":\"owner role for privileged access to functions\"}},\"title\":\"ProxyFactoryBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyFactoryBase.sol\":\"ProxyFactoryBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"},\"contracts/ProxyFactoryBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\nimport \\\"./proxy/Proxy.sol\\\";\\nimport \\\"./DeterministicAddress.sol\\\";\\nimport \\\"./proxy/ProxyUpgrader.sol\\\";\\nimport \\\"./proxy/IProxy.sol\\\";\\n\\n/**\\n * @title ProxyFactoryBase\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyFactoryBase is DeterministicAddress, ProxyUpgrader {\\n    /**\\n    @dev owner role for privileged access to functions\\n    */\\n    address private _owner;\\n\\n    /**\\n    @dev delegator role for privileged access to delegateCallAny\\n    */\\n    address private _delegator;\\n\\n    /**\\n    @dev array to store list of contract salts\\n    */\\n    bytes32[] private _contracts;\\n\\n    /**\\n    @dev slot for storing implementation address\\n    */\\n    address private _implementation;\\n\\n    address private immutable _proxyTemplate;\\n\\n    bytes8 private constant _UNIVERSAL_DEPLOY_CODE = 0x38585839386009f3;\\n\\n    /**\\n     *@dev events that notify of contract deployment\\n     */\\n    event Deployed(bytes32 salt, address contractAddr);\\n    event DeployedTemplate(address contractAddr);\\n    event DeployedStatic(address contractAddr);\\n    event DeployedRaw(address contractAddr);\\n    event DeployedProxy(address contractAddr);\\n\\n    // modifier restricts caller to owner or self via multicall\\n    modifier onlyOwner() {\\n        require(msg.sender == address(this) || msg.sender == owner());\\n        _;\\n    }\\n\\n    // modifier restricts caller to owner or self via multicall\\n    modifier onlyOwnerOrDelegator() {\\n        require(\\n            msg.sender == address(this) || msg.sender == owner() || msg.sender == delegator()\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\\n     * account will be set as the first owner of the factory.\\n     */\\n    constructor() {\\n        bytes memory proxyDeployCode = abi.encodePacked(\\n            //8 byte code copy constructor code\\n            _UNIVERSAL_DEPLOY_CODE,\\n            type(Proxy).creationCode,\\n            bytes32(uint256(uint160(address(this))))\\n        );\\n        //variable to store the address created from create(the location of the proxy template contract)\\n        address addr;\\n        assembly {\\n            //deploys the proxy template contract\\n            addr := create(0, add(proxyDeployCode, 0x20), mload(proxyDeployCode))\\n            if iszero(addr) {\\n                //if contract creation fails, we want to return any err messages\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                //revert and return errors\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n        //State var that stores the proxyTemplate address\\n        _proxyTemplate = addr;\\n        //State var that stores the _owner address\\n        _owner = msg.sender;\\n    }\\n\\n    // solhint-disable payable-fallback\\n    /**\\n     * @dev fallback function returns the address of the most recent deployment of a template\\n     */\\n    fallback() external {\\n        assembly {\\n            mstore(returndatasize(), sload(_implementation.slot))\\n            return(returndatasize(), 0x20)\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets a new implementation address\\n     * @param newImplementationAddress_: address of the contract with the new implementation\\n     */\\n    function setImplementation(address newImplementationAddress_) public onlyOwnerOrDelegator {\\n        _implementation = newImplementationAddress_;\\n    }\\n\\n    /**\\n     * @dev Sets the new owner\\n     * @param newOwner_: address of the new owner\\n     */\\n    function setOwner(address newOwner_) public onlyOwner {\\n        _owner = newOwner_;\\n    }\\n\\n    /**\\n     * @dev Sets the new delegator\\n     * @param newDelegator_: address of the new delegator\\n     */\\n    function setDelegator(address newDelegator_) public onlyOwner {\\n        _delegator = newDelegator_;\\n    }\\n\\n    /**\\n     * @dev lookup allows anyone interacting with the contract to get the address of contract specified\\n     * by its name_\\n     * @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file\\n     */\\n    function lookup(bytes32 salt_) public view returns (address addr) {\\n        addr = getMetamorphicContractAddress(salt_, address(this));\\n    }\\n\\n    /**\\n     * @dev getImplementation is public getter function for the _owner account address\\n     */\\n    function getImplementation() public view returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev owner is public getter function for the _owner account address\\n     * @return owner_ address of the owner account\\n     */\\n    function owner() public view returns (address owner_) {\\n        owner_ = _owner;\\n    }\\n\\n    /**\\n     * @dev delegator is public getter function for the _delegator account address\\n     * @return delegator_ address of the delegator account\\n     */\\n    function delegator() public view returns (address delegator_) {\\n        delegator_ = _delegator;\\n    }\\n\\n    /**\\n     * @dev contracts is public getter that gets the array of salts associated with all the contracts\\n     * deployed with this factory\\n     * @return contracts_ the array of salts associated with all the contracts deployed with this\\n     * factory\\n     */\\n    function contracts() public view returns (bytes32[] memory contracts_) {\\n        contracts_ = _contracts;\\n    }\\n\\n    /**\\n     * @dev getNumContracts getter function for retrieving the total number of contracts\\n     * deployed with this factory\\n     * @return the length of the contract array\\n     */\\n    function getNumContracts() public view returns (uint256) {\\n        return _contracts.length;\\n    }\\n\\n    /**\\n     * @dev _callAny allows EOA to call function impersonating the factory address\\n     * @param target_: the address of the contract to be called\\n     * @param value_: value in WEIs to send together the call\\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\\n     */\\n    function _callAny(\\n        address target_,\\n        uint256 value_,\\n        bytes memory cdata_\\n    ) internal {\\n        assembly {\\n            let size := mload(cdata_)\\n            let ptr := add(0x20, cdata_)\\n            if iszero(call(gas(), target_, value_, ptr, size, 0x00, 0x00)) {\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev _delegateCallAny allows EOA to call a function in a contract without impersonating the factory\\n     * @param target_: the address of the contract to be called\\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\\n     */\\n    function _delegateCallAny(address target_, bytes memory cdata_) internal {\\n        assembly {\\n            let size := mload(cdata_)\\n            let ptr := add(0x20, cdata_)\\n            if iszero(delegatecall(gas(), target_, ptr, size, 0x00, 0x00)) {\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev _deployCreate allows the owner to deploy raw contracts through the factory using\\n     * non-deterministic address generation (create OpCode)\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate(bytes calldata deployCode_) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        emit DeployedRaw(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\\n     * factory\\n     * @param value_ endowment value in WEIS for the created contract\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate2(\\n        uint256 value_,\\n        bytes32 salt_,\\n        bytes calldata deployCode_\\n    ) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create2(value_, basePtr, sub(ptr, basePtr), salt_)\\n        }\\n        require(uint160(contractAddr) != 0);\\n        //record the contract salt to the _contracts array for lookup\\n        _contracts.push(salt_);\\n        emit DeployedRaw(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     */\\n    function _deployProxy(bytes32 salt_) internal returns (address contractAddr) {\\n        address proxyTemplate = _proxyTemplate;\\n        assembly {\\n            // store proxy template address as implementation,\\n            sstore(_implementation.slot, proxyTemplate)\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, 0x20))\\n            // put metamorphic code as initCode\\n            // push1 20\\n            mstore(ptr, shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3))\\n            contractAddr := create2(0, ptr, 0x17, salt_)\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        // record the contract salt to the contracts array\\n        _contracts.push(salt_);\\n        emit DeployedProxy(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployStatic finishes the deployment started with the deployTemplate of a contract with\\n     * determinist address. This function call any initialize() function in the deployed contract\\n     * in case the arguments are provided. Should be called after deployTemplate.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\\n     * @return contractAddr the address of the deployed template contract\\n     */\\n    function _deployStatic(bytes32 salt_, bytes calldata initCallData_)\\n        internal\\n        returns (address contractAddr)\\n    {\\n        assembly {\\n            // store proxy template address as implementation,\\n            //sstore(_implementation.slot, _impl)\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, 0x20))\\n            // put metamorphic code as initcode\\n            /*\\n                00 60 PUSH1     20\\n                02 36 CALLDATASIZE          20\\n                03 36 CALLDATASIZE          0 | 20\\n                04 36 CALLDATASIZE          0 | 0 | 20\\n                05 33 CALLER                0 | 0 | 0 | 20\\n                06 5a GAS                   CALLER | 0 | 0 | 0 | 20\\n                07 fa STATICCALL            GAS | CALLER | 0 | 0 | 0 | 20\\n                08 15 ISZERO                tmeplateaddress\\n                09 36 CALLDATASIZE          0\\n                0a 36 CALLDATASIZE          0 | 0\\n                0b 36 CALLDATASIZE          0 | 0 | 0\\n                0c 36 CALLDATASIZE          0 | 0 | 0 | 0\\n                0d 51 MLOAD                 0 | 0 | 0 | 0 | 0\\n                0e 5a GAS                   address | 0 | 0 | 0 | 0\\n                0f f4 DELEGATECALL          GAS | address | 0 | 0 | 0 | 0\\n                10 3d RETURNDATASIZE\\n                11 36 CALLDATASIZE          RETURNDATASIZE\\n                12 36 CALLDATASIZE\\n                13 3e RETURNDATACOPY\\n                14 3d RETURNDATASIZE\\n                15 36 CALLDATASIZE\\n                16 f3 RETURN\\n            */\\n            mstore(ptr, shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3))\\n            contractAddr := create2(0, ptr, 0x17, salt_)\\n            //if the returndatasize is not 0 revert with the error message\\n            if iszero(iszero(returndatasize())) {\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                revert(0, returndatasize())\\n            }\\n            //if contractAddr or code size at contractAddr is 0 revert with deploy fail message\\n            if or(iszero(contractAddr), iszero(extcodesize(contractAddr))) {\\n                mstore(0, \\\"Static deploy failed\\\")\\n                revert(0, 0x20)\\n            }\\n        }\\n        if (initCallData_.length > 0) {\\n            _initializeContract(contractAddr, initCallData_);\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        _contracts.push(salt_);\\n        emit DeployedStatic(contractAddr);\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _deployTemplate deploys a template contract with the universal code copy constructor that\\n     * deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\\n     * @param deployCode_ Hex encoded data with the deploymentCode + (constructor args appended if any)\\n     * @return contractAddr the address of the deployed template contract\\n     */\\n    function _deployTemplate(bytes calldata deployCode_) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            mstore(0x40, add(basePtr, add(deployCode_.length, 0x28)))\\n            let ptr := basePtr\\n            //codesize, pc,  pc, codecopy, codesize, push1 09, return push2 <codesize> 56 5b\\n            /*\\n            00 38 codesize\\n            01 58 pc            codesize\\n            02 58 pc            01 | codesize\\n            03 39 codecopy      02 | 01 | codesize\\n            04 38 codesize\\n            05 60 push1 09      codesize\\n            07 f3 return        09 | codesize\\n             */\\n            mstore(ptr, hex\\\"38585839386009f3\\\")\\n            //0x38585839386009f3\\n            ptr := add(ptr, 0x08)\\n            //copy the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n            // Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n            // put address on constructor\\n            mstore(ptr, address())\\n            ptr := add(ptr, 0x20)\\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\\n        }\\n        require((_extCodeSize(contractAddr) != 0));\\n        emit DeployedTemplate(contractAddr);\\n        _implementation = contractAddr;\\n        return contractAddr;\\n    }\\n\\n    /**\\n     * @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\\n     * @param contract_ address of the contract that will be initialized\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * deployed contract\\n     */\\n    function _initializeContract(address contract_, bytes calldata initCallData_) internal {\\n        assembly {\\n            if iszero(iszero(initCallData_.length)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(initCallData_.length, ptr))\\n                calldatacopy(ptr, initCallData_.offset, initCallData_.length)\\n                if iszero(call(gas(), contract_, 0, ptr, initCallData_.length, 0x00, 0x00)) {\\n                    ptr := mload(0x40)\\n                    mstore(0x40, add(returndatasize(), ptr))\\n                    returndatacopy(ptr, 0x00, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev _multiCall allows EOA to make multiple function calls within a single transaction\\n     * impersonating the factory\\n     * @param cdata_: array of abi encoded data with the function calls (function signature + arguments)\\n     */\\n    function _multiCall(bytes[] calldata cdata_) internal {\\n        for (uint256 i = 0; i < cdata_.length; i++) {\\n            bytes memory cdata = cdata_[i];\\n            _callAny(address(this), 0, cdata);\\n        }\\n        _returnAvailableData();\\n    }\\n\\n    /**\\n     * @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\\n     * @param newImpl_ address of the new contract that contains the new implementation logic\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * new implementation contract\\n     */\\n    function _upgradeProxy(\\n        bytes32 salt_,\\n        address newImpl_,\\n        bytes calldata initCallData_\\n    ) internal {\\n        address proxy = DeterministicAddress.getMetamorphicContractAddress(salt_, address(this));\\n        __upgrade(proxy, newImpl_);\\n        assert(IProxy(proxy).getImplementationAddress() == newImpl_);\\n        _initializeContract(proxy, initCallData_);\\n    }\\n\\n    /**\\n     * @dev Aux function to return the external code size\\n     */\\n    function _extCodeSize(address target_) internal view returns (uint256 size) {\\n        assembly {\\n            size := extcodesize(target_)\\n        }\\n        return size;\\n    }\\n\\n    /**\\n     * @dev Aux function to get the return data size\\n     */\\n    function _returnAvailableData() internal pure {\\n        assembly {\\n            returndatacopy(0x00, 0x00, returndatasize())\\n            return(0x00, returndatasize())\\n        }\\n    }\\n}\",\"keccak256\":\"0x21e0e42b28c12bc301c7ace135a6e1ecfb0398801e20b0fe55682f994464b25b\",\"license\":\"MIT-open-group\"},\"contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\ninterface IProxy {\\n    function getImplementationAddress() external view returns (address);\\n}\",\"keccak256\":\"0xc347986b3d808c671158d689c9ad8a3a9e5f4a78efd5496de3d2777396f9547e\",\"license\":\"MIT-open-group\"},\"contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\nimport \\\"../DeterministicAddress.sol\\\";\\n\\n/**\\n * @title Proxy\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\n/**\\n *@notice RUN OPTIMIZER OFF\\n */\\n/**\\n * @notice Proxy is a delegatecall reverse proxy implementation\\n * the forwarding address is stored at the slot location of not(0)\\n * if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address >\\n * the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation\\n * from upgrading the proxy by changing this slot.\\n * The proxy may be directly upgraded ( if the lock is not set )\\n * by calling the proxy from the factory address using the format\\n * abi.encodeWithSelector(0xca11c0de, <address>);\\n * All other calls will be proxied through to the implementation.\\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal\\n * mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets\\n * the higher order bits to lock the upgrade capability of the proxy.\\n */\\ncontract Proxy {\\n    address private immutable _factory;\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    function getImplementationAddress() public view returns (address) {\\n        assembly {\\n            mstore(\\n                0x00,\\n                and(\\n                    sload(not(0x00)),\\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                )\\n            )\\n            return(0x00, 0x20)\\n        }\\n    }\\n\\n    function _fallback() internal {\\n        // make local copy of factory since immutables\\n        // are not accessable in assembly as of yet\\n        address factory = _factory;\\n        assembly {\\n            // admin is the builtin logic to change the implementation\\n            function admin() {\\n                // this is an assignment to implementation\\n                let newImpl := shr(96, shl(96, calldataload(0x04)))\\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10cced0000) {\\n                    mstore(0x00, \\\"imploc\\\")\\n                    revert(0x00, 0x20)\\n                }\\n                // store address into slot\\n                sstore(not(0x00), newImpl)\\n                stop()\\n            }\\n\\n            // passthrough is the passthrough logic to delegate to the implementation\\n            function passthrough() {\\n                // load free memory pointer\\n                let _ptr := mload(0x40)\\n                // allocate memory proportionate to calldata\\n                mstore(0x40, add(_ptr, calldatasize()))\\n                // copy calldata into memory\\n                calldatacopy(_ptr, 0x00, calldatasize())\\n                let ret := delegatecall(gas(), sload(not(0x00)), _ptr, calldatasize(), 0x00, 0x00)\\n                returndatacopy(_ptr, 0x00, returndatasize())\\n                if iszero(ret) {\\n                    revert(_ptr, returndatasize())\\n                }\\n                return(_ptr, returndatasize())\\n            }\\n\\n            // if caller is factory,\\n            // and has 0xca11c0de<address> as calldata\\n            // run admin logic and return\\n            if eq(caller(), factory) {\\n                if eq(calldatasize(), 0x24) {\\n                    if eq(shr(224, calldataload(0x00)), 0xca11c0de) {\\n                        admin()\\n                    }\\n                }\\n            }\\n            // admin logic was not run so fallthrough to delegatecall\\n            passthrough()\\n        }\\n    }\\n}\",\"keccak256\":\"0x5fa69b8f0352caf985bd7819ae57e2dd058242b2c0e80b438515eef4e0ebc463\",\"license\":\"MIT-open-group\"},\"contracts/proxy/ProxyUpgrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\n/**\\n * @title ProxyUpgrader\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyUpgrader {\\n    function __upgrade(address _proxy, address _newImpl) internal {\\n        bytes memory cdata = abi.encodeWithSelector(0xca11c0de, _newImpl);\\n        assembly {\\n            if iszero(call(gas(), _proxy, 0, add(cdata, 0x20), mload(cdata), 0x00, 0x00)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(ptr, returndatasize()))\\n                returndatacopy(ptr, 0x00, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x8624e3484483c08a915373bad20733917f498d0445a539025e93f7c29b5c1dbe\",\"license\":\"MIT-open-group\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 256,
                "contract": "contracts/ProxyFactoryBase.sol:ProxyFactoryBase",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 259,
                "contract": "contracts/ProxyFactoryBase.sol:ProxyFactoryBase",
                "label": "_delegator",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 263,
                "contract": "contracts/ProxyFactoryBase.sol:ProxyFactoryBase",
                "label": "_contracts",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "astId": 266,
                "contract": "contracts/ProxyFactoryBase.sol:ProxyFactoryBase",
                "label": "_implementation",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_bytes32)dyn_storage": {
                "base": "t_bytes32",
                "encoding": "dynamic_array",
                "label": "bytes32[]",
                "numberOfBytes": "32"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/proxy/IProxy.sol": {
        "IProxy": {
          "abi": [
            {
              "inputs": [],
              "name": "getImplementationAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "getImplementationAddress()": "0cbcae70"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\ninterface IProxy {\\n    function getImplementationAddress() external view returns (address);\\n}\",\"keccak256\":\"0xc347986b3d808c671158d689c9ad8a3a9e5f4a78efd5496de3d2777396f9547e\",\"license\":\"MIT-open-group\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/proxy/Proxy.sol": {
        "Proxy": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "getImplementationAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_822": {
                  "entryPoint": null,
                  "id": 822,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b503360805260805161021761002f6000396000607901526102176000f3fe6080604052600436106100225760003560e01c80630cbcae701461003957610031565b366100315761002f610077565b005b61002f610077565b34801561004557600080fd5b5061004e61019e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610169565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5473ffffffffffffffffffffffffffffffffffffffff600435169060a01c6bca11c0de15dead10cced00001415610119577f696d706c6f63000000000000000000000000000000000000000000000000000060005260206000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff55005b60405136810160405236600082376000803683600019545af43d6000833e80610164573d82fd5b503d81f35b803314156101935760243614156101935763ca11c0de60003560e01c14156101935761019361009d565b61019b61013d565b50565b600073ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff541660005260206000f3fea26469706673582212204d2fc8317b6216965fbf33d316516c31e54e3ccc8875a5f50bba448cfefae1db64736f6c634300080b0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x217 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x79 ADD MSTORE PUSH2 0x217 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBCAE70 EQ PUSH2 0x39 JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F PUSH2 0x77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH2 0x169 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND SWAP1 PUSH1 0xA0 SHR PUSH12 0xCA11C0DE15DEAD10CCED0000 EQ ISZERO PUSH2 0x119 JUMPI PUSH32 0x696D706C6F630000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE DUP2 ADD PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 PUSH1 0x0 NOT SLOAD GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 PUSH2 0x164 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN JUMPDEST DUP1 CALLER EQ ISZERO PUSH2 0x193 JUMPI PUSH1 0x24 CALLDATASIZE EQ ISZERO PUSH2 0x193 JUMPI PUSH4 0xCA11C0DE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR EQ ISZERO PUSH2 0x193 JUMPI PUSH2 0x193 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x19B PUSH2 0x13D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD AND PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0x2F 0xC8 BALANCE PUSH28 0x6216965FBF33D316516C31E54E3CCC8875A5F50BBA448CFEFAE1DB64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "1189:2567:4:-:0;;;1251:52;;;;;;;;;-1:-1:-1;1286:10:4;1275:21;;1189:2567;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_829": {
                  "entryPoint": null,
                  "id": 829,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_836": {
                  "entryPoint": null,
                  "id": 836,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_fallback_852": {
                  "entryPoint": 119,
                  "id": 852,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getImplementationAddress_843": {
                  "entryPoint": 414,
                  "id": 843,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:242:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "190:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:6",
                            "type": ""
                          }
                        ],
                        "src": "14:226:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "813": [
                  {
                    "length": 32,
                    "start": 121
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436106100225760003560e01c80630cbcae701461003957610031565b366100315761002f610077565b005b61002f610077565b34801561004557600080fd5b5061004e61019e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610169565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5473ffffffffffffffffffffffffffffffffffffffff600435169060a01c6bca11c0de15dead10cced00001415610119577f696d706c6f63000000000000000000000000000000000000000000000000000060005260206000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff55005b60405136810160405236600082376000803683600019545af43d6000833e80610164573d82fd5b503d81f35b803314156101935760243614156101935763ca11c0de60003560e01c14156101935761019361009d565b61019b61013d565b50565b600073ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff541660005260206000f3fea26469706673582212204d2fc8317b6216965fbf33d316516c31e54e3ccc8875a5f50bba448cfefae1db64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBCAE70 EQ PUSH2 0x39 JUMPI PUSH2 0x31 JUMP JUMPDEST CALLDATASIZE PUSH2 0x31 JUMPI PUSH2 0x2F PUSH2 0x77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F PUSH2 0x77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH2 0x169 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND SWAP1 PUSH1 0xA0 SHR PUSH12 0xCA11C0DE15DEAD10CCED0000 EQ ISZERO PUSH2 0x119 JUMPI PUSH32 0x696D706C6F630000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE DUP2 ADD PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 PUSH1 0x0 NOT SLOAD GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 PUSH2 0x164 JUMPI RETURNDATASIZE DUP3 REVERT JUMPDEST POP RETURNDATASIZE DUP2 RETURN JUMPDEST DUP1 CALLER EQ ISZERO PUSH2 0x193 JUMPI PUSH1 0x24 CALLDATASIZE EQ ISZERO PUSH2 0x193 JUMPI PUSH4 0xCA11C0DE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR EQ ISZERO PUSH2 0x193 JUMPI PUSH2 0x193 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x19B PUSH2 0x13D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD AND PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0x2F 0xC8 BALANCE PUSH28 0x6216965FBF33D316516C31E54E3CCC8875A5F50BBA448CFEFAE1DB64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "1189:2567:4:-:0;;;;;;;;;;;;;;;;;;;;;;;1346:11;:9;:11::i;:::-;1189:2567;;1408:11;:9;:11::i;1432:353::-;;;;;;;;;;;;;:::i;:::-;;;190:42:6;178:55;;;160:74;;148:2;133:18;1432:353:4;;;;;;;1791:1963;1956:8;2068:448;;;2251:9;2245:16;2177:36;2206:4;2193:18;2177:36;;2240:3;2236:26;2264;2233:58;2230:163;;;2327:8;2321:4;2314:22;2370:4;2364;2357:18;2230:163;2460:9;2453:26;2496:6;2616:650;2719:4;2713:11;2825:14;2819:4;2815:25;2809:4;2802:39;2928:14;2922:4;2916;2903:40;3037:4;3031;3015:14;3009:4;3001;2997:9;2991:16;2984:5;2971:71;3086:16;3080:4;3074;3059:44;3130:3;3120:85;;3170:16;3164:4;3157:30;3120:85;;3235:16;3229:4;3222:30;2616:650;3430:7;3420:8;3417:21;3414:228;;;3479:4;3463:14;3460:24;3457:171;;;3543:10;3535:4;3522:18;3517:3;3513:28;3510:44;3507:103;;;3581:7;;:::i;:::-;3725:13;;:::i;:::-;1983:1765;1791:1963::o;1432:353::-;1489:7;1640:66;1608:9;1602:16;1577:147;1612:4;1531:207;1764:4;1612;1751:18"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "107000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "": "infinite",
                "getImplementationAddress()": "2237"
              },
              "internal": {
                "_fallback()": "infinite"
              }
            },
            "methodIdentifiers": {
              "getImplementationAddress()": "0cbcae70"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Proxy is a delegatecall reverse proxy implementation the forwarding address is stored at the slot location of not(0) if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address > the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation from upgrading the proxy by changing this slot. The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the factory address using the format abi.encodeWithSelector(0xca11c0de, <address>); All other calls will be proxied through to the implementation. The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the proxy.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"},\"contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\nimport \\\"../DeterministicAddress.sol\\\";\\n\\n/**\\n * @title Proxy\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\n/**\\n *@notice RUN OPTIMIZER OFF\\n */\\n/**\\n * @notice Proxy is a delegatecall reverse proxy implementation\\n * the forwarding address is stored at the slot location of not(0)\\n * if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address >\\n * the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation\\n * from upgrading the proxy by changing this slot.\\n * The proxy may be directly upgraded ( if the lock is not set )\\n * by calling the proxy from the factory address using the format\\n * abi.encodeWithSelector(0xca11c0de, <address>);\\n * All other calls will be proxied through to the implementation.\\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal\\n * mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets\\n * the higher order bits to lock the upgrade capability of the proxy.\\n */\\ncontract Proxy {\\n    address private immutable _factory;\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    function getImplementationAddress() public view returns (address) {\\n        assembly {\\n            mstore(\\n                0x00,\\n                and(\\n                    sload(not(0x00)),\\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                )\\n            )\\n            return(0x00, 0x20)\\n        }\\n    }\\n\\n    function _fallback() internal {\\n        // make local copy of factory since immutables\\n        // are not accessable in assembly as of yet\\n        address factory = _factory;\\n        assembly {\\n            // admin is the builtin logic to change the implementation\\n            function admin() {\\n                // this is an assignment to implementation\\n                let newImpl := shr(96, shl(96, calldataload(0x04)))\\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10cced0000) {\\n                    mstore(0x00, \\\"imploc\\\")\\n                    revert(0x00, 0x20)\\n                }\\n                // store address into slot\\n                sstore(not(0x00), newImpl)\\n                stop()\\n            }\\n\\n            // passthrough is the passthrough logic to delegate to the implementation\\n            function passthrough() {\\n                // load free memory pointer\\n                let _ptr := mload(0x40)\\n                // allocate memory proportionate to calldata\\n                mstore(0x40, add(_ptr, calldatasize()))\\n                // copy calldata into memory\\n                calldatacopy(_ptr, 0x00, calldatasize())\\n                let ret := delegatecall(gas(), sload(not(0x00)), _ptr, calldatasize(), 0x00, 0x00)\\n                returndatacopy(_ptr, 0x00, returndatasize())\\n                if iszero(ret) {\\n                    revert(_ptr, returndatasize())\\n                }\\n                return(_ptr, returndatasize())\\n            }\\n\\n            // if caller is factory,\\n            // and has 0xca11c0de<address> as calldata\\n            // run admin logic and return\\n            if eq(caller(), factory) {\\n                if eq(calldatasize(), 0x24) {\\n                    if eq(shr(224, calldataload(0x00)), 0xca11c0de) {\\n                        admin()\\n                    }\\n                }\\n            }\\n            // admin logic was not run so fallthrough to delegatecall\\n            passthrough()\\n        }\\n    }\\n}\",\"keccak256\":\"0x5fa69b8f0352caf985bd7819ae57e2dd058242b2c0e80b438515eef4e0ebc463\",\"license\":\"MIT-open-group\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Proxy is a delegatecall reverse proxy implementation the forwarding address is stored at the slot location of not(0) if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address > the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation from upgrading the proxy by changing this slot. The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the factory address using the format abi.encodeWithSelector(0xca11c0de, <address>); All other calls will be proxied through to the implementation. The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the proxy.",
            "version": 1
          }
        }
      },
      "contracts/proxy/ProxyUpgrader.sol": {
        "ProxyUpgrader": {
          "abi": [],
          "devdoc": {
            "author": "Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)",
            "kind": "dev",
            "methods": {},
            "title": "ProxyUpgrader",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProxyUpgrader\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/ProxyUpgrader.sol\":\"ProxyUpgrader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/ProxyUpgrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\n/**\\n * @title ProxyUpgrader\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyUpgrader {\\n    function __upgrade(address _proxy, address _newImpl) internal {\\n        bytes memory cdata = abi.encodeWithSelector(0xca11c0de, _newImpl);\\n        assembly {\\n            if iszero(call(gas(), _proxy, 0, add(cdata, 0x20), mload(cdata), 0x00, 0x00)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(ptr, returndatasize()))\\n                returndatacopy(ptr, 0x00, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x8624e3484483c08a915373bad20733917f498d0445a539025e93f7c29b5c1dbe\",\"license\":\"MIT-open-group\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/DeterministicAddress.sol": {
        "ast": {
          "absolutePath": "contracts/DeterministicAddress.sol",
          "exportedSymbols": {
            "DeterministicAddress": [
              36
            ]
          },
          "id": 37,
          "license": "MIT-open-group",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".11"
              ],
              "nodeType": "PragmaDirective",
              "src": "43:24:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "DeterministicAddress",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "68:109:0",
                "text": " @title DeterministicAddress\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"
              },
              "fullyImplemented": true,
              "id": 36,
              "linearizedBaseContracts": [
                36
              ],
              "name": "DeterministicAddress",
              "nameLocation": "196:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 34,
                    "nodeType": "Block",
                    "src": "353:699:0",
                    "statements": [
                      {
                        "assignments": [
                          12
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12,
                            "mutability": "mutable",
                            "name": "metamorphicContractBytecodeHash_",
                            "nameLocation": "475:32:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 34,
                            "src": "467:40:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 11,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "467:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 14,
                        "initialValue": {
                          "hexValue": "307831633062663730336133343135636164613937383565383965396437303331346333313131616537643865303466333362623432656231643236343038386265",
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "510:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_12685899907464310292211268635673190940071670868321310578737787880529194944702_by_1",
                            "typeString": "int_const 1268...(69 digits omitted)...4702"
                          },
                          "value": "0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "467:109:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "ff",
                                              "id": 24,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "hexString",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "781:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
                                                "typeString": "literal_string hex\"ff\""
                                              }
                                            },
                                            {
                                              "id": 25,
                                              "name": "_factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6,
                                              "src": "822:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 26,
                                              "name": "_salt",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4,
                                              "src": "864:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            {
                                              "id": 27,
                                              "name": "metamorphicContractBytecodeHash_",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12,
                                              "src": "903:32:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
                                                "typeString": "literal_string hex\"ff\""
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "expression": {
                                              "id": 22,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "731:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 23,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "731:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 28,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "731:234:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 21,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "692:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 29,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "692:299:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 20,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "659:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 19,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "659:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 30,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "659:354:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 18,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "630:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 17,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "630:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "630:401:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "605:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "605:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "605:440:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 10,
                        "id": 33,
                        "nodeType": "Return",
                        "src": "586:459:0"
                      }
                    ]
                  },
                  "functionSelector": "8653a465",
                  "id": 35,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMetamorphicContractAddress",
                  "nameLocation": "232:29:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "_salt",
                        "nameLocation": "270:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "262:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "262:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "_factory",
                        "nameLocation": "285:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "277:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "261:33:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "340:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "339:9:0"
                  },
                  "scope": 36,
                  "src": "223:829:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 37,
              "src": "178:876:0",
              "usedErrors": []
            }
          ],
          "src": "43:1012:0"
        },
        "id": 0
      },
      "contracts/ProxyFactory.sol": {
        "ast": {
          "absolutePath": "contracts/ProxyFactory.sol",
          "exportedSymbols": {
            "DeterministicAddress": [
              36
            ],
            "IProxy": [
              807
            ],
            "Proxy": [
              853
            ],
            "ProxyFactory": [
              242
            ],
            "ProxyFactoryBase": [
              799
            ],
            "ProxyUpgrader": [
              874
            ]
          },
          "id": 243,
          "license": "MIT-open-group",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 38,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".11"
              ],
              "nodeType": "PragmaDirective",
              "src": "43:24:1"
            },
            {
              "absolutePath": "contracts/DeterministicAddress.sol",
              "file": "./DeterministicAddress.sol",
              "id": 39,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 243,
              "sourceUnit": 37,
              "src": "68:36:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/proxy/Proxy.sol",
              "file": "./proxy/Proxy.sol",
              "id": 40,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 243,
              "sourceUnit": 854,
              "src": "105:27:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ProxyFactoryBase.sol",
              "file": "./ProxyFactoryBase.sol",
              "id": 41,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 243,
              "sourceUnit": 800,
              "src": "133:32:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 43,
                    "name": "ProxyFactoryBase",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "324:16:1"
                  },
                  "id": 44,
                  "nodeType": "InheritanceSpecifier",
                  "src": "324:16:1"
                }
              ],
              "canonicalName": "ProxyFactory",
              "contractDependencies": [
                853
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 42,
                "nodeType": "StructuredDocumentation",
                "src": "269:30:1",
                "text": "@custom:salt ProxyFactory"
              },
              "fullyImplemented": true,
              "id": 242,
              "linearizedBaseContracts": [
                242,
                799,
                874,
                36
              ],
              "name": "ProxyFactory",
              "nameLocation": "308:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 50,
                    "nodeType": "Block",
                    "src": "970:2:1",
                    "statements": []
                  },
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "347:585:1",
                    "text": " @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n The result of this deployment will be a contract with the proxy contract deployment bytecode with\n its constructor at the head, runtime code in the body and constructor args at the tail. The\n constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n account will be set as the first owner of the factory."
                  },
                  "id": 51,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 48,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 47,
                        "name": "ProxyFactoryBase",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "951:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "951:18:1"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "948:2:1"
                  },
                  "returnParameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "970:0:1"
                  },
                  "scope": 242,
                  "src": "937:35:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "1442:118:1",
                    "statements": [
                      {
                        "assignments": [
                          64
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 64,
                            "mutability": "mutable",
                            "name": "cdata",
                            "nameLocation": "1465:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 76,
                            "src": "1452:18:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 63,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1452:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 66,
                        "initialValue": {
                          "id": 65,
                          "name": "cdata_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1473:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1452:27:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 68,
                              "name": "target_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1498:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 69,
                              "name": "value_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "1507:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 70,
                              "name": "cdata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "1515:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 67,
                            "name": "_callAny",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "1489:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory)"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 72,
                        "nodeType": "ExpressionStatement",
                        "src": "1489:32:1"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 73,
                            "name": "_returnAvailableData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "1531:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:22:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 52,
                    "nodeType": "StructuredDocumentation",
                    "src": "978:331:1",
                    "text": " @dev callAny allows EOA to call function impersonating the factory address\n @param target_: the address of the contract to be called\n @param value_: value in WEIs to send together the call\n @param cdata_: Hex encoded state with function signature + arguments of the target function to be called"
                  },
                  "functionSelector": "12e6bf6a",
                  "id": 77,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 61,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 60,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "1432:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1432:9:1"
                    }
                  ],
                  "name": "callAny",
                  "nameLocation": "1323:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "target_",
                        "nameLocation": "1348:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "1340:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1340:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "value_",
                        "nameLocation": "1373:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "1365:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1365:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "cdata_",
                        "nameLocation": "1404:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "1389:21:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1389:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1330:86:1"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1442:0:1"
                  },
                  "scope": 242,
                  "src": "1314:246:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1993:118:1",
                    "statements": [
                      {
                        "assignments": [
                          88
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 88,
                            "mutability": "mutable",
                            "name": "cdata",
                            "nameLocation": "2016:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 99,
                            "src": "2003:18:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 87,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2003:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 90,
                        "initialValue": {
                          "id": 89,
                          "name": "cdata_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "2024:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2003:27:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "target_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "2057:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 93,
                              "name": "cdata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "2066:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 91,
                            "name": "_delegateCallAny",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "2040:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory)"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2040:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 95,
                        "nodeType": "ExpressionStatement",
                        "src": "2040:32:1"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 96,
                            "name": "_returnAvailableData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "2082:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2082:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "2082:22:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 78,
                    "nodeType": "StructuredDocumentation",
                    "src": "1566:293:1",
                    "text": " @dev delegateCallAny allows EOA to call a function in a contract without impersonating the factory\n @param target_: the address of the contract to be called\n @param cdata_: Hex encoded state with function signature + arguments of the target function to be called"
                  },
                  "functionSelector": "4713ee7a",
                  "id": 100,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 85,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 84,
                        "name": "onlyOwnerOrDelegator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 340,
                        "src": "1968:20:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1968:20:1"
                    }
                  ],
                  "name": "delegateCallAny",
                  "nameLocation": "1873:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "target_",
                        "nameLocation": "1897:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "1889:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1889:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "cdata_",
                        "nameLocation": "1921:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "1906:21:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1906:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1888:40:1"
                  },
                  "returnParameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1993:0:1"
                  },
                  "scope": 242,
                  "src": "1864:247:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "2606:50:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 111,
                              "name": "deployCode_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "2637:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 110,
                            "name": "_deployCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "2623:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes calldata) returns (address)"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2623:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 109,
                        "id": 113,
                        "nodeType": "Return",
                        "src": "2616:33:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 101,
                    "nodeType": "StructuredDocumentation",
                    "src": "2117:358:1",
                    "text": " @dev deployCreate allows the owner to deploy raw contracts through the factory using\n non-deterministic address generation (create OpCode)\n @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"
                  },
                  "functionSelector": "27fe1822",
                  "id": 115,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 106,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 105,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "2553:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2553:9:1"
                    }
                  ],
                  "name": "deployCreate",
                  "nameLocation": "2489:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 103,
                        "mutability": "mutable",
                        "name": "deployCode_",
                        "nameLocation": "2517:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2502:26:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2502:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2501:28:1"
                  },
                  "returnParameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "2588:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2580:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2580:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2579:22:1"
                  },
                  "scope": 242,
                  "src": "2480:176:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "3327:74:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 129,
                            "name": "contractAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "3337:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 131,
                                "name": "value_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "3367:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 132,
                                "name": "salt_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "3375:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 133,
                                "name": "deployCode_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "3382:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 130,
                              "name": "_deployCreate2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "3352:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                                "typeString": "function (uint256,bytes32,bytes calldata) returns (address)"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3352:42:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3337:57:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "3337:57:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 116,
                    "nodeType": "StructuredDocumentation",
                    "src": "2662:492:1",
                    "text": " @dev deployCreate2 allows the owner to deploy contracts with deterministic address\n through the factory\n @param value_ endowment value in WEIS for the created contract\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"
                  },
                  "functionSelector": "56f2a761",
                  "id": 138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 125,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 124,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "3286:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3286:9:1"
                    }
                  ],
                  "name": "deployCreate2",
                  "nameLocation": "3168:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "value_",
                        "nameLocation": "3199:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "3191:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "3223:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "3215:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3215:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "deployCode_",
                        "nameLocation": "3253:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "3238:26:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3238:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3181:89:1"
                  },
                  "returnParameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "3313:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "3305:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3305:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3304:22:1"
                  },
                  "scope": 242,
                  "src": "3159:242:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "3702:51:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 148,
                            "name": "contractAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "3712:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 150,
                                "name": "salt_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3740:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 149,
                              "name": "_deployProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "3727:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) returns (address)"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3727:19:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3712:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "3712:34:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 139,
                    "nodeType": "StructuredDocumentation",
                    "src": "3407:206:1",
                    "text": " @dev deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n @param salt_ salt used to determine the final determinist address for the deployed contract"
                  },
                  "functionSelector": "39cab472",
                  "id": 155,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 144,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 143,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "3661:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3661:9:1"
                    }
                  ],
                  "name": "deployProxy",
                  "nameLocation": "3627:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "3647:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 155,
                        "src": "3639:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3639:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3638:15:1"
                  },
                  "returnParameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "3688:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 155,
                        "src": "3680:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3680:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3679:22:1"
                  },
                  "scope": 242,
                  "src": "3618:135:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "4494:67:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 167,
                            "name": "contractAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "4504:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 169,
                                "name": "salt_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 158,
                                "src": "4533:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 170,
                                "name": "initCallData_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 160,
                                "src": "4540:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 168,
                              "name": "_deployStatic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "4519:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes calldata) returns (address)"
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4519:35:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4504:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "4504:50:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 156,
                    "nodeType": "StructuredDocumentation",
                    "src": "3759:587:1",
                    "text": " @dev deployStatic finishes the deployment started with the deployTemplate of a contract with\n determinist address. This function call any initialize() function in the deployed contract\n in case the arguments are provided. Should be called after deployTemplate.\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\n @return contractAddr the address of the deployed template contract"
                  },
                  "functionSelector": "fa481da5",
                  "id": 175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 163,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 162,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "4441:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4441:9:1"
                    }
                  ],
                  "name": "deployStatic",
                  "nameLocation": "4360:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "4381:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "4373:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4373:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "mutability": "mutable",
                        "name": "initCallData_",
                        "nameLocation": "4403:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "4388:28:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4388:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4372:45:1"
                  },
                  "returnParameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "4476:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "4468:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4468:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4467:22:1"
                  },
                  "scope": 242,
                  "src": "4351:210:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "5093:60:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 185,
                            "name": "contractAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "5103:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 187,
                                "name": "deployCode_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 178,
                                "src": "5134:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 186,
                              "name": "_deployTemplate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "5118:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes calldata) returns (address)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5118:28:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5103:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "5103:43:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "4567:393:1",
                    "text": " @dev deployTemplate deploys a template contract with the universal code copy constructor that\n deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\n @param deployCode_ Hex encoded state with the deploymentCode + (constructor args appended if any)\n @return contractAddr the address of the deployed template contract"
                  },
                  "functionSelector": "17cff2c5",
                  "id": 192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 181,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 180,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "5040:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5040:9:1"
                    }
                  ],
                  "name": "deployTemplate",
                  "nameLocation": "4974:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "deployCode_",
                        "nameLocation": "5004:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "4989:26:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4989:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4988:28:1"
                  },
                  "returnParameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "5075:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "5067:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5067:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5066:22:1"
                  },
                  "scope": 242,
                  "src": "4965:188:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "5606:62:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 203,
                              "name": "contract_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "5636:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 204,
                              "name": "initCallData_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "5647:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 202,
                            "name": "_initializeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "5616:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,bytes calldata)"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5616:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "5616:45:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "5159:317:1",
                    "text": " @dev initializeContract allows the owner/delegator to initialize contracts deployed via factory\n @param contract_ address of the contract that will be initialized\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n deployed contract"
                  },
                  "functionSelector": "e1d7a8e4",
                  "id": 208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 200,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 199,
                        "name": "onlyOwnerOrDelegator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 340,
                        "src": "5581:20:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5581:20:1"
                    }
                  ],
                  "name": "initializeContract",
                  "nameLocation": "5490:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "contract_",
                        "nameLocation": "5517:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "5509:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5509:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "initCallData_",
                        "nameLocation": "5543:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "5528:28:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5528:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5508:49:1"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5606:0:1"
                  },
                  "scope": 242,
                  "src": "5481:187:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "5983:35:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 218,
                              "name": "cdata_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "6004:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "bytes calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "bytes calldata[] calldata"
                              }
                            ],
                            "id": 217,
                            "name": "_multiCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "5993:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (bytes calldata[] calldata)"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5993:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "5993:18:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "5674:243:1",
                    "text": " @dev multiCall allows EOA to make multiple function calls within a single transaction\n impersonating the factory\n @param cdata_: array of hex encoded state with the function calls (function signature + arguments)"
                  },
                  "functionSelector": "348a0cdc",
                  "id": 222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 215,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 214,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "5973:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5973:9:1"
                    }
                  ],
                  "name": "multiCall",
                  "nameLocation": "5931:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "cdata_",
                        "nameLocation": "5958:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "5941:23:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 210,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5941:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 211,
                          "nodeType": "ArrayTypeName",
                          "src": "5941:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5940:25:1"
                  },
                  "returnParameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5983:0:1"
                  },
                  "scope": 242,
                  "src": "5922:96:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 240,
                    "nodeType": "Block",
                    "src": "6616:62:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 235,
                              "name": "salt_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "6640:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 236,
                              "name": "newImpl_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "6647:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 237,
                              "name": "initCallData_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "6657:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 234,
                            "name": "_upgradeProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "6626:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,bytes calldata)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6626:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "6626:45:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 223,
                    "nodeType": "StructuredDocumentation",
                    "src": "6024:455:1",
                    "text": " @dev upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n @param newImpl_ address of the new contract that contains the new implementation logic\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n new implementation contract"
                  },
                  "functionSelector": "043c9414",
                  "id": 241,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 232,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 231,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "6606:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6606:9:1"
                    }
                  ],
                  "name": "upgradeProxy",
                  "nameLocation": "6493:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "6523:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 241,
                        "src": "6515:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6515:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "newImpl_",
                        "nameLocation": "6546:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 241,
                        "src": "6538:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6538:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "initCallData_",
                        "nameLocation": "6579:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 241,
                        "src": "6564:28:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6564:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6505:93:1"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6616:0:1"
                  },
                  "scope": 242,
                  "src": "6484:194:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 243,
              "src": "299:6381:1",
              "usedErrors": []
            }
          ],
          "src": "43:6637:1"
        },
        "id": 1
      },
      "contracts/ProxyFactoryBase.sol": {
        "ast": {
          "absolutePath": "contracts/ProxyFactoryBase.sol",
          "exportedSymbols": {
            "DeterministicAddress": [
              36
            ],
            "IProxy": [
              807
            ],
            "Proxy": [
              853
            ],
            "ProxyFactoryBase": [
              799
            ],
            "ProxyUpgrader": [
              874
            ]
          },
          "id": 800,
          "license": "MIT-open-group",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 244,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".11"
              ],
              "nodeType": "PragmaDirective",
              "src": "43:24:2"
            },
            {
              "absolutePath": "contracts/proxy/Proxy.sol",
              "file": "./proxy/Proxy.sol",
              "id": 245,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 854,
              "src": "68:27:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/DeterministicAddress.sol",
              "file": "./DeterministicAddress.sol",
              "id": 246,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 37,
              "src": "96:36:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/proxy/ProxyUpgrader.sol",
              "file": "./proxy/ProxyUpgrader.sol",
              "id": 247,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 875,
              "src": "133:35:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/proxy/IProxy.sol",
              "file": "./proxy/IProxy.sol",
              "id": 248,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 808,
              "src": "169:28:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 250,
                    "name": "DeterministicAddress",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 36,
                    "src": "343:20:2"
                  },
                  "id": 251,
                  "nodeType": "InheritanceSpecifier",
                  "src": "343:20:2"
                },
                {
                  "baseName": {
                    "id": 252,
                    "name": "ProxyUpgrader",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 874,
                    "src": "365:13:2"
                  },
                  "id": 253,
                  "nodeType": "InheritanceSpecifier",
                  "src": "365:13:2"
                }
              ],
              "canonicalName": "ProxyFactoryBase",
              "contractDependencies": [
                853
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 249,
                "nodeType": "StructuredDocumentation",
                "src": "199:105:2",
                "text": " @title ProxyFactoryBase\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                874,
                36
              ],
              "name": "ProxyFactoryBase",
              "nameLocation": "323:16:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "385:65:2",
                    "text": "@dev owner role for privileged access to functions"
                  },
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "471:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "455:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "484:75:2",
                    "text": "@dev delegator role for privileged access to delegateCallAny"
                  },
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_delegator",
                  "nameLocation": "580:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "564:26:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "597:57:2",
                    "text": "@dev array to store list of contract salts"
                  },
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_contracts",
                  "nameLocation": "677:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "659:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 261,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "659:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 262,
                    "nodeType": "ArrayTypeName",
                    "src": "659:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "694:59:2",
                    "text": "@dev slot for storing implementation address"
                  },
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "774:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "758:31:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "immutable",
                  "name": "_proxyTemplate",
                  "nameLocation": "822:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "796:40:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 271,
                  "mutability": "constant",
                  "name": "_UNIVERSAL_DEPLOY_CODE",
                  "nameLocation": "867:22:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "843:67:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "value": {
                    "hexValue": "307833383538353833393338363030396633",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "892:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4060092066856700403_by_1",
                      "typeString": "int_const 4060092066856700403"
                    },
                    "value": "0x38585839386009f3"
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "917:64:2",
                    "text": "@dev events that notify of contract deployment"
                  },
                  "id": 278,
                  "name": "Deployed",
                  "nameLocation": "992:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "1009:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1001:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1001:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 276,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "1023:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1015:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1015:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1000:36:2"
                  },
                  "src": "986:51:2"
                },
                {
                  "anonymous": false,
                  "id": 282,
                  "name": "DeployedTemplate",
                  "nameLocation": "1048:16:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "1073:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1065:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1065:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1064:22:2"
                  },
                  "src": "1042:45:2"
                },
                {
                  "anonymous": false,
                  "id": 286,
                  "name": "DeployedStatic",
                  "nameLocation": "1098:14:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 284,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "1121:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "1113:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1112:22:2"
                  },
                  "src": "1092:43:2"
                },
                {
                  "anonymous": false,
                  "id": 290,
                  "name": "DeployedRaw",
                  "nameLocation": "1146:11:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "1166:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "1158:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1158:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1157:22:2"
                  },
                  "src": "1140:40:2"
                },
                {
                  "anonymous": false,
                  "id": 294,
                  "name": "DeployedProxy",
                  "nameLocation": "1191:13:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "1213:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "1205:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1205:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1204:22:2"
                  },
                  "src": "1185:42:2"
                },
                {
                  "body": {
                    "id": 313,
                    "nodeType": "Block",
                    "src": "1318:89:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 297,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1336:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1336:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 301,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1358:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                        "typeString": "contract ProxyFactoryBase"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                        "typeString": "contract ProxyFactoryBase"
                                      }
                                    ],
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1350:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 299,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1350:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1350:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1336:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 304,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1367:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1367:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 306,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 466,
                                    "src": "1381:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1381:7:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1367:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1336:52:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1328:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1328:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "ExpressionStatement",
                        "src": "1328:61:2"
                      },
                      {
                        "id": 312,
                        "nodeType": "PlaceholderStatement",
                        "src": "1399:1:2"
                      }
                    ]
                  },
                  "id": 314,
                  "name": "onlyOwner",
                  "nameLocation": "1306:9:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1315:2:2"
                  },
                  "src": "1297:110:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 339,
                    "nodeType": "Block",
                    "src": "1509:140:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 317,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1540:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1540:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 321,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1562:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                          "typeString": "contract ProxyFactoryBase"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                          "typeString": "contract ProxyFactoryBase"
                                        }
                                      ],
                                      "id": 320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1554:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 319,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1554:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1554:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1540:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 324,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1571:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1571:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 326,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 466,
                                      "src": "1585:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1585:7:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1571:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1540:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 330,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1596:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1596:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 332,
                                    "name": "delegator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 477,
                                    "src": "1610:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1610:11:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1596:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1540:81:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 316,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1519:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1519:112:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "1519:112:2"
                      },
                      {
                        "id": 338,
                        "nodeType": "PlaceholderStatement",
                        "src": "1641:1:2"
                      }
                    ]
                  },
                  "id": 340,
                  "name": "onlyOwnerOrDelegator",
                  "nameLocation": "1486:20:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1506:2:2"
                  },
                  "src": "1477:172:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "2259:983:2",
                    "statements": [
                      {
                        "assignments": [
                          345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 345,
                            "mutability": "mutable",
                            "name": "proxyDeployCode",
                            "nameLocation": "2282:15:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 381,
                            "src": "2269:28:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 344,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2269:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 367,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 348,
                              "name": "_UNIVERSAL_DEPLOY_CODE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "2378:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes8",
                                "typeString": "bytes8"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 350,
                                    "name": "Proxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 853,
                                    "src": "2419:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Proxy_$853_$",
                                      "typeString": "type(contract Proxy)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_Proxy_$853_$",
                                      "typeString": "type(contract Proxy)"
                                    }
                                  ],
                                  "id": 349,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2414:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2414:11:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_Proxy_$853",
                                  "typeString": "type(contract Proxy)"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "creationCode",
                              "nodeType": "MemberAccess",
                              "src": "2414:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 361,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "2484:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                                "typeString": "contract ProxyFactoryBase"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                                "typeString": "contract ProxyFactoryBase"
                                              }
                                            ],
                                            "id": 360,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2476:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 359,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2476:7:2",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 362,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2476:13:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2468:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint160_$",
                                          "typeString": "type(uint160)"
                                        },
                                        "typeName": {
                                          "id": 357,
                                          "name": "uint160",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2468:7:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 363,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2468:22:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    ],
                                    "id": 356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2460:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 355,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2460:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2460:31:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2452:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 353,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2452:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2452:40:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes8",
                                "typeString": "bytes8"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 346,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2300:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2300:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2300:202:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2269:233:2"
                      },
                      {
                        "assignments": [
                          369
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 369,
                            "mutability": "mutable",
                            "name": "addr",
                            "nameLocation": "2625:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 381,
                            "src": "2617:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2617:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 370,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2617:12:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2648:419:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2712:69:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2727:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "proxyDeployCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "2734:15:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2751:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2730:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2730:26:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "proxyDeployCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "2764:15:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2758:5:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2758:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "2720:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2720:61:2"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2712:4:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2810:247:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2924:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2930:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "2936:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2936:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "2909:14:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2909:44:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2909:44:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3020:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "3026:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3026:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3013:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3013:30:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3013:30:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2804:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2797:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2797:12:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2794:263:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 369,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2712:4:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 369,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2804:4:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 345,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2734:15:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 345,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2764:15:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 371,
                        "nodeType": "InlineAssembly",
                        "src": "2639:428:2"
                      },
                      {
                        "expression": {
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 372,
                            "name": "_proxyTemplate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "3134:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 373,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "3151:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3134:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 375,
                        "nodeType": "ExpressionStatement",
                        "src": "3134:21:2"
                      },
                      {
                        "expression": {
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 376,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "3216:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 377,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3225:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3225:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3216:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "3216:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "1655:585:2",
                    "text": " @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n The result of this deployment will be a contract with the proxy contract deployment bytecode with\n its constructor at the head, runtime code in the body and constructor args at the tail. The\n constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n account will be set as the first owner of the factory."
                  },
                  "id": 382,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2256:2:2"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2259:0:2"
                  },
                  "scope": 799,
                  "src": "2245:997:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 387,
                    "nodeType": "Block",
                    "src": "3418:145:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3437:120:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "3458:14:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3458:16:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_implementation.slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "3482:20:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3476:5:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3476:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3451:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3451:53:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3451:53:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "3524:14:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3524:16:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3542:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "3517:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3517:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3517:30:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 266,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3482:20:2",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 386,
                        "nodeType": "InlineAssembly",
                        "src": "3428:129:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 383,
                    "nodeType": "StructuredDocumentation",
                    "src": "3288:105:2",
                    "text": " @dev fallback function returns the address of the most recent deployment of a template"
                  },
                  "id": 388,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 384,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3406:2:2"
                  },
                  "returnParameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3418:0:2"
                  },
                  "scope": 799,
                  "src": "3398:165:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "3814:60:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 396,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3824:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 397,
                            "name": "newImplementationAddress_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "3842:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3824:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "3824:43:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 389,
                    "nodeType": "StructuredDocumentation",
                    "src": "3569:150:2",
                    "text": " @dev Sets a new implementation address\n @param newImplementationAddress_: address of the contract with the new implementation"
                  },
                  "functionSelector": "d784d426",
                  "id": 401,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 394,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 393,
                        "name": "onlyOwnerOrDelegator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 340,
                        "src": "3793:20:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3793:20:2"
                    }
                  ],
                  "name": "setImplementation",
                  "nameLocation": "3733:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "newImplementationAddress_",
                        "nameLocation": "3759:25:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "3751:33:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3751:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3750:35:2"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3814:0:2"
                  },
                  "scope": 799,
                  "src": "3724:150:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 413,
                    "nodeType": "Block",
                    "src": "4031:35:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 409,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4041:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 410,
                            "name": "newOwner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "4050:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4041:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 412,
                        "nodeType": "ExpressionStatement",
                        "src": "4041:18:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 402,
                    "nodeType": "StructuredDocumentation",
                    "src": "3880:92:2",
                    "text": " @dev Sets the new owner\n @param newOwner_: address of the new owner"
                  },
                  "functionSelector": "13af4035",
                  "id": 414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 407,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 406,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "4021:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4021:9:2"
                    }
                  ],
                  "name": "setOwner",
                  "nameLocation": "3986:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "newOwner_",
                        "nameLocation": "4003:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "3995:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3995:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3994:19:2"
                  },
                  "returnParameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4031:0:2"
                  },
                  "scope": 799,
                  "src": "3977:89:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "4243:43:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 422,
                            "name": "_delegator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "4253:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 423,
                            "name": "newDelegator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "4266:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4253:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 425,
                        "nodeType": "ExpressionStatement",
                        "src": "4253:26:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "4072:104:2",
                    "text": " @dev Sets the new delegator\n @param newDelegator_: address of the new delegator"
                  },
                  "functionSelector": "83cd9cc3",
                  "id": 427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 420,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 419,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 314,
                        "src": "4233:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4233:9:2"
                    }
                  ],
                  "name": "setDelegator",
                  "nameLocation": "4190:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "newDelegator_",
                        "nameLocation": "4211:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "4203:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4203:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4202:23:2"
                  },
                  "returnParameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4243:0:2"
                  },
                  "scope": 799,
                  "src": "4181:105:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "4592:75:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 435,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "4602:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 437,
                                "name": "salt_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "4639:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 440,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4654:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                      "typeString": "contract ProxyFactoryBase"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                      "typeString": "contract ProxyFactoryBase"
                                    }
                                  ],
                                  "id": 439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4646:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 438,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4646:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4646:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 436,
                              "name": "getMetamorphicContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "4609:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_address_$",
                                "typeString": "function (bytes32,address) pure returns (address)"
                              }
                            },
                            "id": 442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4609:51:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4602:58:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 444,
                        "nodeType": "ExpressionStatement",
                        "src": "4602:58:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 428,
                    "nodeType": "StructuredDocumentation",
                    "src": "4292:229:2",
                    "text": " @dev lookup allows anyone interacting with the contract to get the address of contract specified\n by its name_\n @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file"
                  },
                  "functionSelector": "f39ec1f7",
                  "id": 446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lookup",
                  "nameLocation": "4535:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "4550:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "4542:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4542:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4541:15:2"
                  },
                  "returnParameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "4586:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "4578:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4578:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4577:14:2"
                  },
                  "scope": 799,
                  "src": "4526:141:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 454,
                    "nodeType": "Block",
                    "src": "4835:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 452,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4852:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 451,
                        "id": 453,
                        "nodeType": "Return",
                        "src": "4845:22:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 447,
                    "nodeType": "StructuredDocumentation",
                    "src": "4673:98:2",
                    "text": " @dev getImplementation is public getter function for the _owner account address"
                  },
                  "functionSelector": "aaf10f42",
                  "id": 455,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getImplementation",
                  "nameLocation": "4785:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4802:2:2"
                  },
                  "returnParameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "4826:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4826:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4825:9:2"
                  },
                  "scope": 799,
                  "src": "4776:98:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 465,
                    "nodeType": "Block",
                    "src": "5076:32:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 461,
                            "name": "owner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "5086:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 462,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "5095:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5086:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 464,
                        "nodeType": "ExpressionStatement",
                        "src": "5086:15:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 456,
                    "nodeType": "StructuredDocumentation",
                    "src": "4880:137:2",
                    "text": " @dev owner is public getter function for the _owner account address\n @return owner_ address of the owner account"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 466,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "5031:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5036:2:2"
                  },
                  "returnParameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "owner_",
                        "nameLocation": "5068:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "5060:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5060:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5059:16:2"
                  },
                  "scope": 799,
                  "src": "5022:86:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "5334:40:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 472,
                            "name": "delegator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "5344:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 473,
                            "name": "_delegator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "5357:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5344:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "5344:23:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 467,
                    "nodeType": "StructuredDocumentation",
                    "src": "5114:153:2",
                    "text": " @dev delegator is public getter function for the _delegator account address\n @return delegator_ address of the delegator account"
                  },
                  "functionSelector": "ce9b7930",
                  "id": 477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delegator",
                  "nameLocation": "5281:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5290:2:2"
                  },
                  "returnParameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "delegator_",
                        "nameLocation": "5322:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "5314:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5314:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5313:20:2"
                  },
                  "scope": 799,
                  "src": "5272:102:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 488,
                    "nodeType": "Block",
                    "src": "5716:40:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 484,
                            "name": "contracts_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "5726:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 485,
                            "name": "_contracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "5739:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "src": "5726:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 487,
                        "nodeType": "ExpressionStatement",
                        "src": "5726:23:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 478,
                    "nodeType": "StructuredDocumentation",
                    "src": "5380:260:2",
                    "text": " @dev contracts is public getter that gets the array of salts associated with all the contracts\n deployed with this factory\n @return contracts_ the array of salts associated with all the contracts deployed with this\n factory"
                  },
                  "functionSelector": "6c0f79b6",
                  "id": 489,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "contracts",
                  "nameLocation": "5654:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5663:2:2"
                  },
                  "returnParameters": {
                    "id": 483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "contracts_",
                        "nameLocation": "5704:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 489,
                        "src": "5687:27:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 480,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5687:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 481,
                          "nodeType": "ArrayTypeName",
                          "src": "5687:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5686:29:2"
                  },
                  "scope": 799,
                  "src": "5645:111:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "6006:41:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 495,
                            "name": "_contracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "6023:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6023:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 494,
                        "id": 497,
                        "nodeType": "Return",
                        "src": "6016:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 490,
                    "nodeType": "StructuredDocumentation",
                    "src": "5762:182:2",
                    "text": " @dev getNumContracts getter function for retrieving the total number of contracts\n deployed with this factory\n @return the length of the contract array"
                  },
                  "functionSelector": "cfe10b30",
                  "id": 499,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumContracts",
                  "nameLocation": "5958:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5973:2:2"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "5997:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5997:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5996:9:2"
                  },
                  "scope": 799,
                  "src": "5949:98:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 510,
                    "nodeType": "Block",
                    "src": "6500:314:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6519:289:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6533:25:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "cdata_",
                                    "nodeType": "YulIdentifier",
                                    "src": "6551:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6545:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6545:13:2"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "6537:4:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6571:28:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6586:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  },
                                  {
                                    "name": "cdata_",
                                    "nodeType": "YulIdentifier",
                                    "src": "6592:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6582:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6582:17:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "6575:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6675:123:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6708:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6714:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "6720:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6720:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "6693:14:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6693:44:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6693:44:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6761:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "6767:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6767:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6754:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6754:30:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6754:30:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "gas",
                                          "nodeType": "YulIdentifier",
                                          "src": "6627:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6627:5:2"
                                      },
                                      {
                                        "name": "target_",
                                        "nodeType": "YulIdentifier",
                                        "src": "6634:7:2"
                                      },
                                      {
                                        "name": "value_",
                                        "nodeType": "YulIdentifier",
                                        "src": "6643:6:2"
                                      },
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6651:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "6656:4:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6662:4:2",
                                        "type": "",
                                        "value": "0x00"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6668:4:2",
                                        "type": "",
                                        "value": "0x00"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "call",
                                      "nodeType": "YulIdentifier",
                                      "src": "6622:4:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6622:51:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6615:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6615:59:2"
                              },
                              "nodeType": "YulIf",
                              "src": "6612:186:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 506,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6551:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 506,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6592:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 502,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6634:7:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 504,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6643:6:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 509,
                        "nodeType": "InlineAssembly",
                        "src": "6510:298:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 500,
                    "nodeType": "StructuredDocumentation",
                    "src": "6053:331:2",
                    "text": " @dev _callAny allows EOA to call function impersonating the factory address\n @param target_: the address of the contract to be called\n @param value_: value in WEIs to send together the call\n @param cdata_: Hex encoded data with function signature + arguments of the target function to be called"
                  },
                  "id": 511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callAny",
                  "nameLocation": "6398:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "target_",
                        "nameLocation": "6424:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "6416:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6416:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "value_",
                        "nameLocation": "6449:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "6441:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6441:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "cdata_",
                        "nameLocation": "6478:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "6465:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6465:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6406:84:2"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6500:0:2"
                  },
                  "scope": 799,
                  "src": "6389:425:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 520,
                    "nodeType": "Block",
                    "src": "7191:314:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7210:289:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7224:25:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "cdata_",
                                    "nodeType": "YulIdentifier",
                                    "src": "7242:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7236:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7236:13:2"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "7228:4:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7262:28:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7277:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  },
                                  {
                                    "name": "cdata_",
                                    "nodeType": "YulIdentifier",
                                    "src": "7283:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7273:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7273:17:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "7266:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7366:123:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7399:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7405:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "7411:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7411:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "7384:14:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7384:44:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7384:44:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7452:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "7458:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7458:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7445:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7445:30:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7445:30:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "gas",
                                          "nodeType": "YulIdentifier",
                                          "src": "7326:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7326:5:2"
                                      },
                                      {
                                        "name": "target_",
                                        "nodeType": "YulIdentifier",
                                        "src": "7333:7:2"
                                      },
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7342:3:2"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "7347:4:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7353:4:2",
                                        "type": "",
                                        "value": "0x00"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7359:4:2",
                                        "type": "",
                                        "value": "0x00"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "delegatecall",
                                      "nodeType": "YulIdentifier",
                                      "src": "7313:12:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7313:51:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7306:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7306:59:2"
                              },
                              "nodeType": "YulIf",
                              "src": "7303:186:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 516,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7242:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 516,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7283:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 514,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7333:7:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 519,
                        "nodeType": "InlineAssembly",
                        "src": "7201:298:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 512,
                    "nodeType": "StructuredDocumentation",
                    "src": "6820:293:2",
                    "text": " @dev _delegateCallAny allows EOA to call a function in a contract without impersonating the factory\n @param target_: the address of the contract to be called\n @param cdata_: Hex encoded data with function signature + arguments of the target function to be called"
                  },
                  "id": 521,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_delegateCallAny",
                  "nameLocation": "7127:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "target_",
                        "nameLocation": "7152:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "7144:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7144:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "cdata_",
                        "nameLocation": "7174:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "7161:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7161:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7143:38:2"
                  },
                  "returnParameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7191:0:2"
                  },
                  "scope": 799,
                  "src": "7118:387:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 545,
                    "nodeType": "Block",
                    "src": "7965:590:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7984:444:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8038:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8059:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8053:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8053:11:2"
                              },
                              "variables": [
                                {
                                  "name": "basePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "8042:7:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8077:18:2",
                              "value": {
                                "name": "basePtr",
                                "nodeType": "YulIdentifier",
                                "src": "8088:7:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "8081:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8198:3:2"
                                  },
                                  {
                                    "name": "deployCode_.offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8203:18:2"
                                  },
                                  {
                                    "name": "deployCode_.length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8223:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "8185:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8185:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8185:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8316:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8327:3:2"
                                  },
                                  {
                                    "name": "deployCode_.length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8332:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8323:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8323:28:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8316:3:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8365:53:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8388:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "basePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8391:7:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8404:3:2"
                                      },
                                      {
                                        "name": "basePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8409:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8400:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8400:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "8381:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8381:37:2"
                              },
                              "variableNames": [
                                {
                                  "name": "contractAddr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8365:12:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 527,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8365:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 524,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8223:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 524,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8332:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 524,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "8203:18:2",
                            "suffix": "offset",
                            "valueSize": 1
                          }
                        ],
                        "id": 529,
                        "nodeType": "InlineAssembly",
                        "src": "7975:453:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 532,
                                        "name": "contractAddr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 527,
                                        "src": "8459:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 531,
                                      "name": "_extCodeSize",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 792,
                                      "src": "8446:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8446:26:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 534,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8476:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "8446:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 536,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8445:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 530,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8437:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8437:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 538,
                        "nodeType": "ExpressionStatement",
                        "src": "8437:42:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 540,
                              "name": "contractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "8506:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 539,
                            "name": "DeployedRaw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "8494:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8494:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 542,
                        "nodeType": "EmitStatement",
                        "src": "8489:30:2"
                      },
                      {
                        "expression": {
                          "id": 543,
                          "name": "contractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "8536:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 528,
                        "id": 544,
                        "nodeType": "Return",
                        "src": "8529:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 522,
                    "nodeType": "StructuredDocumentation",
                    "src": "7511:358:2",
                    "text": " @dev _deployCreate allows the owner to deploy raw contracts through the factory using\n non-deterministic address generation (create OpCode)\n @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"
                  },
                  "id": 546,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deployCreate",
                  "nameLocation": "7883:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "deployCode_",
                        "nameLocation": "7912:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "7897:26:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7897:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7896:28:2"
                  },
                  "returnParameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "7951:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "7943:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7943:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7942:22:2"
                  },
                  "scope": 799,
                  "src": "7874:681:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 580,
                    "nodeType": "Block",
                    "src": "9211:698:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "9230:457:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9284:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9305:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9299:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9299:11:2"
                              },
                              "variables": [
                                {
                                  "name": "basePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "9288:7:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9323:18:2",
                              "value": {
                                "name": "basePtr",
                                "nodeType": "YulIdentifier",
                                "src": "9334:7:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "9327:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9444:3:2"
                                  },
                                  {
                                    "name": "deployCode_.offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9449:18:2"
                                  },
                                  {
                                    "name": "deployCode_.length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9469:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "9431:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9431:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9431:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9562:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9573:3:2"
                                  },
                                  {
                                    "name": "deployCode_.length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9578:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9569:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9569:28:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9562:3:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9611:66:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_",
                                    "nodeType": "YulIdentifier",
                                    "src": "9635:6:2"
                                  },
                                  {
                                    "name": "basePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9643:7:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9656:3:2"
                                      },
                                      {
                                        "name": "basePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9661:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9652:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9652:17:2"
                                  },
                                  {
                                    "name": "salt_",
                                    "nodeType": "YulIdentifier",
                                    "src": "9671:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9627:7:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9627:50:2"
                              },
                              "variableNames": [
                                {
                                  "name": "contractAddr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9611:12:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9611:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 553,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9469:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 553,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9578:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 553,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "9449:18:2",
                            "suffix": "offset",
                            "valueSize": 1
                          },
                          {
                            "declaration": 551,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9671:5:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 549,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9635:6:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 558,
                        "nodeType": "InlineAssembly",
                        "src": "9221:466:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 562,
                                    "name": "contractAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 556,
                                    "src": "9712:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9704:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 560,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9704:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9704:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9729:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9704:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 559,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9696:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9696:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "9696:35:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 571,
                              "name": "salt_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "9827:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 568,
                              "name": "_contracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "9811:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9811:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer,bytes32)"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9811:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "9811:22:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 575,
                              "name": "contractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "9860:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 574,
                            "name": "DeployedRaw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "9848:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9848:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 577,
                        "nodeType": "EmitStatement",
                        "src": "9843:30:2"
                      },
                      {
                        "expression": {
                          "id": 578,
                          "name": "contractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "9890:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 557,
                        "id": 579,
                        "nodeType": "Return",
                        "src": "9883:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 547,
                    "nodeType": "StructuredDocumentation",
                    "src": "8561:492:2",
                    "text": " @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\n factory\n @param value_ endowment value in WEIS for the created contract\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"
                  },
                  "id": 581,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deployCreate2",
                  "nameLocation": "9067:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "value_",
                        "nameLocation": "9099:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "9091:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9091:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "9123:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "9115:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9115:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "deployCode_",
                        "nameLocation": "9153:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "9138:26:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9138:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9081:89:2"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 556,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "9197:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "9189:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9189:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9188:22:2"
                  },
                  "scope": 799,
                  "src": "9058:851:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "10204:705:2",
                    "statements": [
                      {
                        "assignments": [
                          590
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 590,
                            "mutability": "mutable",
                            "name": "proxyTemplate",
                            "nameLocation": "10222:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 615,
                            "src": "10214:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10214:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 592,
                        "initialValue": {
                          "id": 591,
                          "name": "_proxyTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "10238:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10214:38:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "10271:418:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "_implementation.slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "10355:20:2"
                                  },
                                  {
                                    "name": "proxyTemplate",
                                    "nodeType": "YulIdentifier",
                                    "src": "10377:13:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10348:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10348:43:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10348:43:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10404:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10421:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10415:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10415:11:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "10408:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10446:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "10456:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10461:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10452:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10452:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10439:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10439:28:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10439:28:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10559:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10568:2:2",
                                        "type": "",
                                        "value": "72"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10572:48:2",
                                        "type": "",
                                        "value": "0x6020363636335afa1536363636515af43d36363e3d36f3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10564:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10564:57:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10552:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10552:70:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10552:70:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10635:44:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10659:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10662:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10667:4:2",
                                    "type": "",
                                    "value": "0x17"
                                  },
                                  {
                                    "name": "salt_",
                                    "nodeType": "YulIdentifier",
                                    "src": "10673:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "10651:7:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10651:28:2"
                              },
                              "variableNames": [
                                {
                                  "name": "contractAddr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10635:12:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 266,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "10355:20:2",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 587,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10635:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 590,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10377:13:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 584,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10673:5:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 593,
                        "nodeType": "InlineAssembly",
                        "src": "10262:427:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 596,
                                        "name": "contractAddr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "10720:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 595,
                                      "name": "_extCodeSize",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 792,
                                      "src": "10707:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:26:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 598,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10737:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10707:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 600,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10706:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10698:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10698:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "10698:42:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 606,
                              "name": "salt_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "10825:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 603,
                              "name": "_contracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "10809:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10809:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer,bytes32)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10809:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "10809:22:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 610,
                              "name": "contractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "10860:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 609,
                            "name": "DeployedProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "10846:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10846:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 612,
                        "nodeType": "EmitStatement",
                        "src": "10841:32:2"
                      },
                      {
                        "expression": {
                          "id": 613,
                          "name": "contractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "10890:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 588,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "10883:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 582,
                    "nodeType": "StructuredDocumentation",
                    "src": "9915:207:2",
                    "text": " @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n @param salt_ salt used to determine the final determinist address for the deployed contract"
                  },
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deployProxy",
                  "nameLocation": "10136:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "10157:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "10149:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10149:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10148:15:2"
                  },
                  "returnParameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "10190:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "10182:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10182:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10181:22:2"
                  },
                  "scope": 799,
                  "src": "10127:782:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 659,
                    "nodeType": "Block",
                    "src": "11636:2354:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11655:2061:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11782:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11799:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11793:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11793:11:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "11786:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11824:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11834:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11839:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11830:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11830:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11817:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11817:28:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11817:28:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13073:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13082:2:2",
                                        "type": "",
                                        "value": "72"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13086:48:2",
                                        "type": "",
                                        "value": "0x6020363636335afa1536363636515af43d36363e3d36f3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13078:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13078:57:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13066:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13066:70:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13066:70:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13149:44:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13173:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13176:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13181:4:2",
                                    "type": "",
                                    "value": "0x17"
                                  },
                                  {
                                    "name": "salt_",
                                    "nodeType": "YulIdentifier",
                                    "src": "13187:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "13165:7:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13165:28:2"
                              },
                              "variableNames": [
                                {
                                  "name": "contractAddr",
                                  "nodeType": "YulIdentifier",
                                  "src": "13149:12:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13317:120:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13350:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13356:4:2",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "13362:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13362:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "13335:14:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13335:44:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13335:44:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13403:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "13406:14:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13406:16:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "13396:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13396:27:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13396:27:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13298:14:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13298:16:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "13291:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13291:24:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13284:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13284:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "13281:156:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13609:97:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13634:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "hexValue": "537461746963206465706c6f79206661696c6564",
                                          "kind": "string",
                                          "nodeType": "YulLiteral",
                                          "src": "13637:22:2",
                                          "type": "",
                                          "value": "Static deploy failed"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "13627:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13627:33:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13627:33:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13684:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13687:4:2",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "13677:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13677:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13677:15:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "contractAddr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13559:12:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "13552:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13552:20:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "contractAddr",
                                            "nodeType": "YulIdentifier",
                                            "src": "13593:12:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "extcodesize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13581:11:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13581:25:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "13574:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13574:33:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "13549:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13549:59:2"
                              },
                              "nodeType": "YulIf",
                              "src": "13546:160:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 624,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13149:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 624,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13559:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 624,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13593:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 619,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13187:5:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 626,
                        "nodeType": "InlineAssembly",
                        "src": "11646:2070:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 627,
                              "name": "initCallData_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "13729:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13729:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13752:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13729:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 637,
                        "nodeType": "IfStatement",
                        "src": "13725:103:2",
                        "trueBody": {
                          "id": 636,
                          "nodeType": "Block",
                          "src": "13755:73:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 632,
                                    "name": "contractAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "13789:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 633,
                                    "name": "initCallData_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 621,
                                    "src": "13803:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 631,
                                  "name": "_initializeContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "13769:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                                    "typeString": "function (address,bytes calldata)"
                                  }
                                },
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13769:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 635,
                              "nodeType": "ExpressionStatement",
                              "src": "13769:48:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 640,
                                        "name": "contractAddr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 624,
                                        "src": "13859:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 639,
                                      "name": "_extCodeSize",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 792,
                                      "src": "13846:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13846:26:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13876:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "13846:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 644,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13845:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 638,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13837:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13837:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "13837:42:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 650,
                              "name": "salt_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "13905:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 647,
                              "name": "_contracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "13889:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "13889:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer,bytes32)"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13889:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 652,
                        "nodeType": "ExpressionStatement",
                        "src": "13889:22:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 654,
                              "name": "contractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "13941:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 653,
                            "name": "DeployedStatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "13926:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13926:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 656,
                        "nodeType": "EmitStatement",
                        "src": "13921:33:2"
                      },
                      {
                        "expression": {
                          "id": 657,
                          "name": "contractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 624,
                          "src": "13971:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 625,
                        "id": 658,
                        "nodeType": "Return",
                        "src": "13964:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "10915:588:2",
                    "text": " @dev _deployStatic finishes the deployment started with the deployTemplate of a contract with\n determinist address. This function call any initialize() function in the deployed contract\n in case the arguments are provided. Should be called after deployTemplate.\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the deployed contract\n @return contractAddr the address of the deployed template contract"
                  },
                  "id": 660,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deployStatic",
                  "nameLocation": "11517:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "11539:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "11531:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11531:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "initCallData_",
                        "nameLocation": "11561:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "11546:28:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "11546:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11530:45:2"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "11618:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "11610:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11610:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11609:22:2"
                  },
                  "scope": 799,
                  "src": "11508:2482:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "14487:1329:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "14506:1138:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14560:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14581:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14575:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14575:11:2"
                              },
                              "variables": [
                                {
                                  "name": "basePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "14564:7:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14606:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "basePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14616:7:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "deployCode_.length",
                                            "nodeType": "YulIdentifier",
                                            "src": "14629:18:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14649:4:2",
                                            "type": "",
                                            "value": "0x28"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14625:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14625:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14612:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14612:43:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14599:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14599:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14599:57:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14669:18:2",
                              "value": {
                                "name": "basePtr",
                                "nodeType": "YulIdentifier",
                                "src": "14680:7:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "14673:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15110:3:2"
                                  },
                                  {
                                    "hexValue": "38585839386009f3",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15115:21:2",
                                    "type": ""
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15103:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15103:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15103:34:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15183:21:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15194:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15199:4:2",
                                    "type": "",
                                    "value": "0x08"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15190:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15190:14:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15183:3:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15304:3:2"
                                  },
                                  {
                                    "name": "deployCode_.offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "15309:18:2"
                                  },
                                  {
                                    "name": "deployCode_.length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15329:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "15291:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15291:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15291:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15422:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15433:3:2"
                                  },
                                  {
                                    "name": "deployCode_.length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15438:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15429:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15429:28:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15422:3:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15519:3:2"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "address",
                                      "nodeType": "YulIdentifier",
                                      "src": "15524:7:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15524:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15512:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15512:22:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15512:22:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15547:21:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15558:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15563:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15554:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15554:14:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15547:3:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15581:53:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15604:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "basePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15607:7:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15620:3:2"
                                      },
                                      {
                                        "name": "basePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15625:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15616:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15616:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "15597:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15597:37:2"
                              },
                              "variableNames": [
                                {
                                  "name": "contractAddr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15581:12:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 666,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15581:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 663,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14629:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 663,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15329:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 663,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15438:18:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 663,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "15309:18:2",
                            "suffix": "offset",
                            "valueSize": 1
                          }
                        ],
                        "id": 668,
                        "nodeType": "InlineAssembly",
                        "src": "14497:1147:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 671,
                                        "name": "contractAddr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 666,
                                        "src": "15675:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 670,
                                      "name": "_extCodeSize",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 792,
                                      "src": "15662:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15662:26:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15692:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "15662:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 675,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15661:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 669,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15653:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15653:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "15653:42:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 679,
                              "name": "contractAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "15727:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 678,
                            "name": "DeployedTemplate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "15710:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15710:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 681,
                        "nodeType": "EmitStatement",
                        "src": "15705:35:2"
                      },
                      {
                        "expression": {
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 682,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "15750:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 683,
                            "name": "contractAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 666,
                            "src": "15768:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15750:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 685,
                        "nodeType": "ExpressionStatement",
                        "src": "15750:30:2"
                      },
                      {
                        "expression": {
                          "id": 686,
                          "name": "contractAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 666,
                          "src": "15797:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 667,
                        "id": 687,
                        "nodeType": "Return",
                        "src": "15790:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 661,
                    "nodeType": "StructuredDocumentation",
                    "src": "13996:393:2",
                    "text": " @dev _deployTemplate deploys a template contract with the universal code copy constructor that\n deploys the contract+constructorArgs defined in the deployCode_ as the contracts runtime code.\n @param deployCode_ Hex encoded data with the deploymentCode + (constructor args appended if any)\n @return contractAddr the address of the deployed template contract"
                  },
                  "id": 689,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deployTemplate",
                  "nameLocation": "14403:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "deployCode_",
                        "nameLocation": "14434:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 689,
                        "src": "14419:26:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14419:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14418:28:2"
                  },
                  "returnParameters": {
                    "id": 667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "contractAddr",
                        "nameLocation": "14473:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 689,
                        "src": "14465:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14465:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14464:22:2"
                  },
                  "scope": 799,
                  "src": "14394:1422:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "16232:608:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "16251:583:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16305:519:2",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "16323:22:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16340:4:2",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "16334:5:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16334:11:2"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulTypedName",
                                        "src": "16327:3:2",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16369:4:2",
                                          "type": "",
                                          "value": "0x40"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "initCallData_.length",
                                              "nodeType": "YulIdentifier",
                                              "src": "16379:20:2"
                                            },
                                            {
                                              "name": "ptr",
                                              "nodeType": "YulIdentifier",
                                              "src": "16401:3:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "16375:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16375:30:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16362:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16362:44:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16362:44:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16436:3:2"
                                        },
                                        {
                                          "name": "initCallData_.offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "16441:20:2"
                                        },
                                        {
                                          "name": "initCallData_.length",
                                          "nodeType": "YulIdentifier",
                                          "src": "16463:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "16423:12:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16423:61:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16423:61:2"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "16577:233:2",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "16599:18:2",
                                          "value": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16612:4:2",
                                                "type": "",
                                                "value": "0x40"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "16606:5:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16606:11:2"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "ptr",
                                              "nodeType": "YulIdentifier",
                                              "src": "16599:3:2"
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16645:4:2",
                                                "type": "",
                                                "value": "0x40"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "16655:14:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "16655:16:2"
                                                  },
                                                  {
                                                    "name": "ptr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "16673:3:2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16651:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "16651:26:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "16638:6:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16638:40:2"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "16638:40:2"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "16714:3:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16719:4:2",
                                                "type": "",
                                                "value": "0x00"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16725:14:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "16725:16:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "returndatacopy",
                                              "nodeType": "YulIdentifier",
                                              "src": "16699:14:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16699:43:2"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "16699:43:2"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "16770:3:2"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16775:14:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "16775:16:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "16763:6:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16763:29:2"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "16763:29:2"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "gas",
                                                "nodeType": "YulIdentifier",
                                                "src": "16516:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16516:5:2"
                                            },
                                            {
                                              "name": "contract_",
                                              "nodeType": "YulIdentifier",
                                              "src": "16523:9:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "16534:1:2",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "name": "ptr",
                                              "nodeType": "YulIdentifier",
                                              "src": "16537:3:2"
                                            },
                                            {
                                              "name": "initCallData_.length",
                                              "nodeType": "YulIdentifier",
                                              "src": "16542:20:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "16564:4:2",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "16570:4:2",
                                              "type": "",
                                              "value": "0x00"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "call",
                                            "nodeType": "YulIdentifier",
                                            "src": "16511:4:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16511:64:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "16504:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16504:72:2"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "16501:309:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "initCallData_.length",
                                        "nodeType": "YulIdentifier",
                                        "src": "16282:20:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "16275:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16275:28:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "16268:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16268:36:2"
                              },
                              "nodeType": "YulIf",
                              "src": "16265:559:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 692,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16523:9:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16282:20:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16379:20:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16463:20:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16542:20:2",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 694,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "16441:20:2",
                            "suffix": "offset",
                            "valueSize": 1
                          }
                        ],
                        "id": 697,
                        "nodeType": "InlineAssembly",
                        "src": "16242:592:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 690,
                    "nodeType": "StructuredDocumentation",
                    "src": "15822:318:2",
                    "text": " @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\n @param contract_ address of the contract that will be initialized\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n deployed contract"
                  },
                  "id": 699,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initializeContract",
                  "nameLocation": "16154:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 692,
                        "mutability": "mutable",
                        "name": "contract_",
                        "nameLocation": "16182:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "16174:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16174:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "initCallData_",
                        "nameLocation": "16208:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "16193:28:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "16193:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16173:49:2"
                  },
                  "returnParameters": {
                    "id": 696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16232:0:2"
                  },
                  "scope": 799,
                  "src": "16145:695:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 737,
                    "nodeType": "Block",
                    "src": "17148:194:2",
                    "statements": [
                      {
                        "body": {
                          "id": 732,
                          "nodeType": "Block",
                          "src": "17202:102:2",
                          "statements": [
                            {
                              "assignments": [
                                718
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 718,
                                  "mutability": "mutable",
                                  "name": "cdata",
                                  "nameLocation": "17229:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 732,
                                  "src": "17216:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 717,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17216:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 722,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 719,
                                  "name": "cdata_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 703,
                                  "src": "17237:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "bytes calldata[] calldata"
                                  }
                                },
                                "id": 721,
                                "indexExpression": {
                                  "id": 720,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "17244:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17237:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17216:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 726,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "17277:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                          "typeString": "contract ProxyFactoryBase"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                          "typeString": "contract ProxyFactoryBase"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17269:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17269:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17269:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17284:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 729,
                                    "name": "cdata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 718,
                                    "src": "17287:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "_callAny",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 511,
                                  "src": "17260:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,uint256,bytes memory)"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17260:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 731,
                              "nodeType": "ExpressionStatement",
                              "src": "17260:33:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 710,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "17178:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 711,
                              "name": "cdata_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 703,
                              "src": "17182:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "bytes calldata[] calldata"
                              }
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17182:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17178:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 733,
                        "initializationExpression": {
                          "assignments": [
                            707
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 707,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17171:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 733,
                              "src": "17163:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 706,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17163:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 709,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17175:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17163:13:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "17197:3:2",
                            "subExpression": {
                              "id": 714,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "17197:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 716,
                          "nodeType": "ExpressionStatement",
                          "src": "17197:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17158:146:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 734,
                            "name": "_returnAvailableData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "17313:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17313:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 736,
                        "nodeType": "ExpressionStatement",
                        "src": "17313:22:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 700,
                    "nodeType": "StructuredDocumentation",
                    "src": "16846:243:2",
                    "text": " @dev _multiCall allows EOA to make multiple function calls within a single transaction\n impersonating the factory\n @param cdata_: array of abi encoded data with the function calls (function signature + arguments)"
                  },
                  "id": 738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_multiCall",
                  "nameLocation": "17103:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "cdata_",
                        "nameLocation": "17131:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "17114:23:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 701,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "17114:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 702,
                          "nodeType": "ArrayTypeName",
                          "src": "17114:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17113:25:2"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17148:0:2"
                  },
                  "scope": 799,
                  "src": "17094:248:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "17934:262:2",
                    "statements": [
                      {
                        "assignments": [
                          749
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 749,
                            "mutability": "mutable",
                            "name": "proxy",
                            "nameLocation": "17952:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 779,
                            "src": "17944:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 748,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17944:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 758,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 752,
                              "name": "salt_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "18011:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 755,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18026:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                    "typeString": "contract ProxyFactoryBase"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ProxyFactoryBase_$799",
                                    "typeString": "contract ProxyFactoryBase"
                                  }
                                ],
                                "id": 754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18018:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 753,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18018:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18018:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 750,
                              "name": "DeterministicAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "17960:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DeterministicAddress_$36_$",
                                "typeString": "type(contract DeterministicAddress)"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMetamorphicContractAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "17960:50:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_address_$",
                              "typeString": "function (bytes32,address) pure returns (address)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17960:72:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17944:88:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 760,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "18052:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 761,
                              "name": "newImpl_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 743,
                              "src": "18059:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 759,
                            "name": "__upgrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "18042:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18042:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 763,
                        "nodeType": "ExpressionStatement",
                        "src": "18042:26:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 766,
                                        "name": "proxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 749,
                                        "src": "18092:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 765,
                                      "name": "IProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 807,
                                      "src": "18085:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IProxy_$807_$",
                                        "typeString": "type(contract IProxy)"
                                      }
                                    },
                                    "id": 767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18085:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IProxy_$807",
                                      "typeString": "contract IProxy"
                                    }
                                  },
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getImplementationAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 806,
                                  "src": "18085:38:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18085:40:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 770,
                                "name": "newImpl_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 743,
                                "src": "18129:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "18085:52:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 764,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "18078:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18078:60:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "18078:60:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 775,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "18168:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 776,
                              "name": "initCallData_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "18175:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 774,
                            "name": "_initializeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "18148:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,bytes calldata)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18148:41:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "18148:41:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 739,
                    "nodeType": "StructuredDocumentation",
                    "src": "17348:456:2",
                    "text": " @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n @param newImpl_ address of the new contract that contains the new implementation logic\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n new implementation contract"
                  },
                  "id": 780,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeProxy",
                  "nameLocation": "17818:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "salt_",
                        "nameLocation": "17849:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "17841:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17841:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "newImpl_",
                        "nameLocation": "17872:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "17864:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17864:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "mutability": "mutable",
                        "name": "initCallData_",
                        "nameLocation": "17905:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "17890:28:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17890:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17831:93:2"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17934:0:2"
                  },
                  "scope": 799,
                  "src": "17809:387:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 791,
                    "nodeType": "Block",
                    "src": "18352:98:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "18371:52:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18385:28:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "target_",
                                    "nodeType": "YulIdentifier",
                                    "src": "18405:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "18393:11:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18393:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "18385:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 786,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18385:4:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 783,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18405:7:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 788,
                        "nodeType": "InlineAssembly",
                        "src": "18362:61:2"
                      },
                      {
                        "expression": {
                          "id": 789,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 786,
                          "src": "18439:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 787,
                        "id": 790,
                        "nodeType": "Return",
                        "src": "18432:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 781,
                    "nodeType": "StructuredDocumentation",
                    "src": "18202:69:2",
                    "text": " @dev Aux function to return the external code size"
                  },
                  "id": 792,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_extCodeSize",
                  "nameLocation": "18285:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "target_",
                        "nameLocation": "18306:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "18298:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18298:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18297:17:2"
                  },
                  "returnParameters": {
                    "id": 787,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 786,
                        "mutability": "mutable",
                        "name": "size",
                        "nameLocation": "18346:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "18338:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18338:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18337:14:2"
                  },
                  "scope": 799,
                  "src": "18276:174:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "18571:136:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "18590:111:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18619:4:2",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18625:4:2",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "18631:14:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18631:16:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "18604:14:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18604:44:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18604:44:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18668:4:2",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "18674:14:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18674:16:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "18661:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18661:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18661:30:2"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [],
                        "id": 796,
                        "nodeType": "InlineAssembly",
                        "src": "18581:120:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 793,
                    "nodeType": "StructuredDocumentation",
                    "src": "18456:64:2",
                    "text": " @dev Aux function to get the return data size"
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_returnAvailableData",
                  "nameLocation": "18534:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18554:2:2"
                  },
                  "returnParameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18571:0:2"
                  },
                  "scope": 799,
                  "src": "18525:182:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "305:18404:2",
              "usedErrors": []
            }
          ],
          "src": "43:18666:2"
        },
        "id": 2
      },
      "contracts/proxy/IProxy.sol": {
        "ast": {
          "absolutePath": "contracts/proxy/IProxy.sol",
          "exportedSymbols": {
            "IProxy": [
              807
            ]
          },
          "id": 808,
          "license": "MIT-open-group",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".11"
              ],
              "nodeType": "PragmaDirective",
              "src": "43:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IProxy",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 807,
              "linearizedBaseContracts": [
                807
              ],
              "name": "IProxy",
              "nameLocation": "79:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "0cbcae70",
                  "id": 806,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getImplementationAddress",
                  "nameLocation": "101:24:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 802,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "125:2:3"
                  },
                  "returnParameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "151:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "151:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "150:9:3"
                  },
                  "scope": 807,
                  "src": "92:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 808,
              "src": "69:93:3",
              "usedErrors": []
            }
          ],
          "src": "43:119:3"
        },
        "id": 3
      },
      "contracts/proxy/Proxy.sol": {
        "ast": {
          "absolutePath": "contracts/proxy/Proxy.sol",
          "exportedSymbols": {
            "DeterministicAddress": [
              36
            ],
            "Proxy": [
              853
            ]
          },
          "id": 854,
          "license": "MIT-open-group",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 809,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".11"
              ],
              "nodeType": "PragmaDirective",
              "src": "43:24:4"
            },
            {
              "absolutePath": "contracts/DeterministicAddress.sol",
              "file": "../DeterministicAddress.sol",
              "id": 810,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 854,
              "sourceUnit": 37,
              "src": "69:37:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Proxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 811,
                "nodeType": "StructuredDocumentation",
                "src": "239:949:4",
                "text": " @notice Proxy is a delegatecall reverse proxy implementation\n the forwarding address is stored at the slot location of not(0)\n if not(0) has a value stored in it that is of the form 0Xca11c0de15dead10cced0000< address >\n the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation\n from upgrading the proxy by changing this slot.\n The proxy may be directly upgraded ( if the lock is not set )\n by calling the proxy from the factory address using the format\n abi.encodeWithSelector(0xca11c0de, <address>);\n All other calls will be proxied through to the implementation.\n The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal\n mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets\n the higher order bits to lock the upgrade capability of the proxy."
              },
              "fullyImplemented": true,
              "id": 853,
              "linearizedBaseContracts": [
                853
              ],
              "name": "Proxy",
              "nameLocation": "1198:5:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "immutable",
                  "name": "_factory",
                  "nameLocation": "1236:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "1210:34:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 821,
                    "nodeType": "Block",
                    "src": "1265:38:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 816,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "1275:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 817,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1286:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1286:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1275:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 820,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:21:4"
                      }
                    ]
                  },
                  "id": 822,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1262:2:4"
                  },
                  "returnParameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1265:0:4"
                  },
                  "scope": 853,
                  "src": "1251:52:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "1336:28:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 825,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 852,
                            "src": "1346:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1346:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "1346:11:4"
                      }
                    ]
                  },
                  "id": 829,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1316:2:4"
                  },
                  "returnParameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1336:0:4"
                  },
                  "scope": 853,
                  "src": "1309:55:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "1398:28:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 832,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 852,
                            "src": "1408:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1408:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:11:4"
                      }
                    ]
                  },
                  "id": 836,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1378:2:4"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1398:0:4"
                  },
                  "scope": 853,
                  "src": "1370:56:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 842,
                    "nodeType": "Block",
                    "src": "1498:287:4",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1517:262:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1555:4:4",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1612:4:4",
                                                "type": "",
                                                "value": "0x00"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1608:3:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1608:9:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "1602:5:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1602:16:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1640:66:4",
                                        "type": "",
                                        "value": "0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1577:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1577:147:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1531:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1531:207:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1531:207:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1758:4:4",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1764:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1751:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1751:18:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1751:18:4"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [],
                        "id": 841,
                        "nodeType": "InlineAssembly",
                        "src": "1508:271:4"
                      }
                    ]
                  },
                  "functionSelector": "0cbcae70",
                  "id": 843,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getImplementationAddress",
                  "nameLocation": "1441:24:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1465:2:4"
                  },
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 843,
                        "src": "1489:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1489:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1488:9:4"
                  },
                  "scope": 853,
                  "src": "1432:353:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 851,
                    "nodeType": "Block",
                    "src": "1821:1933:4",
                    "statements": [
                      {
                        "assignments": [
                          847
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 847,
                            "mutability": "mutable",
                            "name": "factory",
                            "nameLocation": "1946:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 851,
                            "src": "1938:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 846,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1938:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 849,
                        "initialValue": {
                          "id": 848,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "1956:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1938:26:4"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1983:1765:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2085:431:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2162:51:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2181:2:4",
                                          "type": "",
                                          "value": "96"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2189:2:4",
                                              "type": "",
                                              "value": "96"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2206:4:4",
                                                  "type": "",
                                                  "value": "0x04"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "calldataload",
                                                "nodeType": "YulIdentifier",
                                                "src": "2193:12:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2193:18:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2185:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2185:27:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2177:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2177:36:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "newImpl",
                                        "nodeType": "YulTypedName",
                                        "src": "2166:7:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2292:101:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2321:4:4",
                                                "type": "",
                                                "value": "0x00"
                                              },
                                              {
                                                "hexValue": "696d706c6f63",
                                                "kind": "string",
                                                "nodeType": "YulLiteral",
                                                "src": "2327:8:4",
                                                "type": "",
                                                "value": "imploc"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "2314:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2314:22:4"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2314:22:4"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2364:4:4",
                                                "type": "",
                                                "value": "0x00"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2370:4:4",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "2357:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2357:18:4"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2357:18:4"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2240:3:4",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2255:4:4",
                                                      "type": "",
                                                      "value": "0x00"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "not",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2251:3:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2251:9:4"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sload",
                                                "nodeType": "YulIdentifier",
                                                "src": "2245:5:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2245:16:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "2236:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2236:26:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2264:26:4",
                                          "type": "",
                                          "value": "0xca11c0de15dead10cced0000"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "eq",
                                        "nodeType": "YulIdentifier",
                                        "src": "2233:2:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2233:58:4"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2230:163:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2464:4:4",
                                              "type": "",
                                              "value": "0x00"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "2460:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2460:9:4"
                                        },
                                        {
                                          "name": "newImpl",
                                          "nodeType": "YulIdentifier",
                                          "src": "2471:7:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2453:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2453:26:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2453:26:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "stop",
                                        "nodeType": "YulIdentifier",
                                        "src": "2496:4:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2496:6:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2496:6:4"
                                  }
                                ]
                              },
                              "name": "admin",
                              "nodeType": "YulFunctionDefinition",
                              "src": "2068:448:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2639:627:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2701:23:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2719:4:4",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2713:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2713:11:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "_ptr",
                                        "nodeType": "YulTypedName",
                                        "src": "2705:4:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2809:4:4",
                                          "type": "",
                                          "value": "0x40"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "_ptr",
                                              "nodeType": "YulIdentifier",
                                              "src": "2819:4:4"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "calldatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "2825:12:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2825:14:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2815:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2815:25:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2802:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2802:39:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2802:39:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2916:4:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2922:4:4",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "calldatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "2928:12:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2928:14:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "2903:12:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2903:40:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2903:40:4"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2960:82:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "gas",
                                            "nodeType": "YulIdentifier",
                                            "src": "2984:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2984:5:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3001:4:4",
                                                  "type": "",
                                                  "value": "0x00"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "2997:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2997:9:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2991:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2991:16:4"
                                        },
                                        {
                                          "name": "_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3009:4:4"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "calldatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "3015:12:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3015:14:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3031:4:4",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3037:4:4",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "delegatecall",
                                        "nodeType": "YulIdentifier",
                                        "src": "2971:12:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2971:71:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "ret",
                                        "nodeType": "YulTypedName",
                                        "src": "2964:3:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3074:4:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3080:4:4",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "3086:14:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3086:16:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "3059:14:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3059:44:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3059:44:4"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "3135:70:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "3164:4:4"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3170:14:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3170:16:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "3157:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3157:30:4"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3157:30:4"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "ret",
                                          "nodeType": "YulIdentifier",
                                          "src": "3130:3:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "3123:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3123:11:4"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "3120:85:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3229:4:4"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "3235:14:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3235:16:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "return",
                                        "nodeType": "YulIdentifier",
                                        "src": "3222:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3222:30:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3222:30:4"
                                  }
                                ]
                              },
                              "name": "passthrough",
                              "nodeType": "YulFunctionDefinition",
                              "src": "2616:650:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3439:203:4",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "3485:143:4",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "3555:55:4",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [],
                                                  "functionName": {
                                                    "name": "admin",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3581:5:4"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3581:7:4"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "3581:7:4"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3517:3:4",
                                                    "type": "",
                                                    "value": "224"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "3535:4:4",
                                                        "type": "",
                                                        "value": "0x00"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "calldataload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3522:12:4"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3522:18:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3513:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3513:28:4"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3543:10:4",
                                                "type": "",
                                                "value": "0xca11c0de"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "eq",
                                              "nodeType": "YulIdentifier",
                                              "src": "3510:2:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3510:44:4"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "3507:103:4"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "calldatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "3463:12:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3463:14:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3479:4:4",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "eq",
                                        "nodeType": "YulIdentifier",
                                        "src": "3460:2:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3460:24:4"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "3457:171:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "caller",
                                      "nodeType": "YulIdentifier",
                                      "src": "3420:6:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3420:8:4"
                                  },
                                  {
                                    "name": "factory",
                                    "nodeType": "YulIdentifier",
                                    "src": "3430:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3417:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3417:21:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3414:228:4"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "passthrough",
                                  "nodeType": "YulIdentifier",
                                  "src": "3725:11:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3725:13:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3725:13:4"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 847,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3430:7:4",
                            "valueSize": 1
                          }
                        ],
                        "id": 850,
                        "nodeType": "InlineAssembly",
                        "src": "1974:1774:4"
                      }
                    ]
                  },
                  "id": 852,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_fallback",
                  "nameLocation": "1800:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1809:2:4"
                  },
                  "returnParameters": {
                    "id": 845,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1821:0:4"
                  },
                  "scope": 853,
                  "src": "1791:1963:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 854,
              "src": "1189:2567:4",
              "usedErrors": []
            }
          ],
          "src": "43:3713:4"
        },
        "id": 4
      },
      "contracts/proxy/ProxyUpgrader.sol": {
        "ast": {
          "absolutePath": "contracts/proxy/ProxyUpgrader.sol",
          "exportedSymbols": {
            "ProxyUpgrader": [
              874
            ]
          },
          "id": 875,
          "license": "MIT-open-group",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 855,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".11"
              ],
              "nodeType": "PragmaDirective",
              "src": "43:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ProxyUpgrader",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 856,
                "nodeType": "StructuredDocumentation",
                "src": "69:102:5",
                "text": " @title ProxyUpgrader\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"
              },
              "fullyImplemented": true,
              "id": 874,
              "linearizedBaseContracts": [
                874
              ],
              "name": "ProxyUpgrader",
              "nameLocation": "190:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 872,
                    "nodeType": "Block",
                    "src": "272:419:5",
                    "statements": [
                      {
                        "assignments": [
                          864
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 864,
                            "mutability": "mutable",
                            "name": "cdata",
                            "nameLocation": "295:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 872,
                            "src": "282:18:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 863,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "282:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 870,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30786361313163306465",
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "326:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3390161118_by_1",
                                "typeString": "int_const 3390161118"
                              },
                              "value": "0xca11c0de"
                            },
                            {
                              "id": 868,
                              "name": "_newImpl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 860,
                              "src": "338:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3390161118_by_1",
                                "typeString": "int_const 3390161118"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 865,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "303:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "303:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "303:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "282:65:5"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "366:319:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "458:217:5",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "476:22:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "493:4:5",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "487:5:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "487:11:5"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulTypedName",
                                        "src": "480:3:5",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "522:4:5",
                                          "type": "",
                                          "value": "0x40"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "ptr",
                                              "nodeType": "YulIdentifier",
                                              "src": "532:3:5"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "537:14:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "537:16:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "528:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "528:26:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "515:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "515:40:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "515:40:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "587:3:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "592:4:5",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "598:14:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "598:16:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "572:14:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "572:43:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "572:43:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "639:3:5"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "644:14:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "644:16:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "632:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "632:29:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "632:29:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "gas",
                                          "nodeType": "YulIdentifier",
                                          "src": "395:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "395:5:5"
                                      },
                                      {
                                        "name": "_proxy",
                                        "nodeType": "YulIdentifier",
                                        "src": "402:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "410:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "cdata",
                                            "nodeType": "YulIdentifier",
                                            "src": "417:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "424:4:5",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "413:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "413:16:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "cdata",
                                            "nodeType": "YulIdentifier",
                                            "src": "437:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "431:5:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "431:12:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "445:4:5",
                                        "type": "",
                                        "value": "0x00"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "451:4:5",
                                        "type": "",
                                        "value": "0x00"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "call",
                                      "nodeType": "YulIdentifier",
                                      "src": "390:4:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "390:66:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "383:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "383:74:5"
                              },
                              "nodeType": "YulIf",
                              "src": "380:295:5"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 858,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "402:6:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 864,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "417:5:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 864,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "437:5:5",
                            "valueSize": 1
                          }
                        ],
                        "id": 871,
                        "nodeType": "InlineAssembly",
                        "src": "357:328:5"
                      }
                    ]
                  },
                  "id": 873,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "__upgrade",
                  "nameLocation": "219:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "_proxy",
                        "nameLocation": "237:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 873,
                        "src": "229:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 857,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "229:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "_newImpl",
                        "nameLocation": "253:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 873,
                        "src": "245:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "245:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "228:34:5"
                  },
                  "returnParameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "272:0:5"
                  },
                  "scope": 874,
                  "src": "210:481:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 875,
              "src": "172:521:5",
              "usedErrors": []
            }
          ],
          "src": "43:650:5"
        },
        "id": 5
      }
    }
  }
}
