{"id":"75b34296d5ffbb66d7782049c629699b","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/DeterministicAddress.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n/**\n * @title DeterministicAddress\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\nabstract contract DeterministicAddress {\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\n        public\n        pure\n        returns (address)\n    {\n        // byte code for metamorphic contract\n        // 6020363636335afa1536363636515af43d36363e3d36f3\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\n        return\n            address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                hex\"ff\",\n                                _factory,\n                                _salt,\n                                metamorphicContractBytecodeHash_\n                            )\n                        )\n                    )\n                )\n            );\n    }\n}\n"},"contracts/Errors.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.17;\n\nerror IncorrectProxyImplementation(address current, address expected); // error for when the proxy implementation is not the expected one\nerror CodeSizeZero(); // error for when the deployed contract code size is zero\nerror SaltAlreadyInUse(bytes32 salt); // error for when another contract has already been deployed with the same salt\nerror Unauthorized(); // error for when the caller is not authorized to perform the action\n"},"contracts/mocks/MockContract.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\nimport \"../ProxyChild.sol\";\n\n/**\n@dev This mock inheirts the ProxyChild contract to simplify constructor / initialization logic\n*/\ncontract Mock is ProxyChild {\n    uint256 immutable _version;\n    address immutable _anotherAnotherMock;\n    address immutable _anotherMock;\n\n    string public _name;\n    uint256 public _a;\n\n    constructor(uint256 version_, address anotherMock_, address anotherAnotherMock_) {\n        _version = version_;\n        _anotherMock = anotherMock_;\n        _anotherAnotherMock = anotherAnotherMock_;\n    }\n\n    function initialize(string memory name_, uint256 a_) public onlyFactory {\n        _name = name_;\n        _a = a_;\n    }\n\n    function setA(uint256 a_) public {\n        _a = a_;\n    }\n\n    function setMsg(string calldata name_) public {\n        _name = name_;\n    }\n}\n"},"contracts/mocks/MockContract2.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\n/**\n@dev This mock does not inheirt the ProxyChild contract and implements the logic itself\n*/\ncontract Mock2 {\n    uint256 immutable _version;\n    address immutable _anotherMock;\n    address immutable _factory;\n\n    string public _name;\n    uint256 public _a;\n\n    modifier onlyFactory() {\n        require(msg.sender == _factory, \"ChildProxy: only factory allowed\");\n        _;\n    }\n\n    constructor(address factory_, uint256 version_, address anotherMock_) {\n        _factory = factory_;\n        _version = version_;\n        _anotherMock = anotherMock_;\n    }\n\n    function initialize(string memory name_, uint256 a_) public onlyFactory {\n        _name = name_;\n        _a = a_;\n    }\n\n    function setA(uint256 a_) public {\n        _a = a_;\n    }\n\n    function setMsg(string calldata name_) public {\n        _name = name_;\n    }\n}"},"contracts/mocks/MockContract3.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\n/**\n@dev This mock does not inheirt the ProxyChild contract and no initalize function\n*/\ncontract Mock3 {\n    uint256 immutable _version;\n    address immutable _anotherMock;\n    address immutable _factory;\n\n    string public _name;\n    uint256 public _a;\n\n    constructor(address factory_, uint256 version_, address anotherMock_) {\n        _factory = factory_;\n        _version = version_;\n        _anotherMock = anotherMock_;\n    }\n\n    function setA(uint256 a_) public {\n        _a = a_;\n    }\n\n    function setMsg(string calldata name_) public {\n        _name = name_;\n    }\n}"},"contracts/proxy/IProxy.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n\ninterface IProxy {\n    function getImplementationAddress() external view returns (address);\n}"},"contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.17;\n\nimport \"contracts/DeterministicAddress.sol\";\n\n/**\n * @title Proxy\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\n */\n/**\n * @notice Proxy is a delegatecall reverse proxy implementation that is secure against function\n * collision.\n *\n * The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in\n * it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded\n * using the internal mechanism. This does not prevent the implementation from upgrading the proxy\n * by changing this slot.\n *\n * The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the\n * factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>);\n *\n * The proxy can return its implementation address by calling it using the format\n * abi.encodePacked(hex'0cbcae703c');\n *\n * All other calls will be proxied through to the implementation.\n *\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that\n * the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must\n * carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the\n * proxy.\n *\n * @dev RUN OPTIMIZER OFF\n */\ncontract Proxy {\n    address private immutable _factory;\n\n    constructor() {\n        _factory = msg.sender;\n    }\n\n    receive() external payable {\n        _fallback();\n    }\n\n    fallback() external payable {\n        _fallback();\n    }\n\n    /// Delegates calls to proxy implementation\n    function _fallback() internal {\n        // make local copy of factory since immutables are not accessible in assembly as of yet\n        address factory = _factory;\n        assembly (\"memory-safe\") {\n            // check if the calldata has the special signatures to access the proxy functions. To\n            // avoid collision the signatures for the proxy function are 5 bytes long (instead of\n            // the normal 4).\n            if or(eq(calldatasize(), 0x25), eq(calldatasize(), 0x5)) {\n                {\n                    let selector := shr(216, calldataload(0x00))\n                    switch selector\n                    // getImplementationAddress()\n                    case 0x0cbcae703c {\n                        let ptr := mload(0x40)\n                        mstore(ptr, getImplementationAddress())\n                        return(ptr, 0x14)\n                    }\n                    // setImplementationAddress()\n                    case 0xca11c0de11 {\n                        // revert in case user is not factory/admin\n                        if iszero(eq(caller(), factory)) {\n                            revertASM(\"unauthorized\", 12)\n                        }\n                        // if caller is factory, and has 0xca11c0de00<address> as calldata,\n                        // run admin logic and return\n                        setImplementationAddress()\n                    }\n                    default {\n                        revertASM(\"function not found\", 18)\n                    }\n                }\n            }\n            // admin logic was not run so fallthrough to delegatecall\n            passthrough()\n\n            ///////////// Functions ///////////////\n\n            function revertASM(str, len) {\n                let ptr := mload(0x40)\n                let startPtr := ptr\n                mstore(ptr, hex\"08c379a0\") // keccak256('Error(string)')[0:4]\n                ptr := add(ptr, 0x4)\n                mstore(ptr, 0x20)\n                ptr := add(ptr, 0x20)\n                mstore(ptr, len) // string length\n                ptr := add(ptr, 0x20)\n                mstore(ptr, str)\n                ptr := add(ptr, 0x20)\n                revert(startPtr, sub(ptr, startPtr))\n            }\n\n            function getImplementationAddress() -> implAddr {\n                implAddr := shl(\n                    96,\n                    and(\n                        sload(not(0x00)),\n                        0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                    )\n                )\n            }\n\n            // updateImplementation is the builtin logic to change the implementation\n            function setImplementationAddress() {\n                // check if the upgrade functionality is locked.\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10deadc0de) {\n                    revertASM(\"update locked\", 13)\n                }\n                // this is an assignment to implementation\n                let newImpl := shr(96, shl(96, calldataload(0x05)))\n                // store address into slot\n                sstore(not(0x00), newImpl)\n                // stop to not fall into the default case of the switch selector\n                stop()\n            }\n\n            // passthrough is the passthrough logic to delegate to the implementation\n            function passthrough() {\n                let logicAddress := sload(not(0x00))\n                if iszero(logicAddress) {\n                    revertASM(\"logic not set\", 13)\n                }\n                // load free memory pointer\n                let ptr := mload(0x40)\n                // allocate memory proportionate to calldata\n                mstore(0x40, add(ptr, calldatasize()))\n                // copy calldata into memory\n                calldatacopy(ptr, 0x00, calldatasize())\n                let ret := delegatecall(\n                    gas(),\n                    logicAddress,\n                    ptr,\n                    calldatasize(),\n                    0x00,\n                    0x00\n                )\n                returndatacopy(ptr, 0x00, returndatasize())\n                if iszero(ret) {\n                    revert(ptr, returndatasize())\n                }\n                return(ptr, returndatasize())\n            }\n        }\n    }\n}\n"},"contracts/proxy/ProxyImplementationGetter.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.17;\n\nabstract contract ProxyImplementationGetter {\n    function __getProxyImplementation(\n        address _proxy\n    ) internal view returns (address implAddress) {\n        bytes memory cdata = hex\"0cbcae703c\";\n        assembly (\"memory-safe\") {\n            let success := staticcall(\n                gas(),\n                _proxy,\n                add(cdata, 0x20),\n                mload(cdata),\n                0x00,\n                0x00\n            )\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, returndatasize()))\n            returndatacopy(ptr, 0x00, returndatasize())\n            if iszero(success) {\n                revert(ptr, returndatasize())\n            }\n            implAddress := shr(96, mload(ptr))\n        }\n    }\n}\n"},"contracts/proxy/ProxyInternalUpgradeLock.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.17;\n\n/**\n * @title ProxyInternalUpgradeLock\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\n */\nabstract contract ProxyInternalUpgradeLock {\n    function __lockImplementation() internal {\n        assembly (\"memory-safe\") {\n            let implSlot := not(0x00)\n            sstore(\n                implSlot,\n                or(\n                    0xca11c0de15dead10deadc0de0000000000000000000000000000000000000000,\n                    and(\n                        sload(implSlot),\n                        0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                    )\n                )\n            )\n        }\n    }\n}\n"},"contracts/proxy/ProxyInternalUpgradeUnlock.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.17;\n\n/**\n * @title ProxyInternalUpgradeUnlock\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\n */\nabstract contract ProxyInternalUpgradeUnlock {\n    function __unlockImplementation() internal {\n        assembly (\"memory-safe\") {\n            let implSlot := not(0x00)\n            sstore(\n                implSlot,\n                and(\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff,\n                    sload(implSlot)\n                )\n            )\n        }\n    }\n}\n"},"contracts/proxy/ProxyUpgrader.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.17;\n\n/**\n * @title ProxyUpgrader\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\nabstract contract ProxyUpgrader {\n    function __upgrade(address _proxy, address _newImpl) internal {\n        bytes memory cdata = abi.encodePacked(\n            hex\"ca11c0de11\",\n            uint256(uint160(_newImpl))\n        );\n        assembly (\"memory-safe\") {\n            let success := call(\n                gas(),\n                _proxy,\n                0,\n                add(cdata, 0x20),\n                mload(cdata),\n                0x00,\n                0x00\n            )\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, returndatasize()))\n            returndatacopy(ptr, 0x00, returndatasize())\n            if iszero(success) {\n                revert(ptr, returndatasize())\n            }\n        }\n    }\n}\n"},"contracts/ProxyChild.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\n/**\n * @title ProxyChild\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\ncontract ProxyChild {\n    address immutable _factory;\n    bool _locked;\n\n    modifier onlyFactory() {\n        senderIsFactory();\n        _;\n    }\n\n    modifier onlyFactoryOnce() {\n        senderIsFactory();\n        require(!_locked, \"Initialized is locked\");\n        _;\n        _locked = true;\n    }\n\n    constructor() {\n        _factory = msg.sender;\n    }\n\n    function senderIsFactory() internal view {\n        require(msg.sender == _factory, \"ChildProxy: only factory allowed\");\n    }\n\n    function getFactory() public view returns (address) {\n        return _factory;\n    }\n}"},"contracts/ProxyFactory.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\nimport \"./DeterministicAddress.sol\";\nimport \"./proxy/Proxy.sol\";\nimport \"./ProxyFactoryBase.sol\";\n\n/**\n * @title ProxyFactory\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\n */\n/// @custom:salt ProxyFactory\ncontract ProxyFactory is ProxyFactoryBase {\n    /**\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n     * account will be set as the first owner of the factory.\n     */\n    constructor() ProxyFactoryBase() {}\n\n    /**\n     * @notice callAny allows EOA to call function impersonating the factory address\n     * @param target_: the address of the contract to be called\n     * @param value_: value in WEIs to send together the call\n     * @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\n     * @return the return of the calls as a byte array\n     */\n    function callAny(\n        address target_,\n        uint256 value_,\n        bytes calldata cdata_\n    ) public payable onlyOwner returns (bytes memory) {\n        bytes memory cdata = cdata_;\n        return _callAny(target_, value_, cdata);\n    }\n\n    /**\n     * @notice deployCreate allows the owner to deploy raw contracts through the factory using\n     * non-deterministic address generation (create OpCode)\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function deployCreate(\n        bytes calldata deployCode_\n    ) public onlyOwner returns (address contractAddr) {\n        return _deployCreate(deployCode_);\n    }\n\n    /**\n     * @notice allows the owner to deploy contracts through the factory using\n     * non-deterministic address generation and record the address to external contract mapping\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @return contractAddr the deployed contract address\n     */\n    function deployCreateAndRegister(\n        bytes calldata deployCode_,\n        bytes32 salt_\n    ) public onlyOwner returns (address contractAddr) {\n        address newContractAddress = _deployCreate(deployCode_);\n        _addNewContract(salt_, newContractAddress);\n        return newContractAddress;\n    }\n\n    /**\n     * @dev deployCreate2 allows the owner to deploy contracts with deterministic address\n     * through the factory\n     * @param value_ endowment value in WEIS for the created contract\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function deployCreate2(\n        uint256 value_,\n        bytes32 salt_,\n        bytes calldata deployCode_\n    ) public payable onlyOwner returns (address contractAddr) {\n        contractAddr = _deployCreate2(value_, salt_, deployCode_);\n    }\n\n    /**\n     * @dev deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     */\n    function deployProxy(\n        bytes32 salt_\n    ) public onlyOwner returns (address contractAddr) {\n        contractAddr = _deployProxy(salt_);\n    }\n\n    /**\n     * @dev initializeContract allows the owner/delegator to initialize contracts deployed via factory\n     * @param contract_ address of the contract that will be initialized\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * deployed contract\n     */\n    function initializeContract(\n        address contract_,\n        bytes calldata initCallData_\n    ) public onlyOwner {\n        _initializeContract(contract_, initCallData_);\n    }\n\n    /**\n     * @dev multiCall allows EOA to make multiple function calls within a single transaction\n     * impersonating the factory\n     * @param cdata_: array of hex encoded state with the function calls (function signature + arguments)\n     */\n    function multiCall(\n        MultiCallArgs[] calldata cdata_\n    ) public onlyOwner returns (bytes[] memory) {\n        return _multiCall(cdata_);\n    }\n\n    /**\n     * @dev upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n     * @param newImpl_ address of the new contract that contains the new implementation logic\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * new implementation contract\n     */\n    function upgradeProxy(\n        bytes32 salt_,\n        address newImpl_,\n        bytes calldata initCallData_\n    ) public onlyOwner {\n        _upgradeProxy(salt_, newImpl_, initCallData_);\n    }\n\n    /**\n     * @notice getter function for retrieving the implementation address of an AliceNet proxy.\n     * @param proxyAddress_ the address of the proxy\n     * @return the address of implementation/logic contract used by the proxy\n     */\n    function getProxyImplementation(\n        address proxyAddress_\n    ) public view returns (address) {\n        return __getProxyImplementation(proxyAddress_);\n    }\n}\n"},"contracts/ProxyFactoryBase.sol":{"content":"// SPDX-License-Identifier: MIT-open-group\npragma solidity ^0.8.11;\nimport \"./proxy/Proxy.sol\";\nimport \"./DeterministicAddress.sol\";\nimport \"./proxy/ProxyUpgrader.sol\";\nimport \"./proxy/IProxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"contracts/Errors.sol\";\nimport \"contracts/proxy/ProxyImplementationGetter.sol\";\n\n/**\n * @title ProxyFactoryBase\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\n */\nabstract contract ProxyFactoryBase is\n    DeterministicAddress,\n    ProxyUpgrader,\n    ProxyImplementationGetter\n{\n    using Address for address;\n\n    struct MultiCallArgs {\n        address target;\n        uint256 value;\n        bytes data;\n    }\n\n    /**\n    @dev owner role for privileged access to functions\n    */\n    address private _owner;\n\n    /**\n    @dev array to store list of contract salts\n    */\n    bytes32[] private _contracts;\n\n    /**\n    @dev slot for storing implementation address\n    */\n    address private _implementation;\n\n    address private immutable _proxyTemplate;\n\n    bytes8 private constant _UNIVERSAL_DEPLOY_CODE = 0x38585839386009f3;\n\n    mapping(bytes32 => address) internal _contractRegistry;\n\n    /**\n     *@dev events that notify of contract deployment\n     */\n    event Deployed(bytes32 salt, address contractAddr);\n    event DeployedTemplate(address contractAddr);\n    event DeployedStatic(address contractAddr);\n    event DeployedRaw(address contractAddr);\n    event DeployedProxy(address contractAddr);\n    event UpgradedProxy(bytes32 salt, address proxyAddr, address newlogicAddr);\n\n    // modifier restricts caller to owner or self via multicall\n    modifier onlyOwner() {\n        require(msg.sender == address(this) || msg.sender == owner());\n        _;\n    }\n\n    /**\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n     * account will be set as the first owner of the factory.\n     */\n    constructor() {\n        bytes memory proxyDeployCode = abi.encodePacked(\n            //8 byte code copy constructor code\n            _UNIVERSAL_DEPLOY_CODE,\n            type(Proxy).creationCode,\n            bytes32(uint256(uint160(address(this))))\n        );\n        //variable to store the address created from create(the location of the proxy template contract)\n        address addr;\n        assembly (\"memory-safe\") {\n            //deploys the proxy template contract\n            addr := create(\n                0,\n                add(proxyDeployCode, 0x20),\n                mload(proxyDeployCode)\n            )\n            if iszero(addr) {\n                //if contract creation fails, we want to return any err messages\n                returndatacopy(0x00, 0x00, returndatasize())\n                //revert and return errors\n                revert(0x00, returndatasize())\n            }\n        }\n        //State var that stores the proxyTemplate address\n        _proxyTemplate = addr;\n        //State var that stores the _owner address\n        _owner = msg.sender;\n    }\n\n    // solhint-disable payable-fallback\n    /**\n     * @dev fallback function returns the address of the most recent deployment of a template\n     */\n    fallback() external {\n        assembly {\n            mstore(returndatasize(), sload(_implementation.slot))\n            return(returndatasize(), 0x20)\n        }\n    }\n\n    /**\n     * @dev Sets the new owner\n     * @param newOwner_: address of the new owner\n     */\n    function setOwner(address newOwner_) public onlyOwner {\n        _owner = newOwner_;\n    }\n\n    /**\n     * @notice lookup allows anyone interacting with the contract to get the address of contract specified\n     * by its salt_\n     * @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file\n     */\n    function lookup(bytes32 salt_) public view virtual returns (address) {\n        return _lookup(salt_);\n    }\n\n    /**\n     * @dev getImplementation is public getter function for the _owner account address\n     */\n    function getImplementation() public view returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev owner is public getter function for the _owner account address\n     * @return owner_ address of the owner account\n     */\n    function owner() public view returns (address owner_) {\n        owner_ = _owner;\n    }\n\n    /**\n     * @dev contracts is public getter that gets the array of salts associated with all the contracts\n     * deployed with this factory\n     * @return contracts_ the array of salts associated with all the contracts deployed with this\n     * factory\n     */\n    function contracts() public view returns (bytes32[] memory contracts_) {\n        contracts_ = _contracts;\n    }\n\n    /**\n     * @dev getNumContracts getter function for retrieving the total number of contracts\n     * deployed with this factory\n     * @return the length of the contract array\n     */\n    function getNumContracts() public view returns (uint256) {\n        return _contracts.length;\n    }\n\n    /**\n     * @dev _callAny allows EOA to call function impersonating the factory address\n     * @param target_: the address of the contract to be called\n     * @param value_: value in WEIs to send together the call\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\n     */\n    function _callAny(\n        address target_,\n        uint256 value_,\n        bytes memory cdata_\n    ) internal returns (bytes memory) {\n        return target_.functionCallWithValue(cdata_, value_);\n    }\n\n    /**\n     * @dev _deployCreate allows the owner to deploy raw contracts through the factory using\n     * non-deterministic address generation (create OpCode)\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function _deployCreate(\n        bytes calldata deployCode_\n    ) internal returns (address contractAddr) {\n        assembly (\"memory-safe\") {\n            //get the next free pointer\n            let basePtr := mload(0x40)\n            let ptr := basePtr\n\n            //copies the initialization code of the implementation contract\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\n\n            //Move the ptr to the end of the code in memory\n            ptr := add(ptr, deployCode_.length)\n\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\n        }\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\n        emit DeployedRaw(contractAddr);\n    }\n\n    /**\n     * @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\n     * factory\n     * @param value_ endowment value in WEIS for the created contract\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n     * constructors' args (if any)\n     * @return contractAddr the deployed contract address\n     */\n    function _deployCreate2(\n        uint256 value_,\n        bytes32 salt_,\n        bytes calldata deployCode_\n    ) internal returns (address contractAddr) {\n        assembly {\n            //get the next free pointer\n            let basePtr := mload(0x40)\n            let ptr := basePtr\n\n            //copies the initialization code of the implementation contract\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\n\n            //Move the ptr to the end of the code in memory\n            ptr := add(ptr, deployCode_.length)\n\n            contractAddr := create2(value_, basePtr, sub(ptr, basePtr), salt_)\n        }\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\n        //record the contract salt to the _contracts array for lookup\n        _contracts.push(salt_);\n        emit DeployedRaw(contractAddr);\n    }\n\n    /**\n     * @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\n     */\n    function _deployProxy(\n        bytes32 salt_\n    ) internal returns (address contractAddr) {\n        address proxyTemplate = _proxyTemplate;\n        assembly {\n            // store proxy template address as implementation,\n            sstore(_implementation.slot, proxyTemplate)\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, 0x20))\n            // put metamorphic code as initCode\n            // push1 20\n            mstore(\n                ptr,\n                shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3)\n            )\n            contractAddr := create2(0, ptr, 0x17, salt_)\n        }\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\n        _addNewContract(salt_, contractAddr);\n        emit DeployedProxy(contractAddr);\n    }\n\n    /**\n     * @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\n     * @param contract_ address of the contract that will be initialized\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * deployed contract\n     */\n    function _initializeContract(\n        address contract_,\n        bytes calldata initCallData_\n    ) internal {\n        assembly (\"memory-safe\") {\n            if iszero(iszero(initCallData_.length)) {\n                let ptr := mload(0x40)\n                mstore(0x40, add(initCallData_.length, ptr))\n                calldatacopy(ptr, initCallData_.offset, initCallData_.length)\n                if iszero(\n                    call(\n                        gas(),\n                        contract_,\n                        0,\n                        ptr,\n                        initCallData_.length,\n                        0x00,\n                        0x00\n                    )\n                ) {\n                    ptr := mload(0x40)\n                    mstore(0x40, add(returndatasize(), ptr))\n                    returndatacopy(ptr, 0x00, returndatasize())\n                    revert(ptr, returndatasize())\n                }\n            }\n        }\n    }\n\n    /**\n     * @notice _multiCall allows EOA to make multiple function calls within a single transaction\n     * impersonating the factory\n     * @param cdata_: array of abi encoded data with the function calls (function signature + arguments)\n     */\n    function _multiCall(\n        MultiCallArgs[] calldata cdata_\n    ) internal returns (bytes[] memory results) {\n        results = new bytes[](cdata_.length);\n        for (uint256 i = 0; i < cdata_.length; i++) {\n            results[i] = _callAny(\n                cdata_[i].target,\n                cdata_[i].value,\n                cdata_[i].data\n            );\n        }\n    }\n\n    /**\n     * @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n     * @param newImpl_ address of the new contract that contains the new implementation logic\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n     * new implementation contract\n     */\n    function _upgradeProxy(\n        bytes32 salt_,\n        address newImpl_,\n        bytes calldata initCallData_\n    ) internal {\n        address proxy = DeterministicAddress.getMetamorphicContractAddress(\n            salt_,\n            address(this)\n        );\n        __upgrade(proxy, newImpl_);\n        address currentImplementation = __getProxyImplementation(proxy);\n        if (currentImplementation != newImpl_) {\n            revert IncorrectProxyImplementation(\n                currentImplementation,\n                newImpl_\n            );\n        }\n        _initializeContract(proxy, initCallData_);\n        emit UpgradedProxy(salt_, proxy, newImpl_);\n    }\n\n    /// Internal function to add a new address and \"pseudo\" salt to the externalContractRegistry\n    function _addNewContract(\n        bytes32 salt_,\n        address newContractAddress_\n    ) internal {\n        if (_contractRegistry[salt_] != address(0)) {\n            revert SaltAlreadyInUse(salt_);\n        }\n        _contracts.push(salt_);\n        _contractRegistry[salt_] = newContractAddress_;\n    }\n\n    /**\n     * @notice Aux function to return the external code size\n     */\n    function _extCodeSize(\n        address target_\n    ) internal view returns (uint256 size) {\n        assembly (\"memory-safe\") {\n            size := extcodesize(target_)\n        }\n        return size;\n    }\n\n    // lookup allows anyone interacting with the contract to get the address of contract specified by\n    // its salt_. Returns address(0) in case a contract for that salt was not deployed.\n    function _lookup(bytes32 salt_) internal view returns (address) {\n        return _contractRegistry[salt_];\n    }\n\n    /**\n     * @notice _requireAuth reverts if false and returns unauthorized error message\n     * @param isOk_ boolean false to cause revert\n     */\n    function _requireAuth(bool isOk_) internal pure {\n        if (!isOk_) {\n            revert Unauthorized();\n        }\n    }\n\n    /**\n     * @notice _codeSizeZeroRevert reverts if false and returns csize0 error message\n     * @param isOk_ boolean false to cause revert\n     */\n    function _codeSizeZeroRevert(bool isOk_) internal pure {\n        if (!isOk_) {\n            revert CodeSizeZero();\n        }\n    }\n}\n"}},"settings":{"outputSelection":{"*":{"*":["metadata","evm.bytecode","evm.bytecode.sourceMap","abi","evm.deployedBytecode","evm.methodIdentifiers","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]},"def":{"MyContract":["abi","evm.bytecode.opcodes"]}},"metadata":{"useLiteralContent":true},"optimizer":{"enabled":true,"runs":20000000}}},"output":{"sources":{"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[329]},"id":330,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"126:67:0","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":329,"linearizedBaseContracts":[329],"name":"Address","nameLocation":"202:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":16,"nodeType":"Block","src":"1241:254:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1465:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:0","memberName":"code","nodeType":"MemberAccess","src":"1465:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":12,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:0","memberName":"length","nodeType":"MemberAccess","src":"1465:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9,"id":15,"nodeType":"Return","src":"1458:30:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"216:954:0","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":17,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"account","nameLocation":"1203:7:0","nodeType":"VariableDeclaration","scope":17,"src":"1195:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17,"src":"1235:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:0"},"scope":329,"src":"1175:320:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":50,"nodeType":"Block","src":"2483:241:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":28,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$329","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$329","typeString":"library Address"}],"id":27,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:0","typeDescriptions":{}}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:0","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":31,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2526:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":25,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2493:73:0"},{"assignments":[37,null],"declarations":[{"constant":false,"id":37,"mutability":"mutable","name":"success","nameLocation":"2583:7:0","nodeType":"VariableDeclaration","scope":50,"src":"2578:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":44,"initialValue":{"arguments":[{"hexValue":"","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":38,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2596:9:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:0","memberName":"call","nodeType":"MemberAccess","src":"2596:14:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":40,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2618:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:0"},{"expression":{"arguments":[{"id":46,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2647:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":45,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49,"nodeType":"ExpressionStatement","src":"2639:78:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"1501:906:0","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":51,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:0","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:0","nodeType":"VariableDeclaration","scope":51,"src":"2431:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"amount","nameLocation":"2466:6:0","nodeType":"VariableDeclaration","scope":51,"src":"2458:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:0"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"2483:0:0"},"scope":329,"src":"2412:312:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3555:96:0","statements":[{"expression":{"arguments":[{"id":62,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3594:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":63,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3602:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":61,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[109,153],"referencedDeclaration":153,"src":"3572:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":60,"id":67,"nodeType":"Return","src":"3565:79:0"}]},"documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"2730:731:0","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":69,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"target","nameLocation":"3496:6:0","nodeType":"VariableDeclaration","scope":69,"src":"3488:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"data","nameLocation":"3517:4:0","nodeType":"VariableDeclaration","scope":69,"src":"3504:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"3541:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:0"},"scope":329,"src":"3466:185:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"4020:76:0","statements":[{"expression":{"arguments":[{"id":82,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"4059:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":83,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"4067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":84,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":85,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"4076:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":81,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[109,153],"referencedDeclaration":153,"src":"4037:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":80,"id":87,"nodeType":"Return","src":"4030:59:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3657:211:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":89,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"target","nameLocation":"3912:6:0","nodeType":"VariableDeclaration","scope":89,"src":"3904:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"data","nameLocation":"3941:4:0","nodeType":"VariableDeclaration","scope":89,"src":"3928:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":73,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:0","nodeType":"VariableDeclaration","scope":89,"src":"3955:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":75,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"4006:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:0"},"scope":329,"src":"3873:223:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":108,"nodeType":"Block","src":"4601:111:0","statements":[{"expression":{"arguments":[{"id":102,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"4640:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":103,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4648:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"4654:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":101,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[109,153],"referencedDeclaration":153,"src":"4618:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":100,"id":107,"nodeType":"Return","src":"4611:94:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4102:351:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":109,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"target","nameLocation":"4506:6:0","nodeType":"VariableDeclaration","scope":109,"src":"4498:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"data","nameLocation":"4535:4:0","nodeType":"VariableDeclaration","scope":109,"src":"4522:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":93,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"value","nameLocation":"4557:5:0","nodeType":"VariableDeclaration","scope":109,"src":"4549:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":109,"src":"4587:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":98,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:0"},"scope":329,"src":"4458:254:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"5139:267:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":126,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$329","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$329","typeString":"library Address"}],"id":125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:0","typeDescriptions":{}}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:0","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"5182:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"5149:81:0"},{"assignments":[135,137],"declarations":[{"constant":false,"id":135,"mutability":"mutable","name":"success","nameLocation":"5246:7:0","nodeType":"VariableDeclaration","scope":152,"src":"5241:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":134,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:0","nodeType":"VariableDeclaration","scope":152,"src":"5255:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":136,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":144,"initialValue":{"arguments":[{"id":142,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"5308:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":138,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"5282:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:0","memberName":"call","nodeType":"MemberAccess","src":"5282:11:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"5301:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:0"},{"expression":{"arguments":[{"id":146,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"5357:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5365:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":148,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"5374:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":149,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"5386:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":145,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5330:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":122,"id":151,"nodeType":"Return","src":"5323:76:0"}]},"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"4718:237:0","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":153,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"target","nameLocation":"5008:6:0","nodeType":"VariableDeclaration","scope":153,"src":"5000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"data","nameLocation":"5037:4:0","nodeType":"VariableDeclaration","scope":153,"src":"5024:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":113,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"value","nameLocation":"5059:5:0","nodeType":"VariableDeclaration","scope":153,"src":"5051:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:0","nodeType":"VariableDeclaration","scope":153,"src":"5074:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":117,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"5125:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":120,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:0"},"scope":329,"src":"4960:446:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":169,"nodeType":"Block","src":"5683:97:0","statements":[{"expression":{"arguments":[{"id":164,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"5719:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":165,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"5727:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":163,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[170,199],"referencedDeclaration":199,"src":"5700:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":162,"id":168,"nodeType":"Return","src":"5693:80:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"5412:166:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":170,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:0","nodeType":"FunctionDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"target","nameLocation":"5619:6:0","nodeType":"VariableDeclaration","scope":170,"src":"5611:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"data","nameLocation":"5640:4:0","nodeType":"VariableDeclaration","scope":170,"src":"5627:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":157,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:0"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"5669:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":160,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:0"},"scope":329,"src":"5583:197:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"6122:168:0","statements":[{"assignments":[183,185],"declarations":[{"constant":false,"id":183,"mutability":"mutable","name":"success","nameLocation":"6138:7:0","nodeType":"VariableDeclaration","scope":198,"src":"6133:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":182,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:0","nodeType":"VariableDeclaration","scope":198,"src":"6147:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":184,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":190,"initialValue":{"arguments":[{"id":188,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"6192:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":186,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6174:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:0"},{"expression":{"arguments":[{"id":192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6241:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"6249:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":194,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"6258:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":195,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"6270:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":191,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"6214:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":181,"id":197,"nodeType":"Return","src":"6207:76:0"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"5786:173:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:0","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"target","nameLocation":"6009:6:0","nodeType":"VariableDeclaration","scope":199,"src":"6001:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"6038:4:0","nodeType":"VariableDeclaration","scope":199,"src":"6025:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:0","nodeType":"VariableDeclaration","scope":199,"src":"6052:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":176,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:0"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"6108:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":179,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:0"},"scope":329,"src":"5964:326:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":215,"nodeType":"Block","src":"6566:101:0","statements":[{"expression":{"arguments":[{"id":210,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6604:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":211,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6612:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":209,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[216,245],"referencedDeclaration":245,"src":"6583:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":208,"id":214,"nodeType":"Return","src":"6576:84:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"6296:168:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":216,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"target","nameLocation":"6507:6:0","nodeType":"VariableDeclaration","scope":216,"src":"6499:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"data","nameLocation":"6528:4:0","nodeType":"VariableDeclaration","scope":216,"src":"6515:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":203,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"6552:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":206,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:0"},"scope":329,"src":"6469:198:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"7008:170:0","statements":[{"assignments":[229,231],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"success","nameLocation":"7024:7:0","nodeType":"VariableDeclaration","scope":244,"src":"7019:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:0","nodeType":"VariableDeclaration","scope":244,"src":"7033:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":230,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"7080:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":232,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"7060:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:0","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:0","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:0"},{"expression":{"arguments":[{"id":238,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"7129:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"7137:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":240,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"7146:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":241,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"7158:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":237,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7102:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":227,"id":243,"nodeType":"Return","src":"7095:76:0"}]},"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"6673:175:0","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"target","nameLocation":"6900:6:0","nodeType":"VariableDeclaration","scope":245,"src":"6892:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"data","nameLocation":"6929:4:0","nodeType":"VariableDeclaration","scope":245,"src":"6916:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:0","nodeType":"VariableDeclaration","scope":245,"src":"6943:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":222,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"6994:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":225,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:0"},"scope":329,"src":"6853:325:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"7660:434:0","statements":[{"condition":{"id":259,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"7674:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":281,"nodeType":"Block","src":"8030:58:0","statements":[{"expression":{"arguments":[{"id":277,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"8052:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":278,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8064:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":276,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"8044:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"8044:33:0"}]},"id":282,"nodeType":"IfStatement","src":"7670:418:0","trueBody":{"id":275,"nodeType":"Block","src":"7683:341:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":260,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7701:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:0","memberName":"length","nodeType":"MemberAccess","src":"7701:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"IfStatement","src":"7697:286:0","trueBody":{"id":271,"nodeType":"Block","src":"7725:258:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":266,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7927:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":265,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"7916:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"ExpressionStatement","src":"7908:60:0"}]}},{"expression":{"id":273,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"8003:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":258,"id":274,"nodeType":"Return","src":"7996:17:0"}]}}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"7184:277:0","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:0","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"target","nameLocation":"7519:6:0","nodeType":"VariableDeclaration","scope":284,"src":"7511:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"success","nameLocation":"7540:7:0","nodeType":"VariableDeclaration","scope":284,"src":"7535:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":249,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:0","nodeType":"VariableDeclaration","scope":284,"src":"7557:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":251,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:0","nodeType":"VariableDeclaration","scope":284,"src":"7590:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":253,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"7646:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":256,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:0"},"scope":329,"src":"7466:628:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":307,"nodeType":"Block","src":"8475:135:0","statements":[{"condition":{"id":296,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"8489:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":305,"nodeType":"Block","src":"8546:58:0","statements":[{"expression":{"arguments":[{"id":301,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"8568:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":302,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"8580:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":300,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"8560:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"8560:33:0"}]},"id":306,"nodeType":"IfStatement","src":"8485:119:0","trueBody":{"id":299,"nodeType":"Block","src":"8498:42:0","statements":[{"expression":{"id":297,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"8519:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":295,"id":298,"nodeType":"Return","src":"8512:17:0"}]}}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"8100:210:0","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":308,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:0","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"success","nameLocation":"8355:7:0","nodeType":"VariableDeclaration","scope":308,"src":"8350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":286,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:0","nodeType":"VariableDeclaration","scope":308,"src":"8372:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":288,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:0","nodeType":"VariableDeclaration","scope":308,"src":"8405:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:0"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"8461:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":293,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:0"},"scope":329,"src":"8315:295:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":327,"nodeType":"Block","src":"8699:457:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"8775:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:0","memberName":"length","nodeType":"MemberAccess","src":"8775:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":325,"nodeType":"Block","src":"9105:45:0","statements":[{"expression":{"arguments":[{"id":322,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"9126:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":321,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"9119:20:0"}]},"id":326,"nodeType":"IfStatement","src":"8771:379:0","trueBody":{"id":320,"nodeType":"Block","src":"8798:301:0","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:0","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:0","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:0"},"nodeType":"YulFunctionCall","src":"8997:17:0"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:0","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:0"},"nodeType":"YulFunctionCall","src":"9038:19:0"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:0"},"nodeType":"YulFunctionCall","src":"9031:44:0"},"nodeType":"YulExpressionStatement","src":"9031:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":310,"isOffset":false,"isSlot":false,"src":"9003:10:0","valueSize":1},{"declaration":310,"isOffset":false,"isSlot":false,"src":"9046:10:0","valueSize":1}],"id":319,"nodeType":"InlineAssembly","src":"8947:142:0"}]}}]},"id":328,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:0","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:0","nodeType":"VariableDeclaration","scope":328,"src":"8633:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":309,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:0","nodeType":"VariableDeclaration","scope":328,"src":"8658:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":311,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:0"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"8699:0:0"},"scope":329,"src":"8616:540:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":330,"src":"194:8964:0","usedErrors":[]}],"src":"101:9058:0"},"id":0},"contracts/DeterministicAddress.sol":{"ast":{"absolutePath":"contracts/DeterministicAddress.sol","exportedSymbols":{"DeterministicAddress":[366]},"id":367,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":331,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"DeterministicAddress","contractDependencies":[],"contractKind":"contract","documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"68:109:1","text":" @title DeterministicAddress\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"},"fullyImplemented":true,"id":366,"linearizedBaseContracts":[366],"name":"DeterministicAddress","nameLocation":"196:20:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":364,"nodeType":"Block","src":"353:699:1","statements":[{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"metamorphicContractBytecodeHash_","nameLocation":"475:32:1","nodeType":"VariableDeclaration","scope":364,"src":"467:40:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"467:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":344,"initialValue":{"hexValue":"307831633062663730336133343135636164613937383565383965396437303331346333313131616537643865303466333362623432656231643236343038386265","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"510:66:1","typeDescriptions":{"typeIdentifier":"t_rational_12685899907464310292211268635673190940071670868321310578737787880529194944702_by_1","typeString":"int_const 1268...(69 digits omitted)...4702"},"value":"0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be"},"nodeType":"VariableDeclarationStatement","src":"467:109:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"ff","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"781:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""}},{"id":355,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"822:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":356,"name":"_salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"864:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":357,"name":"metamorphicContractBytecodeHash_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"903:32:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":352,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"731:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"735:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"731:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"731:234:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"692:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"692:299:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"659:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:1","typeDescriptions":{}}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"659:354:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"630:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":347,"name":"uint160","nodeType":"ElementaryTypeName","src":"630:7:1","typeDescriptions":{}}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"630:401:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"605:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:1","typeDescriptions":{}}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"605:440:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":340,"id":363,"nodeType":"Return","src":"586:459:1"}]},"functionSelector":"8653a465","id":365,"implemented":true,"kind":"function","modifiers":[],"name":"getMetamorphicContractAddress","nameLocation":"232:29:1","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"_salt","nameLocation":"270:5:1","nodeType":"VariableDeclaration","scope":365,"src":"262:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"262:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"_factory","nameLocation":"285:8:1","nodeType":"VariableDeclaration","scope":365,"src":"277:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"277:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"261:33:1"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"340:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"340:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"339:9:1"},"scope":366,"src":"223:829:1","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":367,"src":"178:876:1","usedErrors":[]}],"src":"43:1012:1"},"id":1},"contracts/Errors.sol":{"ast":{"absolutePath":"contracts/Errors.sol","exportedSymbols":{"CodeSizeZero":[376],"IncorrectProxyImplementation":[374],"SaltAlreadyInUse":[380],"Unauthorized":[382]},"id":383,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":368,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"43:24:2"},{"errorSelector":"35da6685","id":374,"name":"IncorrectProxyImplementation","nameLocation":"75:28:2","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"current","nameLocation":"112:7:2","nodeType":"VariableDeclaration","scope":374,"src":"104:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"expected","nameLocation":"129:8:2","nodeType":"VariableDeclaration","scope":374,"src":"121:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"121:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103:35:2"},"src":"69:70:2"},{"errorSelector":"5e393b26","id":376,"name":"CodeSizeZero","nameLocation":"213:12:2","nodeType":"ErrorDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"225:2:2"},"src":"207:21:2"},{"errorSelector":"cd3b7fe1","id":380,"name":"SaltAlreadyInUse","nameLocation":"293:16:2","nodeType":"ErrorDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"salt","nameLocation":"318:4:2","nodeType":"VariableDeclaration","scope":380,"src":"310:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"310:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"309:14:2"},"src":"287:37:2"},{"errorSelector":"82b42900","id":382,"name":"Unauthorized","nameLocation":"411:12:2","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"423:2:2"},"src":"405:21:2"}],"src":"43:453:2"},"id":2},"contracts/ProxyChild.sol":{"ast":{"absolutePath":"contracts/ProxyChild.sol","exportedSymbols":{"ProxyChild":[443]},"id":444,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":384,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ProxyChild","contractDependencies":[],"contractKind":"contract","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"68:99:3","text":" @title ProxyChild\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"},"fullyImplemented":true,"id":443,"linearizedBaseContracts":[443],"name":"ProxyChild","nameLocation":"177:10:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"immutable","name":"_factory","nameLocation":"212:8:3","nodeType":"VariableDeclaration","scope":443,"src":"194:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"194:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"_locked","nameLocation":"231:7:3","nodeType":"VariableDeclaration","scope":443,"src":"226:12:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"226:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":395,"nodeType":"Block","src":"268:45:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":391,"name":"senderIsFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"278:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"278:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"278:17:3"},{"id":394,"nodeType":"PlaceholderStatement","src":"305:1:3"}]},"id":396,"name":"onlyFactory","nameLocation":"254:11:3","nodeType":"ModifierDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"265:2:3"},"src":"245:68:3","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"346:121:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":398,"name":"senderIsFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"356:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"356:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"ExpressionStatement","src":"356:17:3"},{"expression":{"arguments":[{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"391:8:3","subExpression":{"id":402,"name":"_locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"392:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a6564206973206c6f636b6564","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"401:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eda0028d2b84a064320a8c84653d976787ced8cf1a171a5159a12a8f7f05984","typeString":"literal_string \"Initialized is locked\""},"value":"Initialized is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eda0028d2b84a064320a8c84653d976787ced8cf1a171a5159a12a8f7f05984","typeString":"literal_string \"Initialized is locked\""}],"id":401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"383:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"383:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"383:42:3"},{"id":407,"nodeType":"PlaceholderStatement","src":"435:1:3"},{"expression":{"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":408,"name":"_locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"456:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"446:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":411,"nodeType":"ExpressionStatement","src":"446:14:3"}]},"id":413,"name":"onlyFactoryOnce","nameLocation":"328:15:3","nodeType":"ModifierDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"343:2:3"},"src":"319:148:3","virtual":false,"visibility":"internal"},{"body":{"id":421,"nodeType":"Block","src":"487:38:3","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"497:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":417,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"508:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"512:6:3","memberName":"sender","nodeType":"MemberAccess","src":"508:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"497:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":420,"nodeType":"ExpressionStatement","src":"497:21:3"}]},"id":422,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"484:2:3"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"487:0:3"},"scope":443,"src":"473:52:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":433,"nodeType":"Block","src":"572:84:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"590:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"594:6:3","memberName":"sender","nodeType":"MemberAccess","src":"590:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":428,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"604:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"590:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"614:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07","typeString":"literal_string \"ChildProxy: only factory allowed\""},"value":"ChildProxy: only factory allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07","typeString":"literal_string \"ChildProxy: only factory allowed\""}],"id":425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"582:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"582:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"ExpressionStatement","src":"582:67:3"}]},"id":434,"implemented":true,"kind":"function","modifiers":[],"name":"senderIsFactory","nameLocation":"540:15:3","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"555:2:3"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"572:0:3"},"scope":443,"src":"531:125:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"714:32:3","statements":[{"expression":{"id":439,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"731:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":438,"id":440,"nodeType":"Return","src":"724:15:3"}]},"functionSelector":"88cc58e4","id":442,"implemented":true,"kind":"function","modifiers":[],"name":"getFactory","nameLocation":"671:10:3","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"681:2:3"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"705:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"705:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"704:9:3"},"scope":443,"src":"662:84:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":444,"src":"168:580:3","usedErrors":[]}],"src":"43:705:3"},"id":3},"contracts/ProxyFactory.sol":{"ast":{"absolutePath":"contracts/ProxyFactory.sol","exportedSymbols":{"Address":[329],"CodeSizeZero":[376],"DeterministicAddress":[366],"IProxy":[1382],"IncorrectProxyImplementation":[374],"Proxy":[1422],"ProxyFactory":[631],"ProxyFactoryBase":[1155],"ProxyImplementationGetter":[1438],"ProxyUpgrader":[1483],"SaltAlreadyInUse":[380],"Unauthorized":[382]},"id":632,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":445,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:4"},{"absolutePath":"contracts/DeterministicAddress.sol","file":"./DeterministicAddress.sol","id":446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":632,"sourceUnit":367,"src":"68:36:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/proxy/Proxy.sol","file":"./proxy/Proxy.sol","id":447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":632,"sourceUnit":1423,"src":"105:27:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ProxyFactoryBase.sol","file":"./ProxyFactoryBase.sol","id":448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":632,"sourceUnit":1156,"src":"133:32:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":450,"name":"ProxyFactoryBase","nameLocations":["355:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1155,"src":"355:16:4"},"id":451,"nodeType":"InheritanceSpecifier","src":"355:16:4"}],"canonicalName":"ProxyFactory","contractDependencies":[1422],"contractKind":"contract","documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"300:30:4","text":"@custom:salt ProxyFactory"},"fullyImplemented":true,"id":631,"linearizedBaseContracts":[631,1155,1438,1483,366],"name":"ProxyFactory","nameLocation":"339:12:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":457,"nodeType":"Block","src":"1001:2:4","statements":[]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"378:585:4","text":" @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n The result of this deployment will be a contract with the proxy contract deployment bytecode with\n its constructor at the head, runtime code in the body and constructor args at the tail. The\n constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n account will be set as the first owner of the factory."},"id":458,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":455,"kind":"baseConstructorSpecifier","modifierName":{"id":454,"name":"ProxyFactoryBase","nameLocations":["982:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1155,"src":"982:16:4"},"nodeType":"ModifierInvocation","src":"982:18:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"979:2:4"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"1001:0:4"},"scope":631,"src":"968:35:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":482,"nodeType":"Block","src":"1554:93:4","statements":[{"assignments":[473],"declarations":[{"constant":false,"id":473,"mutability":"mutable","name":"cdata","nameLocation":"1577:5:4","nodeType":"VariableDeclaration","scope":482,"src":"1564:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":472,"name":"bytes","nodeType":"ElementaryTypeName","src":"1564:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":475,"initialValue":{"id":474,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"1585:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"1564:27:4"},{"expression":{"arguments":[{"id":477,"name":"target_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"1617:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"value_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1626:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":479,"name":"cdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"1634:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":476,"name":"_callAny","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"1608:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,bytes memory) returns (bytes memory)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":471,"id":481,"nodeType":"Return","src":"1601:39:4"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"1009:389:4","text":" @notice callAny allows EOA to call function impersonating the factory address\n @param target_: the address of the contract to be called\n @param value_: value in WEIs to send together the call\n @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\n @return the return of the calls as a byte array"},"functionSelector":"12e6bf6a","id":483,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["1521:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"1521:9:4"},"nodeType":"ModifierInvocation","src":"1521:9:4"}],"name":"callAny","nameLocation":"1412:7:4","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"target_","nameLocation":"1437:7:4","nodeType":"VariableDeclaration","scope":483,"src":"1429:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value_","nameLocation":"1462:6:4","nodeType":"VariableDeclaration","scope":483,"src":"1454:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"cdata_","nameLocation":"1493:6:4","nodeType":"VariableDeclaration","scope":483,"src":"1478:21:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":464,"name":"bytes","nodeType":"ElementaryTypeName","src":"1478:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1419:86:4"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"1540:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":469,"name":"bytes","nodeType":"ElementaryTypeName","src":"1540:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1539:14:4"},"scope":631,"src":"1403:244:4","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":497,"nodeType":"Block","src":"2131:50:4","statements":[{"expression":{"arguments":[{"id":494,"name":"deployCode_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2162:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":493,"name":"_deployCreate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2148:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_address_$","typeString":"function (bytes calldata) returns (address)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":492,"id":496,"nodeType":"Return","src":"2141:33:4"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"1653:361:4","text":" @notice deployCreate allows the owner to deploy raw contracts through the factory using\n non-deterministic address generation (create OpCode)\n @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"},"functionSelector":"27fe1822","id":498,"implemented":true,"kind":"function","modifiers":[{"id":489,"kind":"modifierInvocation","modifierName":{"id":488,"name":"onlyOwner","nameLocations":["2090:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"2090:9:4"},"nodeType":"ModifierInvocation","src":"2090:9:4"}],"name":"deployCreate","nameLocation":"2028:12:4","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"deployCode_","nameLocation":"2065:11:4","nodeType":"VariableDeclaration","scope":498,"src":"2050:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":485,"name":"bytes","nodeType":"ElementaryTypeName","src":"2050:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2040:42:4"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"contractAddr","nameLocation":"2117:12:4","nodeType":"VariableDeclaration","scope":498,"src":"2109:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2108:22:4"},"scope":631,"src":"2019:162:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":523,"nodeType":"Block","src":"2817:159:4","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"newContractAddress","nameLocation":"2835:18:4","nodeType":"VariableDeclaration","scope":523,"src":"2827:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"arguments":[{"id":513,"name":"deployCode_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2870:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":512,"name":"_deployCreate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2856:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_address_$","typeString":"function (bytes calldata) returns (address)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2827:55:4"},{"expression":{"arguments":[{"id":517,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2908:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":518,"name":"newContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2915:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":516,"name":"_addNewContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2892:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2892:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"2892:42:4"},{"expression":{"id":521,"name":"newContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2951:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":509,"id":522,"nodeType":"Return","src":"2944:25:4"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"2187:479:4","text":" @notice allows the owner to deploy contracts through the factory using\n non-deterministic address generation and record the address to external contract mapping\n @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @return contractAddr the deployed contract address"},"functionSelector":"c56ca9ed","id":524,"implemented":true,"kind":"function","modifiers":[{"id":506,"kind":"modifierInvocation","modifierName":{"id":505,"name":"onlyOwner","nameLocations":["2776:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"2776:9:4"},"nodeType":"ModifierInvocation","src":"2776:9:4"}],"name":"deployCreateAndRegister","nameLocation":"2680:23:4","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"deployCode_","nameLocation":"2728:11:4","nodeType":"VariableDeclaration","scope":524,"src":"2713:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"2713:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"salt_","nameLocation":"2757:5:4","nodeType":"VariableDeclaration","scope":524,"src":"2749:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2749:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2703:65:4"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"contractAddr","nameLocation":"2803:12:4","nodeType":"VariableDeclaration","scope":524,"src":"2795:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2795:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2794:22:4"},"scope":631,"src":"2671:305:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":546,"nodeType":"Block","src":"3647:74:4","statements":[{"expression":{"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":538,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3657:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":540,"name":"value_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3687:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":541,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3695:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":542,"name":"deployCode_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3702:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":539,"name":"_deployCreate2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"3672:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes calldata) returns (address)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3657:57:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":545,"nodeType":"ExpressionStatement","src":"3657:57:4"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"2982:492:4","text":" @dev deployCreate2 allows the owner to deploy contracts with deterministic address\n through the factory\n @param value_ endowment value in WEIS for the created contract\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"},"functionSelector":"56f2a761","id":547,"implemented":true,"kind":"function","modifiers":[{"id":534,"kind":"modifierInvocation","modifierName":{"id":533,"name":"onlyOwner","nameLocations":["3606:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"3606:9:4"},"nodeType":"ModifierInvocation","src":"3606:9:4"}],"name":"deployCreate2","nameLocation":"3488:13:4","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"value_","nameLocation":"3519:6:4","nodeType":"VariableDeclaration","scope":547,"src":"3511:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3511:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"salt_","nameLocation":"3543:5:4","nodeType":"VariableDeclaration","scope":547,"src":"3535:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3535:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"deployCode_","nameLocation":"3573:11:4","nodeType":"VariableDeclaration","scope":547,"src":"3558:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":530,"name":"bytes","nodeType":"ElementaryTypeName","src":"3558:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3501:89:4"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"contractAddr","nameLocation":"3633:12:4","nodeType":"VariableDeclaration","scope":547,"src":"3625:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"3625:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3624:22:4"},"scope":631,"src":"3479:242:4","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":563,"nodeType":"Block","src":"4036:51:4","statements":[{"expression":{"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":557,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4046:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":559,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4074:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":558,"name":"_deployProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4061:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) returns (address)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4046:34:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":562,"nodeType":"ExpressionStatement","src":"4046:34:4"}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"3727:206:4","text":" @dev deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n @param salt_ salt used to determine the final determinist address for the deployed contract"},"functionSelector":"39cab472","id":564,"implemented":true,"kind":"function","modifiers":[{"id":553,"kind":"modifierInvocation","modifierName":{"id":552,"name":"onlyOwner","nameLocations":["3995:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"3995:9:4"},"nodeType":"ModifierInvocation","src":"3995:9:4"}],"name":"deployProxy","nameLocation":"3947:11:4","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"salt_","nameLocation":"3976:5:4","nodeType":"VariableDeclaration","scope":564,"src":"3968:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3968:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3958:29:4"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"contractAddr","nameLocation":"4022:12:4","nodeType":"VariableDeclaration","scope":564,"src":"4014:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4013:22:4"},"scope":631,"src":"3938:149:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":579,"nodeType":"Block","src":"4531:62:4","statements":[{"expression":{"arguments":[{"id":575,"name":"contract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"4561:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"initCallData_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"4572:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":574,"name":"_initializeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"4541:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,bytes calldata)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4541:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"4541:45:4"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"4093:317:4","text":" @dev initializeContract allows the owner/delegator to initialize contracts deployed via factory\n @param contract_ address of the contract that will be initialized\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n deployed contract"},"functionSelector":"e1d7a8e4","id":580,"implemented":true,"kind":"function","modifiers":[{"id":572,"kind":"modifierInvocation","modifierName":{"id":571,"name":"onlyOwner","nameLocations":["4521:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"4521:9:4"},"nodeType":"ModifierInvocation","src":"4521:9:4"}],"name":"initializeContract","nameLocation":"4424:18:4","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"contract_","nameLocation":"4460:9:4","nodeType":"VariableDeclaration","scope":580,"src":"4452:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"initCallData_","nameLocation":"4494:13:4","nodeType":"VariableDeclaration","scope":580,"src":"4479:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":568,"name":"bytes","nodeType":"ElementaryTypeName","src":"4479:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4442:71:4"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"4531:0:4"},"scope":631,"src":"4415:178:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":597,"nodeType":"Block","src":"4955:42:4","statements":[{"expression":{"arguments":[{"id":594,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4983:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}],"id":593,"name":"_multiCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4972:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (struct ProxyFactoryBase.MultiCallArgs calldata[] calldata) returns (bytes memory[] memory)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":592,"id":596,"nodeType":"Return","src":"4965:25:4"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"4599:243:4","text":" @dev multiCall allows EOA to make multiple function calls within a single transaction\n impersonating the factory\n @param cdata_: array of hex encoded state with the function calls (function signature + arguments)"},"functionSelector":"248b1701","id":598,"implemented":true,"kind":"function","modifiers":[{"id":588,"kind":"modifierInvocation","modifierName":{"id":587,"name":"onlyOwner","nameLocations":["4920:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"4920:9:4"},"nodeType":"ModifierInvocation","src":"4920:9:4"}],"name":"multiCall","nameLocation":"4856:9:4","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"cdata_","nameLocation":"4900:6:4","nodeType":"VariableDeclaration","scope":598,"src":"4875:31:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs[]"},"typeName":{"baseType":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"MultiCallArgs","nameLocations":["4875:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":657,"src":"4875:13:4"},"referencedDeclaration":657,"src":"4875:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_MultiCallArgs_$657_storage_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs"}},"id":584,"nodeType":"ArrayTypeName","src":"4875:15:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_storage_$dyn_storage_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs[]"}},"visibility":"internal"}],"src":"4865:47:4"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"4939:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":589,"name":"bytes","nodeType":"ElementaryTypeName","src":"4939:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":590,"nodeType":"ArrayTypeName","src":"4939:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4938:16:4"},"scope":631,"src":"4847:150:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":616,"nodeType":"Block","src":"5595:62:4","statements":[{"expression":{"arguments":[{"id":611,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5619:5:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":612,"name":"newImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"5626:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"initCallData_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5636:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":610,"name":"_upgradeProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"5605:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes32,address,bytes calldata)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5605:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"5605:45:4"}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"5003:455:4","text":" @dev upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n @param newImpl_ address of the new contract that contains the new implementation logic\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n new implementation contract"},"functionSelector":"043c9414","id":617,"implemented":true,"kind":"function","modifiers":[{"id":608,"kind":"modifierInvocation","modifierName":{"id":607,"name":"onlyOwner","nameLocations":["5585:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"5585:9:4"},"nodeType":"ModifierInvocation","src":"5585:9:4"}],"name":"upgradeProxy","nameLocation":"5472:12:4","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"salt_","nameLocation":"5502:5:4","nodeType":"VariableDeclaration","scope":617,"src":"5494:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5494:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"newImpl_","nameLocation":"5525:8:4","nodeType":"VariableDeclaration","scope":617,"src":"5517:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"initCallData_","nameLocation":"5558:13:4","nodeType":"VariableDeclaration","scope":617,"src":"5543:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"5543:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5484:93:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"5595:0:4"},"scope":631,"src":"5463:194:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"6004:63:4","statements":[{"expression":{"arguments":[{"id":626,"name":"proxyAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6046:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":625,"name":"__getProxyImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"6021:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":624,"id":628,"nodeType":"Return","src":"6014:46:4"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"5663:237:4","text":" @notice getter function for retrieving the implementation address of an AliceNet proxy.\n @param proxyAddress_ the address of the proxy\n @return the address of implementation/logic contract used by the proxy"},"functionSelector":"204e1c7a","id":630,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyImplementation","nameLocation":"5914:22:4","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"proxyAddress_","nameLocation":"5954:13:4","nodeType":"VariableDeclaration","scope":630,"src":"5946:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"5946:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5936:37:4"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"5995:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"5995:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5994:9:4"},"scope":631,"src":"5905:162:4","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":632,"src":"330:5739:4","usedErrors":[374,376,380]}],"src":"43:6027:4"},"id":4},"contracts/ProxyFactoryBase.sol":{"ast":{"absolutePath":"contracts/ProxyFactoryBase.sol","exportedSymbols":{"Address":[329],"CodeSizeZero":[376],"DeterministicAddress":[366],"IProxy":[1382],"IncorrectProxyImplementation":[374],"Proxy":[1422],"ProxyFactoryBase":[1155],"ProxyImplementationGetter":[1438],"ProxyUpgrader":[1483],"SaltAlreadyInUse":[380],"Unauthorized":[382]},"id":1156,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":633,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:5"},{"absolutePath":"contracts/proxy/Proxy.sol","file":"./proxy/Proxy.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":1423,"src":"68:27:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/DeterministicAddress.sol","file":"./DeterministicAddress.sol","id":635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":367,"src":"96:36:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/proxy/ProxyUpgrader.sol","file":"./proxy/ProxyUpgrader.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":1484,"src":"133:35:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/proxy/IProxy.sol","file":"./proxy/IProxy.sol","id":637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":1383,"src":"169:28:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":330,"src":"198:51:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Errors.sol","file":"contracts/Errors.sol","id":639,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":383,"src":"250:30:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/proxy/ProxyImplementationGetter.sol","file":"contracts/proxy/ProxyImplementationGetter.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1156,"sourceUnit":1439,"src":"281:55:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":642,"name":"DeterministicAddress","nameLocations":["486:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":366,"src":"486:20:5"},"id":643,"nodeType":"InheritanceSpecifier","src":"486:20:5"},{"baseName":{"id":644,"name":"ProxyUpgrader","nameLocations":["512:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1483,"src":"512:13:5"},"id":645,"nodeType":"InheritanceSpecifier","src":"512:13:5"},{"baseName":{"id":646,"name":"ProxyImplementationGetter","nameLocations":["531:25:5"],"nodeType":"IdentifierPath","referencedDeclaration":1438,"src":"531:25:5"},"id":647,"nodeType":"InheritanceSpecifier","src":"531:25:5"}],"canonicalName":"ProxyFactoryBase","contractDependencies":[1422],"contractKind":"contract","documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"338:105:5","text":" @title ProxyFactoryBase\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"},"fullyImplemented":true,"id":1155,"linearizedBaseContracts":[1155,1438,1483,366],"name":"ProxyFactoryBase","nameLocation":"462:16:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":650,"libraryName":{"id":648,"name":"Address","nameLocations":["569:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":329,"src":"569:7:5"},"nodeType":"UsingForDirective","src":"563:26:5","typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"canonicalName":"ProxyFactoryBase.MultiCallArgs","id":657,"members":[{"constant":false,"id":652,"mutability":"mutable","name":"target","nameLocation":"634:6:5","nodeType":"VariableDeclaration","scope":657,"src":"626:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"value","nameLocation":"658:5:5","nodeType":"VariableDeclaration","scope":657,"src":"650:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"650:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"data","nameLocation":"679:4:5","nodeType":"VariableDeclaration","scope":657,"src":"673:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":655,"name":"bytes","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"MultiCallArgs","nameLocation":"602:13:5","nodeType":"StructDefinition","scope":1155,"src":"595:95:5","visibility":"public"},{"constant":false,"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"696:65:5","text":"@dev owner role for privileged access to functions"},"id":660,"mutability":"mutable","name":"_owner","nameLocation":"782:6:5","nodeType":"VariableDeclaration","scope":1155,"src":"766:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"795:57:5","text":"@dev array to store list of contract salts"},"id":664,"mutability":"mutable","name":"_contracts","nameLocation":"875:10:5","nodeType":"VariableDeclaration","scope":1155,"src":"857:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"857:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":663,"nodeType":"ArrayTypeName","src":"857:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"private"},{"constant":false,"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"892:59:5","text":"@dev slot for storing implementation address"},"id":667,"mutability":"mutable","name":"_implementation","nameLocation":"972:15:5","nodeType":"VariableDeclaration","scope":1155,"src":"956:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":669,"mutability":"immutable","name":"_proxyTemplate","nameLocation":"1020:14:5","nodeType":"VariableDeclaration","scope":1155,"src":"994:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":672,"mutability":"constant","name":"_UNIVERSAL_DEPLOY_CODE","nameLocation":"1065:22:5","nodeType":"VariableDeclaration","scope":1155,"src":"1041:67:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":670,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1041:6:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":{"hexValue":"307833383538353833393338363030396633","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1090:18:5","typeDescriptions":{"typeIdentifier":"t_rational_4060092066856700403_by_1","typeString":"int_const 4060092066856700403"},"value":"0x38585839386009f3"},"visibility":"private"},{"constant":false,"id":676,"mutability":"mutable","name":"_contractRegistry","nameLocation":"1152:17:5","nodeType":"VariableDeclaration","scope":1155,"src":"1115:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":675,"keyType":{"id":673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1123:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1115:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"1134:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"1176:64:5","text":"@dev events that notify of contract deployment"},"eventSelector":"e491e278e37782abe0872fe7c7b549cd7b0713d0c5c1e84a81899a5fdf32087b","id":683,"name":"Deployed","nameLocation":"1251:8:5","nodeType":"EventDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"1268:4:5","nodeType":"VariableDeclaration","scope":683,"src":"1260:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1260:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":681,"indexed":false,"mutability":"mutable","name":"contractAddr","nameLocation":"1282:12:5","nodeType":"VariableDeclaration","scope":683,"src":"1274:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:36:5"},"src":"1245:51:5"},{"anonymous":false,"eventSelector":"6cd94ea1c5d9f99038bb4629d8a759399654d3861b73bf3a2b0cf484dae72138","id":687,"name":"DeployedTemplate","nameLocation":"1307:16:5","nodeType":"EventDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"indexed":false,"mutability":"mutable","name":"contractAddr","nameLocation":"1332:12:5","nodeType":"VariableDeclaration","scope":687,"src":"1324:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1323:22:5"},"src":"1301:45:5"},{"anonymous":false,"eventSelector":"e8b9cb7d60827a7d55e211f1382dd0f129adb541af9fe45a09ab4a18b76e7c65","id":691,"name":"DeployedStatic","nameLocation":"1357:14:5","nodeType":"EventDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"indexed":false,"mutability":"mutable","name":"contractAddr","nameLocation":"1380:12:5","nodeType":"VariableDeclaration","scope":691,"src":"1372:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1371:22:5"},"src":"1351:43:5"},{"anonymous":false,"eventSelector":"d3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a","id":695,"name":"DeployedRaw","nameLocation":"1405:11:5","nodeType":"EventDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"indexed":false,"mutability":"mutable","name":"contractAddr","nameLocation":"1425:12:5","nodeType":"VariableDeclaration","scope":695,"src":"1417:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1417:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1416:22:5"},"src":"1399:40:5"},{"anonymous":false,"eventSelector":"06690e5b52be10a3d5820ec875c3dd3327f3077954a09f104201e40e5f7082c6","id":699,"name":"DeployedProxy","nameLocation":"1450:13:5","nodeType":"EventDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"indexed":false,"mutability":"mutable","name":"contractAddr","nameLocation":"1472:12:5","nodeType":"VariableDeclaration","scope":699,"src":"1464:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1464:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1463:22:5"},"src":"1444:42:5"},{"anonymous":false,"eventSelector":"430fbfc2698f4e110d994ecf59c30881703dc7b8cd50bc5f12e4e48d21e144a3","id":707,"name":"UpgradedProxy","nameLocation":"1497:13:5","nodeType":"EventDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"1519:4:5","nodeType":"VariableDeclaration","scope":707,"src":"1511:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1511:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":703,"indexed":false,"mutability":"mutable","name":"proxyAddr","nameLocation":"1533:9:5","nodeType":"VariableDeclaration","scope":707,"src":"1525:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"indexed":false,"mutability":"mutable","name":"newlogicAddr","nameLocation":"1552:12:5","nodeType":"VariableDeclaration","scope":707,"src":"1544:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1510:55:5"},"src":"1491:75:5"},{"body":{"id":726,"nodeType":"Block","src":"1657:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1675:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1679:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1675:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":714,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1697:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ProxyFactoryBase_$1155","typeString":"contract ProxyFactoryBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProxyFactoryBase_$1155","typeString":"contract ProxyFactoryBase"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1689:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:5","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1689:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1675:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1706:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1706:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":719,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1720:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1720:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1706:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1675:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1667:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1667:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"1667:61:5"},{"id":725,"nodeType":"PlaceholderStatement","src":"1738:1:5"}]},"id":727,"name":"onlyOwner","nameLocation":"1645:9:5","nodeType":"ModifierDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"1654:2:5"},"src":"1636:110:5","virtual":false,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"2356:1061:5","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"proxyDeployCode","nameLocation":"2379:15:5","nodeType":"VariableDeclaration","scope":768,"src":"2366:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":731,"name":"bytes","nodeType":"ElementaryTypeName","src":"2366:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":754,"initialValue":{"arguments":[{"id":735,"name":"_UNIVERSAL_DEPLOY_CODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"2475:22:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"expression":{"arguments":[{"id":737,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"2516:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Proxy_$1422_$","typeString":"type(contract Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Proxy_$1422_$","typeString":"type(contract Proxy)"}],"id":736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2511:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Proxy_$1422","typeString":"type(contract Proxy)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2523:12:5","memberName":"creationCode","nodeType":"MemberAccess","src":"2511:24:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":748,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2581:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ProxyFactoryBase_$1155","typeString":"contract ProxyFactoryBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProxyFactoryBase_$1155","typeString":"contract ProxyFactoryBase"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2573:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:5","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2565:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":744,"name":"uint160","nodeType":"ElementaryTypeName","src":"2565:7:5","typeDescriptions":{}}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2557:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2557:7:5","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2549:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2549:7:5","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":733,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2397:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2401:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"2397:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:202:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2366:233:5"},{"assignments":[756],"declarations":[{"constant":false,"id":756,"mutability":"mutable","name":"addr","nameLocation":"2722:4:5","nodeType":"VariableDeclaration","scope":768,"src":"2714:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"2714:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":757,"nodeType":"VariableDeclarationStatement","src":"2714:12:5"},{"AST":{"nodeType":"YulBlock","src":"2761:481:5","statements":[{"nodeType":"YulAssignment","src":"2825:131:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2857:1:5","type":"","value":"0"},{"arguments":[{"name":"proxyDeployCode","nodeType":"YulIdentifier","src":"2880:15:5"},{"kind":"number","nodeType":"YulLiteral","src":"2897:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2876:3:5"},"nodeType":"YulFunctionCall","src":"2876:26:5"},{"arguments":[{"name":"proxyDeployCode","nodeType":"YulIdentifier","src":"2926:15:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2920:5:5"},"nodeType":"YulFunctionCall","src":"2920:22:5"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"2833:6:5"},"nodeType":"YulFunctionCall","src":"2833:123:5"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"2825:4:5"}]},{"body":{"nodeType":"YulBlock","src":"2985:247:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3099:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3105:4:5","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3111:14:5"},"nodeType":"YulFunctionCall","src":"3111:16:5"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"3084:14:5"},"nodeType":"YulFunctionCall","src":"3084:44:5"},"nodeType":"YulExpressionStatement","src":"3084:44:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3195:4:5","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3201:14:5"},"nodeType":"YulFunctionCall","src":"3201:16:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3188:6:5"},"nodeType":"YulFunctionCall","src":"3188:30:5"},"nodeType":"YulExpressionStatement","src":"3188:30:5"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"2979:4:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2972:6:5"},"nodeType":"YulFunctionCall","src":"2972:12:5"},"nodeType":"YulIf","src":"2969:263:5"}]},"evmVersion":"london","externalReferences":[{"declaration":756,"isOffset":false,"isSlot":false,"src":"2825:4:5","valueSize":1},{"declaration":756,"isOffset":false,"isSlot":false,"src":"2979:4:5","valueSize":1},{"declaration":732,"isOffset":false,"isSlot":false,"src":"2880:15:5","valueSize":1},{"declaration":732,"isOffset":false,"isSlot":false,"src":"2926:15:5","valueSize":1}],"flags":["memory-safe"],"id":758,"nodeType":"InlineAssembly","src":"2736:506:5"},{"expression":{"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":759,"name":"_proxyTemplate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"3309:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":760,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"3326:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3309:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"nodeType":"ExpressionStatement","src":"3309:21:5"},{"expression":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":763,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"3391:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":764,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3400:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3404:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3400:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3391:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":767,"nodeType":"ExpressionStatement","src":"3391:19:5"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"1752:585:5","text":" @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\n head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\n The result of this deployment will be a contract with the proxy contract deployment bytecode with\n its constructor at the head, runtime code in the body and constructor args at the tail. The\n constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\n account will be set as the first owner of the factory."},"id":769,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"2353:2:5"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"2356:0:5"},"scope":1155,"src":"2342:1075:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"3593:145:5","statements":[{"AST":{"nodeType":"YulBlock","src":"3612:120:5","statements":[{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3633:14:5"},"nodeType":"YulFunctionCall","src":"3633:16:5"},{"arguments":[{"name":"_implementation.slot","nodeType":"YulIdentifier","src":"3657:20:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3651:5:5"},"nodeType":"YulFunctionCall","src":"3651:27:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3626:6:5"},"nodeType":"YulFunctionCall","src":"3626:53:5"},"nodeType":"YulExpressionStatement","src":"3626:53:5"},{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3699:14:5"},"nodeType":"YulFunctionCall","src":"3699:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"3717:4:5","type":"","value":"0x20"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"3692:6:5"},"nodeType":"YulFunctionCall","src":"3692:30:5"},"nodeType":"YulExpressionStatement","src":"3692:30:5"}]},"evmVersion":"london","externalReferences":[{"declaration":667,"isOffset":false,"isSlot":true,"src":"3657:20:5","suffix":"slot","valueSize":1}],"id":773,"nodeType":"InlineAssembly","src":"3603:129:5"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"3463:105:5","text":" @dev fallback function returns the address of the most recent deployment of a template"},"id":775,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"3581:2:5"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"3593:0:5"},"scope":1155,"src":"3573:165:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":787,"nodeType":"Block","src":"3895:35:5","statements":[{"expression":{"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":783,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"3905:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":784,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"3914:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3905:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":786,"nodeType":"ExpressionStatement","src":"3905:18:5"}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"3744:92:5","text":" @dev Sets the new owner\n @param newOwner_: address of the new owner"},"functionSelector":"13af4035","id":788,"implemented":true,"kind":"function","modifiers":[{"id":781,"kind":"modifierInvocation","modifierName":{"id":780,"name":"onlyOwner","nameLocations":["3885:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"3885:9:5"},"nodeType":"ModifierInvocation","src":"3885:9:5"}],"name":"setOwner","nameLocation":"3850:8:5","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"newOwner_","nameLocation":"3867:9:5","nodeType":"VariableDeclaration","scope":788,"src":"3859:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"3859:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3858:19:5"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"3895:0:5"},"scope":1155,"src":"3841:89:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":800,"nodeType":"Block","src":"4242:38:5","statements":[{"expression":{"arguments":[{"id":797,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"4267:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":796,"name":"_lookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4259:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4259:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":795,"id":799,"nodeType":"Return","src":"4252:21:5"}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"3936:232:5","text":" @notice lookup allows anyone interacting with the contract to get the address of contract specified\n by its salt_\n @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file"},"functionSelector":"f39ec1f7","id":801,"implemented":true,"kind":"function","modifiers":[],"name":"lookup","nameLocation":"4182:6:5","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"salt_","nameLocation":"4197:5:5","nodeType":"VariableDeclaration","scope":801,"src":"4189:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4189:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4188:15:5"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"4233:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"4233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4232:9:5"},"scope":1155,"src":"4173:107:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":809,"nodeType":"Block","src":"4448:39:5","statements":[{"expression":{"id":807,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4465:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":806,"id":808,"nodeType":"Return","src":"4458:22:5"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"4286:98:5","text":" @dev getImplementation is public getter function for the _owner account address"},"functionSelector":"aaf10f42","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"4398:17:5","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"4415:2:5"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":810,"src":"4439:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"4439:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4438:9:5"},"scope":1155,"src":"4389:98:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":820,"nodeType":"Block","src":"4689:32:5","statements":[{"expression":{"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":816,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4699:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":817,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4708:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4699:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":819,"nodeType":"ExpressionStatement","src":"4699:15:5"}]},"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"4493:137:5","text":" @dev owner is public getter function for the _owner account address\n @return owner_ address of the owner account"},"functionSelector":"8da5cb5b","id":821,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"4644:5:5","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"4649:2:5"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"owner_","nameLocation":"4681:6:5","nodeType":"VariableDeclaration","scope":821,"src":"4673:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4673:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4672:16:5"},"scope":1155,"src":"4635:86:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":832,"nodeType":"Block","src":"5063:40:5","statements":[{"expression":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":828,"name":"contracts_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5073:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":829,"name":"_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5086:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"src":"5073:23:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":831,"nodeType":"ExpressionStatement","src":"5073:23:5"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"4727:260:5","text":" @dev contracts is public getter that gets the array of salts associated with all the contracts\n deployed with this factory\n @return contracts_ the array of salts associated with all the contracts deployed with this\n factory"},"functionSelector":"6c0f79b6","id":833,"implemented":true,"kind":"function","modifiers":[],"name":"contracts","nameLocation":"5001:9:5","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"5010:2:5"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"contracts_","nameLocation":"5051:10:5","nodeType":"VariableDeclaration","scope":833,"src":"5034:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5034:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":825,"nodeType":"ArrayTypeName","src":"5034:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5033:29:5"},"scope":1155,"src":"4992:111:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":842,"nodeType":"Block","src":"5353:41:5","statements":[{"expression":{"expression":{"id":839,"name":"_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5370:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5381:6:5","memberName":"length","nodeType":"MemberAccess","src":"5370:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":838,"id":841,"nodeType":"Return","src":"5363:24:5"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"5109:182:5","text":" @dev getNumContracts getter function for retrieving the total number of contracts\n deployed with this factory\n @return the length of the contract array"},"functionSelector":"cfe10b30","id":843,"implemented":true,"kind":"function","modifiers":[],"name":"getNumContracts","nameLocation":"5305:15:5","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"5320:2:5"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"5344:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5343:9:5"},"scope":1155,"src":"5296:98:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":861,"nodeType":"Block","src":"5870:69:5","statements":[{"expression":{"arguments":[{"id":857,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5917:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":858,"name":"value_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5925:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":855,"name":"target_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5887:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5895:21:5","memberName":"functionCallWithValue","nodeType":"MemberAccess","referencedDeclaration":109,"src":"5887:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5887:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":854,"id":860,"nodeType":"Return","src":"5880:52:5"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"5400:331:5","text":" @dev _callAny allows EOA to call function impersonating the factory address\n @param target_: the address of the contract to be called\n @param value_: value in WEIs to send together the call\n @param cdata_: Hex encoded data with function signature + arguments of the target function to be called"},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_callAny","nameLocation":"5745:8:5","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"target_","nameLocation":"5771:7:5","nodeType":"VariableDeclaration","scope":862,"src":"5763:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"5763:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"value_","nameLocation":"5796:6:5","nodeType":"VariableDeclaration","scope":862,"src":"5788:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"cdata_","nameLocation":"5825:6:5","nodeType":"VariableDeclaration","scope":862,"src":"5812:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":849,"name":"bytes","nodeType":"ElementaryTypeName","src":"5812:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5753:84:5"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"5856:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"5856:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5855:14:5"},"scope":1155,"src":"5736:203:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"6413:589:5","statements":[{"AST":{"nodeType":"YulBlock","src":"6448:444:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6502:26:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6523:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6517:5:5"},"nodeType":"YulFunctionCall","src":"6517:11:5"},"variables":[{"name":"basePtr","nodeType":"YulTypedName","src":"6506:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6541:18:5","value":{"name":"basePtr","nodeType":"YulIdentifier","src":"6552:7:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"6545:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6662:3:5"},{"name":"deployCode_.offset","nodeType":"YulIdentifier","src":"6667:18:5"},{"name":"deployCode_.length","nodeType":"YulIdentifier","src":"6687:18:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6649:12:5"},"nodeType":"YulFunctionCall","src":"6649:57:5"},"nodeType":"YulExpressionStatement","src":"6649:57:5"},{"nodeType":"YulAssignment","src":"6780:35:5","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6791:3:5"},{"name":"deployCode_.length","nodeType":"YulIdentifier","src":"6796:18:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6787:3:5"},"nodeType":"YulFunctionCall","src":"6787:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6780:3:5"}]},{"nodeType":"YulAssignment","src":"6829:53:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6852:1:5","type":"","value":"0"},{"name":"basePtr","nodeType":"YulIdentifier","src":"6855:7:5"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6868:3:5"},{"name":"basePtr","nodeType":"YulIdentifier","src":"6873:7:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6864:3:5"},"nodeType":"YulFunctionCall","src":"6864:17:5"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"6845:6:5"},"nodeType":"YulFunctionCall","src":"6845:37:5"},"variableNames":[{"name":"contractAddr","nodeType":"YulIdentifier","src":"6829:12:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":868,"isOffset":false,"isSlot":false,"src":"6829:12:5","valueSize":1},{"declaration":865,"isOffset":false,"isSlot":false,"src":"6687:18:5","suffix":"length","valueSize":1},{"declaration":865,"isOffset":false,"isSlot":false,"src":"6796:18:5","suffix":"length","valueSize":1},{"declaration":865,"isOffset":true,"isSlot":false,"src":"6667:18:5","suffix":"offset","valueSize":1}],"flags":["memory-safe"],"id":870,"nodeType":"InlineAssembly","src":"6423:469:5"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":873,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6935:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":872,"name":"_extCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6922:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6922:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6921:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":871,"name":"_codeSizeZeroRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"6901:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6901:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"6901:54:5"},{"eventCall":{"arguments":[{"id":881,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6982:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":880,"name":"DeployedRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"6970:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6970:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"EmitStatement","src":"6965:30:5"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"5945:358:5","text":" @dev _deployCreate allows the owner to deploy raw contracts through the factory using\n non-deterministic address generation (create OpCode)\n @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_deployCreate","nameLocation":"6317:13:5","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"deployCode_","nameLocation":"6355:11:5","nodeType":"VariableDeclaration","scope":885,"src":"6340:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"6340:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6330:42:5"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"contractAddr","nameLocation":"6399:12:5","nodeType":"VariableDeclaration","scope":885,"src":"6391:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"6391:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6390:22:5"},"scope":1155,"src":"6308:694:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":917,"nodeType":"Block","src":"7658:688:5","statements":[{"AST":{"nodeType":"YulBlock","src":"7677:457:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7731:26:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7752:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7746:5:5"},"nodeType":"YulFunctionCall","src":"7746:11:5"},"variables":[{"name":"basePtr","nodeType":"YulTypedName","src":"7735:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7770:18:5","value":{"name":"basePtr","nodeType":"YulIdentifier","src":"7781:7:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"7774:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7891:3:5"},{"name":"deployCode_.offset","nodeType":"YulIdentifier","src":"7896:18:5"},{"name":"deployCode_.length","nodeType":"YulIdentifier","src":"7916:18:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7878:12:5"},"nodeType":"YulFunctionCall","src":"7878:57:5"},"nodeType":"YulExpressionStatement","src":"7878:57:5"},{"nodeType":"YulAssignment","src":"8009:35:5","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8020:3:5"},{"name":"deployCode_.length","nodeType":"YulIdentifier","src":"8025:18:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8016:3:5"},"nodeType":"YulFunctionCall","src":"8016:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"8009:3:5"}]},{"nodeType":"YulAssignment","src":"8058:66:5","value":{"arguments":[{"name":"value_","nodeType":"YulIdentifier","src":"8082:6:5"},{"name":"basePtr","nodeType":"YulIdentifier","src":"8090:7:5"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8103:3:5"},{"name":"basePtr","nodeType":"YulIdentifier","src":"8108:7:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8099:3:5"},"nodeType":"YulFunctionCall","src":"8099:17:5"},{"name":"salt_","nodeType":"YulIdentifier","src":"8118:5:5"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"8074:7:5"},"nodeType":"YulFunctionCall","src":"8074:50:5"},"variableNames":[{"name":"contractAddr","nodeType":"YulIdentifier","src":"8058:12:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":895,"isOffset":false,"isSlot":false,"src":"8058:12:5","valueSize":1},{"declaration":892,"isOffset":false,"isSlot":false,"src":"7916:18:5","suffix":"length","valueSize":1},{"declaration":892,"isOffset":false,"isSlot":false,"src":"8025:18:5","suffix":"length","valueSize":1},{"declaration":892,"isOffset":true,"isSlot":false,"src":"7896:18:5","suffix":"offset","valueSize":1},{"declaration":890,"isOffset":false,"isSlot":false,"src":"8118:5:5","valueSize":1},{"declaration":888,"isOffset":false,"isSlot":false,"src":"8082:6:5","valueSize":1}],"id":897,"nodeType":"InlineAssembly","src":"7668:466:5"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":900,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"8177:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":899,"name":"_extCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8164:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8164:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8194:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8164:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8163:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":898,"name":"_codeSizeZeroRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"8143:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":906,"nodeType":"ExpressionStatement","src":"8143:54:5"},{"expression":{"arguments":[{"id":910,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8293:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":907,"name":"_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"8277:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8288:4:5","memberName":"push","nodeType":"MemberAccess","src":"8277:15:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8277:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"8277:22:5"},{"eventCall":{"arguments":[{"id":914,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"8326:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"DeployedRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"8314:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"EmitStatement","src":"8309:30:5"}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"7008:492:5","text":" @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\n factory\n @param value_ endowment value in WEIS for the created contract\n @param salt_ salt used to determine the final determinist address for the deployed contract\n @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\n constructors' args (if any)\n @return contractAddr the deployed contract address"},"id":918,"implemented":true,"kind":"function","modifiers":[],"name":"_deployCreate2","nameLocation":"7514:14:5","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"value_","nameLocation":"7546:6:5","nodeType":"VariableDeclaration","scope":918,"src":"7538:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"7538:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"salt_","nameLocation":"7570:5:5","nodeType":"VariableDeclaration","scope":918,"src":"7562:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7562:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"deployCode_","nameLocation":"7600:11:5","nodeType":"VariableDeclaration","scope":918,"src":"7585:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":891,"name":"bytes","nodeType":"ElementaryTypeName","src":"7585:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7528:89:5"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"contractAddr","nameLocation":"7644:12:5","nodeType":"VariableDeclaration","scope":918,"src":"7636:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7635:22:5"},"scope":1155,"src":"7505:841:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":949,"nodeType":"Block","src":"8655:689:5","statements":[{"assignments":[927],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"proxyTemplate","nameLocation":"8673:13:5","nodeType":"VariableDeclaration","scope":949,"src":"8665:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"8665:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":929,"initialValue":{"id":928,"name":"_proxyTemplate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8689:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8665:38:5"},{"AST":{"nodeType":"YulBlock","src":"8722:464:5","statements":[{"expression":{"arguments":[{"name":"_implementation.slot","nodeType":"YulIdentifier","src":"8806:20:5"},{"name":"proxyTemplate","nodeType":"YulIdentifier","src":"8828:13:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8799:6:5"},"nodeType":"YulFunctionCall","src":"8799:43:5"},"nodeType":"YulExpressionStatement","src":"8799:43:5"},{"nodeType":"YulVariableDeclaration","src":"8855:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8872:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8866:5:5"},"nodeType":"YulFunctionCall","src":"8866:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8859:3:5","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8897:4:5","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8907:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8912:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8903:3:5"},"nodeType":"YulFunctionCall","src":"8903:14:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8890:6:5"},"nodeType":"YulFunctionCall","src":"8890:28:5"},"nodeType":"YulExpressionStatement","src":"8890:28:5"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9027:3:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9052:2:5","type":"","value":"72"},{"kind":"number","nodeType":"YulLiteral","src":"9056:48:5","type":"","value":"0x6020363636335afa1536363636515af43d36363e3d36f3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9048:3:5"},"nodeType":"YulFunctionCall","src":"9048:57:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9003:6:5"},"nodeType":"YulFunctionCall","src":"9003:116:5"},"nodeType":"YulExpressionStatement","src":"9003:116:5"},{"nodeType":"YulAssignment","src":"9132:44:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9156:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9159:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"9164:4:5","type":"","value":"0x17"},{"name":"salt_","nodeType":"YulIdentifier","src":"9170:5:5"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"9148:7:5"},"nodeType":"YulFunctionCall","src":"9148:28:5"},"variableNames":[{"name":"contractAddr","nodeType":"YulIdentifier","src":"9132:12:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":667,"isOffset":false,"isSlot":true,"src":"8806:20:5","suffix":"slot","valueSize":1},{"declaration":924,"isOffset":false,"isSlot":false,"src":"9132:12:5","valueSize":1},{"declaration":927,"isOffset":false,"isSlot":false,"src":"8828:13:5","valueSize":1},{"declaration":921,"isOffset":false,"isSlot":false,"src":"9170:5:5","valueSize":1}],"id":930,"nodeType":"InlineAssembly","src":"8713:473:5"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":933,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9229:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":932,"name":"_extCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"9216:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9216:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9246:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9216:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9215:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":931,"name":"_codeSizeZeroRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"9195:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"9195:54:5"},{"expression":{"arguments":[{"id":941,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"9275:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":942,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9282:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":940,"name":"_addNewContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"9259:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"9259:36:5"},{"eventCall":{"arguments":[{"id":946,"name":"contractAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9324:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":945,"name":"DeployedProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9310:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9310:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"EmitStatement","src":"9305:32:5"}]},"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"8352:207:5","text":" @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\n @param salt_ salt used to determine the final determinist address for the deployed contract"},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"_deployProxy","nameLocation":"8573:12:5","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"salt_","nameLocation":"8603:5:5","nodeType":"VariableDeclaration","scope":950,"src":"8595:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8595:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8585:29:5"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"contractAddr","nameLocation":"8641:12:5","nodeType":"VariableDeclaration","scope":950,"src":"8633:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"8633:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8632:22:5"},"scope":1155,"src":"8564:780:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"9782:852:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9817:811:5","statements":[{"body":{"nodeType":"YulBlock","src":"9871:747:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9889:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9906:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9900:5:5"},"nodeType":"YulFunctionCall","src":"9900:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"9893:3:5","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9935:4:5","type":"","value":"0x40"},{"arguments":[{"name":"initCallData_.length","nodeType":"YulIdentifier","src":"9945:20:5"},{"name":"ptr","nodeType":"YulIdentifier","src":"9967:3:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9941:3:5"},"nodeType":"YulFunctionCall","src":"9941:30:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9928:6:5"},"nodeType":"YulFunctionCall","src":"9928:44:5"},"nodeType":"YulExpressionStatement","src":"9928:44:5"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10002:3:5"},{"name":"initCallData_.offset","nodeType":"YulIdentifier","src":"10007:20:5"},{"name":"initCallData_.length","nodeType":"YulIdentifier","src":"10029:20:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9989:12:5"},"nodeType":"YulFunctionCall","src":"9989:61:5"},"nodeType":"YulExpressionStatement","src":"9989:61:5"},{"body":{"nodeType":"YulBlock","src":"10371:233:5","statements":[{"nodeType":"YulAssignment","src":"10393:18:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10406:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10400:5:5"},"nodeType":"YulFunctionCall","src":"10400:11:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"10393:3:5"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10439:4:5","type":"","value":"0x40"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"10449:14:5"},"nodeType":"YulFunctionCall","src":"10449:16:5"},{"name":"ptr","nodeType":"YulIdentifier","src":"10467:3:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10445:3:5"},"nodeType":"YulFunctionCall","src":"10445:26:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10432:6:5"},"nodeType":"YulFunctionCall","src":"10432:40:5"},"nodeType":"YulExpressionStatement","src":"10432:40:5"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10508:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"10513:4:5","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"10519:14:5"},"nodeType":"YulFunctionCall","src":"10519:16:5"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"10493:14:5"},"nodeType":"YulFunctionCall","src":"10493:43:5"},"nodeType":"YulExpressionStatement","src":"10493:43:5"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10564:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"10569:14:5"},"nodeType":"YulFunctionCall","src":"10569:16:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10557:6:5"},"nodeType":"YulFunctionCall","src":"10557:29:5"},"nodeType":"YulExpressionStatement","src":"10557:29:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"10128:3:5"},"nodeType":"YulFunctionCall","src":"10128:5:5"},{"name":"contract_","nodeType":"YulIdentifier","src":"10159:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10194:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"10221:3:5"},{"name":"initCallData_.length","nodeType":"YulIdentifier","src":"10250:20:5"},{"kind":"number","nodeType":"YulLiteral","src":"10296:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"10326:4:5","type":"","value":"0x00"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"10098:4:5"},"nodeType":"YulFunctionCall","src":"10098:254:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10070:6:5"},"nodeType":"YulFunctionCall","src":"10070:300:5"},"nodeType":"YulIf","src":"10067:537:5"}]},"condition":{"arguments":[{"arguments":[{"name":"initCallData_.length","nodeType":"YulIdentifier","src":"9848:20:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9841:6:5"},"nodeType":"YulFunctionCall","src":"9841:28:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9834:6:5"},"nodeType":"YulFunctionCall","src":"9834:36:5"},"nodeType":"YulIf","src":"9831:787:5"}]},"evmVersion":"london","externalReferences":[{"declaration":953,"isOffset":false,"isSlot":false,"src":"10159:9:5","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"10029:20:5","suffix":"length","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"10250:20:5","suffix":"length","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"9848:20:5","suffix":"length","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"9945:20:5","suffix":"length","valueSize":1},{"declaration":955,"isOffset":true,"isSlot":false,"src":"10007:20:5","suffix":"offset","valueSize":1}],"flags":["memory-safe"],"id":958,"nodeType":"InlineAssembly","src":"9792:836:5"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"9350:318:5","text":" @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\n @param contract_ address of the contract that will be initialized\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n deployed contract"},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeContract","nameLocation":"9682:19:5","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"contract_","nameLocation":"9719:9:5","nodeType":"VariableDeclaration","scope":960,"src":"9711:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"9711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"initCallData_","nameLocation":"9753:13:5","nodeType":"VariableDeclaration","scope":960,"src":"9738:28:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":954,"name":"bytes","nodeType":"ElementaryTypeName","src":"9738:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9701:71:5"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"9782:0:5"},"scope":1155,"src":"9673:961:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1012,"nodeType":"Block","src":"11000:265:5","statements":[{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":971,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11010:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":975,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11032:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11039:6:5","memberName":"length","nodeType":"MemberAccess","src":"11032:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11020:11:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":972,"name":"bytes","nodeType":"ElementaryTypeName","src":"11024:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":973,"nodeType":"ArrayTypeName","src":"11024:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11020:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"11010:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":979,"nodeType":"ExpressionStatement","src":"11010:36:5"},{"body":{"id":1010,"nodeType":"Block","src":"11100:159:5","statements":[{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":991,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11114:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":993,"indexExpression":{"id":992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11122:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11114:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":995,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11153:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}},"id":997,"indexExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11160:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11153:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_MultiCallArgs_$657_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11163:6:5","memberName":"target","nodeType":"MemberAccess","referencedDeclaration":652,"src":"11153:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":999,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11187:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}},"id":1001,"indexExpression":{"id":1000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11194:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11187:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_MultiCallArgs_$657_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11197:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":654,"src":"11187:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1003,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11220:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}},"id":1005,"indexExpression":{"id":1004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11227:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11220:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_MultiCallArgs_$657_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11230:4:5","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":656,"src":"11220:14:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":994,"name":"_callAny","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11127:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,bytes memory) returns (bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11127:121:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"11114:134:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1009,"nodeType":"ExpressionStatement","src":"11114:134:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11076:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":985,"name":"cdata_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11080:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs calldata[] calldata"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11087:6:5","memberName":"length","nodeType":"MemberAccess","src":"11080:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11076:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"initializationExpression":{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"i","nameLocation":"11069:1:5","nodeType":"VariableDeclaration","scope":1011,"src":"11061:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"11061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":983,"initialValue":{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11061:13:5"},"loopExpression":{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11095:3:5","subExpression":{"id":988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ExpressionStatement","src":"11095:3:5"},"nodeType":"ForStatement","src":"11056:203:5"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"10640:246:5","text":" @notice _multiCall allows EOA to make multiple function calls within a single transaction\n impersonating the factory\n @param cdata_: array of abi encoded data with the function calls (function signature + arguments)"},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"_multiCall","nameLocation":"10900:10:5","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"cdata_","nameLocation":"10945:6:5","nodeType":"VariableDeclaration","scope":1013,"src":"10920:31:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs[]"},"typeName":{"baseType":{"id":963,"nodeType":"UserDefinedTypeName","pathNode":{"id":962,"name":"MultiCallArgs","nameLocations":["10920:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":657,"src":"10920:13:5"},"referencedDeclaration":657,"src":"10920:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_MultiCallArgs_$657_storage_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs"}},"id":964,"nodeType":"ArrayTypeName","src":"10920:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiCallArgs_$657_storage_$dyn_storage_ptr","typeString":"struct ProxyFactoryBase.MultiCallArgs[]"}},"visibility":"internal"}],"src":"10910:47:5"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"results","nameLocation":"10991:7:5","nodeType":"VariableDeclaration","scope":1013,"src":"10976:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"10976:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":968,"nodeType":"ArrayTypeName","src":"10976:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10975:24:5"},"scope":1155,"src":"10891:374:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"11857:538:5","statements":[{"assignments":[1024],"declarations":[{"constant":false,"id":1024,"mutability":"mutable","name":"proxy","nameLocation":"11875:5:5","nodeType":"VariableDeclaration","scope":1066,"src":"11867:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"11867:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1033,"initialValue":{"arguments":[{"id":1027,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"11947:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1030,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11974:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ProxyFactoryBase_$1155","typeString":"contract ProxyFactoryBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProxyFactoryBase_$1155","typeString":"contract ProxyFactoryBase"}],"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11966:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"11966:7:5","typeDescriptions":{}}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1025,"name":"DeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"11883:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DeterministicAddress_$366_$","typeString":"type(contract DeterministicAddress)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11904:29:5","memberName":"getMetamorphicContractAddress","nodeType":"MemberAccess","referencedDeclaration":365,"src":"11883:50:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,address) pure returns (address)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11883:106:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11867:122:5"},{"expression":{"arguments":[{"id":1035,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"12009:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"newImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"12016:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"__upgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"11999:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11999:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"ExpressionStatement","src":"11999:26:5"},{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"currentImplementation","nameLocation":"12043:21:5","nodeType":"VariableDeclaration","scope":1066,"src":"12035:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"12035:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1044,"initialValue":{"arguments":[{"id":1042,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"12092:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1041,"name":"__getProxyImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"12067:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12067:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12035:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"currentImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12112:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1046,"name":"newImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"12137:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12112:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1054,"nodeType":"IfStatement","src":"12108:178:5","trueBody":{"id":1053,"nodeType":"Block","src":"12147:139:5","statements":[{"errorCall":{"arguments":[{"id":1049,"name":"currentImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12214:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"newImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"12253:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1048,"name":"IncorrectProxyImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"12168:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12168:107:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"RevertStatement","src":"12161:114:5"}]}},{"expression":{"arguments":[{"id":1056,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"12315:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"initCallData_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"12322:13:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1055,"name":"_initializeContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"12295:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,bytes calldata)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12295:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"12295:41:5"},{"eventCall":{"arguments":[{"id":1061,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"12365:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1062,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"12372:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"newImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"12379:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"UpgradedProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"12351:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12351:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"EmitStatement","src":"12346:42:5"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"11271:456:5","text":" @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\n @param salt_ salt used to determine the final determinist address for the deployed proxy contract\n @param newImpl_ address of the new contract that contains the new implementation logic\n @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\n new implementation contract"},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeProxy","nameLocation":"11741:13:5","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"salt_","nameLocation":"11772:5:5","nodeType":"VariableDeclaration","scope":1067,"src":"11764:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11764:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"newImpl_","nameLocation":"11795:8:5","nodeType":"VariableDeclaration","scope":1067,"src":"11787:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"11787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"initCallData_","nameLocation":"11828:13:5","nodeType":"VariableDeclaration","scope":1067,"src":"11813:28:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1019,"name":"bytes","nodeType":"ElementaryTypeName","src":"11813:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11754:93:5"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"11857:0:5"},"scope":1155,"src":"11732:663:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"12598:203:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1075,"name":"_contractRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"12612:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":1077,"indexExpression":{"id":1076,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12630:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12612:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12648:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12640:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"12640:7:5","typeDescriptions":{}}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12640:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12612:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"nodeType":"IfStatement","src":"12608:99:5","trueBody":{"id":1087,"nodeType":"Block","src":"12652:55:5","statements":[{"errorCall":{"arguments":[{"id":1084,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12690:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1083,"name":"SaltAlreadyInUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"12673:16:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12673:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"RevertStatement","src":"12666:30:5"}]}},{"expression":{"arguments":[{"id":1092,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12732:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1089,"name":"_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"12716:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12727:4:5","memberName":"push","nodeType":"MemberAccess","src":"12716:15:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12716:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"12716:22:5"},{"expression":{"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1095,"name":"_contractRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"12748:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":1097,"indexExpression":{"id":1096,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12766:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12748:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1098,"name":"newContractAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"12775:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12748:46:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1100,"nodeType":"ExpressionStatement","src":"12748:46:5"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"12401:92:5","text":"Internal function to add a new address and \"pseudo\" salt to the externalContractRegistry"},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_addNewContract","nameLocation":"12507:15:5","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"salt_","nameLocation":"12540:5:5","nodeType":"VariableDeclaration","scope":1102,"src":"12532:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12532:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"newContractAddress_","nameLocation":"12563:19:5","nodeType":"VariableDeclaration","scope":1102,"src":"12555:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12522:66:5"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"12598:0:5"},"scope":1155,"src":"12498:303:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1113,"nodeType":"Block","src":"12974:114:5","statements":[{"AST":{"nodeType":"YulBlock","src":"13009:52:5","statements":[{"nodeType":"YulAssignment","src":"13023:28:5","value":{"arguments":[{"name":"target_","nodeType":"YulIdentifier","src":"13043:7:5"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"13031:11:5"},"nodeType":"YulFunctionCall","src":"13031:20:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13023:4:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1108,"isOffset":false,"isSlot":false,"src":"13023:4:5","valueSize":1},{"declaration":1105,"isOffset":false,"isSlot":false,"src":"13043:7:5","valueSize":1}],"flags":["memory-safe"],"id":1110,"nodeType":"InlineAssembly","src":"12984:77:5"},{"expression":{"id":1111,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13077:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1109,"id":1112,"nodeType":"Return","src":"13070:11:5"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"12807:72:5","text":" @notice Aux function to return the external code size"},"id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"_extCodeSize","nameLocation":"12893:12:5","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"target_","nameLocation":"12923:7:5","nodeType":"VariableDeclaration","scope":1114,"src":"12915:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"12915:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12905:31:5"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"size","nameLocation":"12968:4:5","nodeType":"VariableDeclaration","scope":1114,"src":"12960:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"12960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12959:14:5"},"scope":1155,"src":"12884:204:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"13348:48:5","statements":[{"expression":{"baseExpression":{"id":1121,"name":"_contractRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"13365:17:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":1123,"indexExpression":{"id":1122,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"13383:5:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13365:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1120,"id":1124,"nodeType":"Return","src":"13358:31:5"}]},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"_lookup","nameLocation":"13293:7:5","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"salt_","nameLocation":"13309:5:5","nodeType":"VariableDeclaration","scope":1126,"src":"13301:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13301:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13300:15:5"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"13339:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"13339:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13338:9:5"},"scope":1155,"src":"13284:112:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"13600:74:5","statements":[{"condition":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13614:6:5","subExpression":{"id":1132,"name":"isOk_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"13615:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"nodeType":"IfStatement","src":"13610:58:5","trueBody":{"id":1137,"nodeType":"Block","src":"13622:46:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1134,"name":"Unauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"13643:12:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13643:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"RevertStatement","src":"13636:21:5"}]}}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"13402:145:5","text":" @notice _requireAuth reverts if false and returns unauthorized error message\n @param isOk_ boolean false to cause revert"},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_requireAuth","nameLocation":"13561:12:5","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"isOk_","nameLocation":"13579:5:5","nodeType":"VariableDeclaration","scope":1140,"src":"13574:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1128,"name":"bool","nodeType":"ElementaryTypeName","src":"13574:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13573:12:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"13600:0:5"},"scope":1155,"src":"13552:122:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"13886:74:5","statements":[{"condition":{"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13900:6:5","subExpression":{"id":1146,"name":"isOk_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13901:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"13896:58:5","trueBody":{"id":1151,"nodeType":"Block","src":"13908:46:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1148,"name":"CodeSizeZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"13929:12:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13929:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"RevertStatement","src":"13922:21:5"}]}}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"13680:146:5","text":" @notice _codeSizeZeroRevert reverts if false and returns csize0 error message\n @param isOk_ boolean false to cause revert"},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"_codeSizeZeroRevert","nameLocation":"13840:19:5","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"isOk_","nameLocation":"13865:5:5","nodeType":"VariableDeclaration","scope":1154,"src":"13860:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1142,"name":"bool","nodeType":"ElementaryTypeName","src":"13860:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13859:12:5"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"13886:0:5"},"scope":1155,"src":"13831:129:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1156,"src":"444:13518:5","usedErrors":[]}],"src":"43:13920:5"},"id":5},"contracts/mocks/MockContract.sol":{"ast":{"absolutePath":"contracts/mocks/MockContract.sol","exportedSymbols":{"Mock":[1232],"ProxyChild":[443]},"id":1233,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1157,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:6"},{"absolutePath":"contracts/ProxyChild.sol","file":"../ProxyChild.sol","id":1158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":444,"src":"69:27:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1160,"name":"ProxyChild","nameLocations":["217:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":443,"src":"217:10:6"},"id":1161,"nodeType":"InheritanceSpecifier","src":"217:10:6"}],"canonicalName":"Mock","contractDependencies":[],"contractKind":"contract","documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"98:101:6","text":"@dev This mock inheirts the ProxyChild contract to simplify constructor / initialization logic"},"fullyImplemented":true,"id":1232,"linearizedBaseContracts":[1232,443],"name":"Mock","nameLocation":"209:4:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1163,"mutability":"immutable","name":"_version","nameLocation":"252:8:6","nodeType":"VariableDeclaration","scope":1232,"src":"234:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"immutable","name":"_anotherAnotherMock","nameLocation":"284:19:6","nodeType":"VariableDeclaration","scope":1232,"src":"266:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"266:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"immutable","name":"_anotherMock","nameLocation":"327:12:6","nodeType":"VariableDeclaration","scope":1232,"src":"309:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"d28d8852","id":1169,"mutability":"mutable","name":"_name","nameLocation":"360:5:6","nodeType":"VariableDeclaration","scope":1232,"src":"346:19:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"346:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"ced7b2e3","id":1171,"mutability":"mutable","name":"_a","nameLocation":"386:2:6","nodeType":"VariableDeclaration","scope":1232,"src":"371:17:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1192,"nodeType":"Block","src":"476:124:6","statements":[{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1180,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"486:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1181,"name":"version_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"497:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"486:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1183,"nodeType":"ExpressionStatement","src":"486:19:6"},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1184,"name":"_anotherMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"515:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"anotherMock_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"530:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"515:27:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1187,"nodeType":"ExpressionStatement","src":"515:27:6"},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1188,"name":"_anotherAnotherMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"552:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1189,"name":"anotherAnotherMock_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"574:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"552:41:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1191,"nodeType":"ExpressionStatement","src":"552:41:6"}]},"id":1193,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"version_","nameLocation":"415:8:6","nodeType":"VariableDeclaration","scope":1193,"src":"407:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"anotherMock_","nameLocation":"433:12:6","nodeType":"VariableDeclaration","scope":1193,"src":"425:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"anotherAnotherMock_","nameLocation":"455:19:6","nodeType":"VariableDeclaration","scope":1193,"src":"447:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"406:69:6"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[],"src":"476:0:6"},"scope":1232,"src":"395:205:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1210,"nodeType":"Block","src":"678:47:6","statements":[{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1202,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"688:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1203,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"696:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"688:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1205,"nodeType":"ExpressionStatement","src":"688:13:6"},{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1206,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"711:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1207,"name":"a_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"716:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"711:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1209,"nodeType":"ExpressionStatement","src":"711:7:6"}]},"functionSelector":"8beaf7d7","id":1211,"implemented":true,"kind":"function","modifiers":[{"id":1200,"kind":"modifierInvocation","modifierName":{"id":1199,"name":"onlyFactory","nameLocations":["666:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":396,"src":"666:11:6"},"nodeType":"ModifierInvocation","src":"666:11:6"}],"name":"initialize","nameLocation":"615:10:6","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"name_","nameLocation":"640:5:6","nodeType":"VariableDeclaration","scope":1211,"src":"626:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1194,"name":"string","nodeType":"ElementaryTypeName","src":"626:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"a_","nameLocation":"655:2:6","nodeType":"VariableDeclaration","scope":1211,"src":"647:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"625:33:6"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"678:0:6"},"scope":1232,"src":"606:119:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1220,"nodeType":"Block","src":"764:24:6","statements":[{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"774:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1217,"name":"a_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"779:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"774:7:6"}]},"functionSelector":"ee919d50","id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"setA","nameLocation":"740:4:6","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"a_","nameLocation":"753:2:6","nodeType":"VariableDeclaration","scope":1221,"src":"745:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:12:6"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"764:0:6"},"scope":1232,"src":"731:57:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1230,"nodeType":"Block","src":"840:30:6","statements":[{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1226,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"850:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1227,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"858:5:6","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"850:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1229,"nodeType":"ExpressionStatement","src":"850:13:6"}]},"functionSelector":"c4784fd4","id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"setMsg","nameLocation":"803:6:6","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"name_","nameLocation":"826:5:6","nodeType":"VariableDeclaration","scope":1231,"src":"810:21:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1222,"name":"string","nodeType":"ElementaryTypeName","src":"810:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"809:23:6"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"840:0:6"},"scope":1232,"src":"794:76:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1233,"src":"200:672:6","usedErrors":[]}],"src":"43:830:6"},"id":6},"contracts/mocks/MockContract2.sol":{"ast":{"absolutePath":"contracts/mocks/MockContract2.sol","exportedSymbols":{"Mock2":[1318]},"id":1319,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1234,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Mock2","contractDependencies":[],"contractKind":"contract","documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"69:94:7","text":"@dev This mock does not inheirt the ProxyChild contract and implements the logic itself"},"fullyImplemented":true,"id":1318,"linearizedBaseContracts":[1318],"name":"Mock2","nameLocation":"173:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1237,"mutability":"immutable","name":"_version","nameLocation":"203:8:7","nodeType":"VariableDeclaration","scope":1318,"src":"185:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"185:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"immutable","name":"_anotherMock","nameLocation":"235:12:7","nodeType":"VariableDeclaration","scope":1318,"src":"217:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"217:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"immutable","name":"_factory","nameLocation":"271:8:7","nodeType":"VariableDeclaration","scope":1318,"src":"253:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"d28d8852","id":1243,"mutability":"mutable","name":"_name","nameLocation":"300:5:7","nodeType":"VariableDeclaration","scope":1318,"src":"286:19:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"286:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"ced7b2e3","id":1245,"mutability":"mutable","name":"_a","nameLocation":"326:2:7","nodeType":"VariableDeclaration","scope":1318,"src":"311:17:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1256,"nodeType":"Block","src":"358:95:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"376:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"380:6:7","memberName":"sender","nodeType":"MemberAccess","src":"376:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1250,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"390:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"376:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"400:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07","typeString":"literal_string \"ChildProxy: only factory allowed\""},"value":"ChildProxy: only factory allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07","typeString":"literal_string \"ChildProxy: only factory allowed\""}],"id":1247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"368:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"368:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"ExpressionStatement","src":"368:67:7"},{"id":1255,"nodeType":"PlaceholderStatement","src":"445:1:7"}]},"id":1257,"name":"onlyFactory","nameLocation":"344:11:7","nodeType":"ModifierDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"355:2:7"},"src":"335:118:7","virtual":false,"visibility":"internal"},{"body":{"id":1278,"nodeType":"Block","src":"529:102:7","statements":[{"expression":{"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1266,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"539:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1267,"name":"factory_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"550:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"539:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1269,"nodeType":"ExpressionStatement","src":"539:19:7"},{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1270,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"568:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1271,"name":"version_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"579:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"568:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"568:19:7"},{"expression":{"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"_anotherMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"597:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1275,"name":"anotherMock_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"612:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"597:27:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1277,"nodeType":"ExpressionStatement","src":"597:27:7"}]},"id":1279,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"factory_","nameLocation":"479:8:7","nodeType":"VariableDeclaration","scope":1279,"src":"471:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"471:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"version_","nameLocation":"497:8:7","nodeType":"VariableDeclaration","scope":1279,"src":"489:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"anotherMock_","nameLocation":"515:12:7","nodeType":"VariableDeclaration","scope":1279,"src":"507:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"470:58:7"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"529:0:7"},"scope":1318,"src":"459:172:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1296,"nodeType":"Block","src":"709:47:7","statements":[{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1288,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"719:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1289,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"727:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"719:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1291,"nodeType":"ExpressionStatement","src":"719:13:7"},{"expression":{"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1292,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"742:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1293,"name":"a_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"747:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"742:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1295,"nodeType":"ExpressionStatement","src":"742:7:7"}]},"functionSelector":"8beaf7d7","id":1297,"implemented":true,"kind":"function","modifiers":[{"id":1286,"kind":"modifierInvocation","modifierName":{"id":1285,"name":"onlyFactory","nameLocations":["697:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1257,"src":"697:11:7"},"nodeType":"ModifierInvocation","src":"697:11:7"}],"name":"initialize","nameLocation":"646:10:7","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"name_","nameLocation":"671:5:7","nodeType":"VariableDeclaration","scope":1297,"src":"657:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1280,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"a_","nameLocation":"686:2:7","nodeType":"VariableDeclaration","scope":1297,"src":"678:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:33:7"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"709:0:7"},"scope":1318,"src":"637:119:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1306,"nodeType":"Block","src":"795:24:7","statements":[{"expression":{"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1302,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"805:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1303,"name":"a_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"810:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"805:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1305,"nodeType":"ExpressionStatement","src":"805:7:7"}]},"functionSelector":"ee919d50","id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"setA","nameLocation":"771:4:7","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"a_","nameLocation":"784:2:7","nodeType":"VariableDeclaration","scope":1307,"src":"776:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"775:12:7"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"795:0:7"},"scope":1318,"src":"762:57:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1316,"nodeType":"Block","src":"871:30:7","statements":[{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1312,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"881:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1313,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"889:5:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"881:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1315,"nodeType":"ExpressionStatement","src":"881:13:7"}]},"functionSelector":"c4784fd4","id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"setMsg","nameLocation":"834:6:7","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"name_","nameLocation":"857:5:7","nodeType":"VariableDeclaration","scope":1317,"src":"841:21:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1308,"name":"string","nodeType":"ElementaryTypeName","src":"841:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"840:23:7"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"871:0:7"},"scope":1318,"src":"825:76:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1319,"src":"164:739:7","usedErrors":[]}],"src":"43:860:7"},"id":7},"contracts/mocks/MockContract3.sol":{"ast":{"absolutePath":"contracts/mocks/MockContract3.sol","exportedSymbols":{"Mock3":[1374]},"id":1375,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Mock3","contractDependencies":[],"contractKind":"contract","documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"69:88:8","text":"@dev This mock does not inheirt the ProxyChild contract and no initalize function"},"fullyImplemented":true,"id":1374,"linearizedBaseContracts":[1374],"name":"Mock3","nameLocation":"167:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1323,"mutability":"immutable","name":"_version","nameLocation":"197:8:8","nodeType":"VariableDeclaration","scope":1374,"src":"179:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"immutable","name":"_anotherMock","nameLocation":"229:12:8","nodeType":"VariableDeclaration","scope":1374,"src":"211:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"immutable","name":"_factory","nameLocation":"265:8:8","nodeType":"VariableDeclaration","scope":1374,"src":"247:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"d28d8852","id":1329,"mutability":"mutable","name":"_name","nameLocation":"294:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"280:19:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1328,"name":"string","nodeType":"ElementaryTypeName","src":"280:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"ced7b2e3","id":1331,"mutability":"mutable","name":"_a","nameLocation":"320:2:8","nodeType":"VariableDeclaration","scope":1374,"src":"305:17:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"305:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1352,"nodeType":"Block","src":"399:102:8","statements":[{"expression":{"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1340,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"409:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1341,"name":"factory_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"420:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"409:19:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1343,"nodeType":"ExpressionStatement","src":"409:19:8"},{"expression":{"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1344,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"438:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1345,"name":"version_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"449:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"438:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1347,"nodeType":"ExpressionStatement","src":"438:19:8"},{"expression":{"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1348,"name":"_anotherMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"467:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1349,"name":"anotherMock_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"482:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"467:27:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1351,"nodeType":"ExpressionStatement","src":"467:27:8"}]},"id":1353,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"factory_","nameLocation":"349:8:8","nodeType":"VariableDeclaration","scope":1353,"src":"341:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"version_","nameLocation":"367:8:8","nodeType":"VariableDeclaration","scope":1353,"src":"359:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"anotherMock_","nameLocation":"385:12:8","nodeType":"VariableDeclaration","scope":1353,"src":"377:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"377:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"340:58:8"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"399:0:8"},"scope":1374,"src":"329:172:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1362,"nodeType":"Block","src":"540:24:8","statements":[{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1358,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"550:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1359,"name":"a_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"555:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"550:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"nodeType":"ExpressionStatement","src":"550:7:8"}]},"functionSelector":"ee919d50","id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"setA","nameLocation":"516:4:8","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"a_","nameLocation":"529:2:8","nodeType":"VariableDeclaration","scope":1363,"src":"521:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"520:12:8"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[],"src":"540:0:8"},"scope":1374,"src":"507:57:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1372,"nodeType":"Block","src":"616:30:8","statements":[{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1368,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"626:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1369,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"634:5:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"626:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1371,"nodeType":"ExpressionStatement","src":"626:13:8"}]},"functionSelector":"c4784fd4","id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"setMsg","nameLocation":"579:6:8","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"name_","nameLocation":"602:5:8","nodeType":"VariableDeclaration","scope":1373,"src":"586:21:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1364,"name":"string","nodeType":"ElementaryTypeName","src":"586:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"585:23:8"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"616:0:8"},"scope":1374,"src":"570:76:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1375,"src":"158:490:8","usedErrors":[]}],"src":"43:605:8"},"id":8},"contracts/proxy/IProxy.sol":{"ast":{"absolutePath":"contracts/proxy/IProxy.sol","exportedSymbols":{"IProxy":[1382]},"id":1383,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1376,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"43:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IProxy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382],"name":"IProxy","nameLocation":"79:6:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0cbcae70","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"getImplementationAddress","nameLocation":"101:24:9","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"125:2:9"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"151:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"151:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"150:9:9"},"scope":1382,"src":"92:68:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"69:93:9","usedErrors":[]}],"src":"43:119:9"},"id":9},"contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"contracts/proxy/Proxy.sol","exportedSymbols":{"DeterministicAddress":[366],"Proxy":[1422]},"id":1423,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"43:24:10"},{"absolutePath":"contracts/DeterministicAddress.sol","file":"contracts/DeterministicAddress.sol","id":1385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1423,"sourceUnit":367,"src":"69:44:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"241:1162:10","text":" @notice Proxy is a delegatecall reverse proxy implementation that is secure against function\n collision.\n The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in\n it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded\n using the internal mechanism. This does not prevent the implementation from upgrading the proxy\n by changing this slot.\n The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the\n factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>);\n The proxy can return its implementation address by calling it using the format\n abi.encodePacked(hex'0cbcae703c');\n All other calls will be proxied through to the implementation.\n The implementation can not be locked using the internal upgrade mechanism due to the fact that\n the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must\n carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the\n proxy.\n @dev RUN OPTIMIZER OFF"},"fullyImplemented":true,"id":1422,"linearizedBaseContracts":[1422],"name":"Proxy","nameLocation":"1413:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1388,"mutability":"immutable","name":"_factory","nameLocation":"1451:8:10","nodeType":"VariableDeclaration","scope":1422,"src":"1425:34:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1396,"nodeType":"Block","src":"1480:38:10","statements":[{"expression":{"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1391,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1490:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1392,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1501:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1505:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1501:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1490:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1395,"nodeType":"ExpressionStatement","src":"1490:21:10"}]},"id":1397,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"1477:2:10"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"1480:0:10"},"scope":1422,"src":"1466:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1403,"nodeType":"Block","src":"1551:28:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1400,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1561:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1561:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"ExpressionStatement","src":"1561:11:10"}]},"id":1404,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"1531:2:10"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"1551:0:10"},"scope":1422,"src":"1524:55:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1410,"nodeType":"Block","src":"1613:28:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1407,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1623:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"1623:11:10"}]},"id":1411,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"1593:2:10"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"1613:0:10"},"scope":1422,"src":"1585:56:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1420,"nodeType":"Block","src":"1725:4265:10","statements":[{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"factory","nameLocation":"1839:7:10","nodeType":"VariableDeclaration","scope":1420,"src":"1831:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1418,"initialValue":{"id":1417,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1849:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1831:26:10"},{"AST":{"nodeType":"YulBlock","src":"1892:4092:10","statements":[{"body":{"nodeType":"YulBlock","src":"2189:1049:10","statements":[{"nodeType":"YulBlock","src":"2207:1017:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2229:44:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2249:3:10","type":"","value":"216"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2267:4:10","type":"","value":"0x00"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2254:12:10"},"nodeType":"YulFunctionCall","src":"2254:18:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2245:3:10"},"nodeType":"YulFunctionCall","src":"2245:28:10"},"variables":[{"name":"selector","nodeType":"YulTypedName","src":"2233:8:10","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2398:176:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2424:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2441:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2435:5:10"},"nodeType":"YulFunctionCall","src":"2435:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2428:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2478:3:10"},{"arguments":[],"functionName":{"name":"getImplementationAddress","nodeType":"YulIdentifier","src":"2483:24:10"},"nodeType":"YulFunctionCall","src":"2483:26:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:10"},"nodeType":"YulFunctionCall","src":"2471:39:10"},"nodeType":"YulExpressionStatement","src":"2471:39:10"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2542:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"2547:4:10","type":"","value":"0x14"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"2535:6:10"},"nodeType":"YulFunctionCall","src":"2535:17:10"},"nodeType":"YulExpressionStatement","src":"2535:17:10"}]},"nodeType":"YulCase","src":"2380:194:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2385:12:10","type":"","value":"0x0cbcae703c"}},{"body":{"nodeType":"YulBlock","src":"2663:431:10","statements":[{"body":{"nodeType":"YulBlock","src":"2790:85:10","statements":[{"expression":{"arguments":[{"hexValue":"756e617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"2830:14:10","type":"","value":"unauthorized"},{"kind":"number","nodeType":"YulLiteral","src":"2846:2:10","type":"","value":"12"}],"functionName":{"name":"revertASM","nodeType":"YulIdentifier","src":"2820:9:10"},"nodeType":"YulFunctionCall","src":"2820:29:10"},"nodeType":"YulExpressionStatement","src":"2820:29:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"caller","nodeType":"YulIdentifier","src":"2770:6:10"},"nodeType":"YulFunctionCall","src":"2770:8:10"},{"name":"factory","nodeType":"YulIdentifier","src":"2780:7:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2767:2:10"},"nodeType":"YulFunctionCall","src":"2767:21:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2760:6:10"},"nodeType":"YulFunctionCall","src":"2760:29:10"},"nodeType":"YulIf","src":"2757:118:10"},{"expression":{"arguments":[],"functionName":{"name":"setImplementationAddress","nodeType":"YulIdentifier","src":"3046:24:10"},"nodeType":"YulFunctionCall","src":"3046:26:10"},"nodeType":"YulExpressionStatement","src":"3046:26:10"}]},"nodeType":"YulCase","src":"2645:449:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2650:12:10","type":"","value":"0xca11c0de11"}},{"body":{"nodeType":"YulBlock","src":"3123:83:10","statements":[{"expression":{"arguments":[{"hexValue":"66756e6374696f6e206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"3159:20:10","type":"","value":"function not found"},{"kind":"number","nodeType":"YulLiteral","src":"3181:2:10","type":"","value":"18"}],"functionName":{"name":"revertASM","nodeType":"YulIdentifier","src":"3149:9:10"},"nodeType":"YulFunctionCall","src":"3149:35:10"},"nodeType":"YulExpressionStatement","src":"3149:35:10"}]},"nodeType":"YulCase","src":"3115:91:10","value":"default"}],"expression":{"name":"selector","nodeType":"YulIdentifier","src":"2301:8:10"},"nodeType":"YulSwitch","src":"2294:912:10"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"2141:12:10"},"nodeType":"YulFunctionCall","src":"2141:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2157:4:10","type":"","value":"0x25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2138:2:10"},"nodeType":"YulFunctionCall","src":"2138:24:10"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"2167:12:10"},"nodeType":"YulFunctionCall","src":"2167:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2183:3:10","type":"","value":"0x5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2164:2:10"},"nodeType":"YulFunctionCall","src":"2164:23:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2135:2:10"},"nodeType":"YulFunctionCall","src":"2135:53:10"},"nodeType":"YulIf","src":"2132:1106:10"},{"expression":{"arguments":[],"functionName":{"name":"passthrough","nodeType":"YulIdentifier","src":"3321:11:10"},"nodeType":"YulFunctionCall","src":"3321:13:10"},"nodeType":"YulExpressionStatement","src":"3321:13:10"},{"body":{"nodeType":"YulBlock","src":"3430:489:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3448:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3465:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3459:5:10"},"nodeType":"YulFunctionCall","src":"3459:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3452:3:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3487:19:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3503:3:10"},"variables":[{"name":"startPtr","nodeType":"YulTypedName","src":"3491:8:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3530:3:10"},{"hexValue":"08c379a0","kind":"string","nodeType":"YulLiteral","src":"3535:13:10","type":""}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:10"},"nodeType":"YulFunctionCall","src":"3523:26:10"},"nodeType":"YulExpressionStatement","src":"3523:26:10"},{"nodeType":"YulAssignment","src":"3601:20:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3612:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3617:3:10","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3608:3:10"},"nodeType":"YulFunctionCall","src":"3608:13:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"3601:3:10"}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3645:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3650:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3638:6:10"},"nodeType":"YulFunctionCall","src":"3638:17:10"},"nodeType":"YulExpressionStatement","src":"3638:17:10"},{"nodeType":"YulAssignment","src":"3672:21:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3683:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3688:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:10"},"nodeType":"YulFunctionCall","src":"3679:14:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:10"}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3717:3:10"},{"name":"len","nodeType":"YulIdentifier","src":"3722:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3710:6:10"},"nodeType":"YulFunctionCall","src":"3710:16:10"},"nodeType":"YulExpressionStatement","src":"3710:16:10"},{"nodeType":"YulAssignment","src":"3760:21:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3771:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3776:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:10"},"nodeType":"YulFunctionCall","src":"3767:14:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"3760:3:10"}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3805:3:10"},{"name":"str","nodeType":"YulIdentifier","src":"3810:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3798:6:10"},"nodeType":"YulFunctionCall","src":"3798:16:10"},"nodeType":"YulExpressionStatement","src":"3798:16:10"},{"nodeType":"YulAssignment","src":"3831:21:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3842:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3847:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3838:3:10"},"nodeType":"YulFunctionCall","src":"3838:14:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"3831:3:10"}]},{"expression":{"arguments":[{"name":"startPtr","nodeType":"YulIdentifier","src":"3876:8:10"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3890:3:10"},{"name":"startPtr","nodeType":"YulIdentifier","src":"3895:8:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3886:3:10"},"nodeType":"YulFunctionCall","src":"3886:18:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3869:6:10"},"nodeType":"YulFunctionCall","src":"3869:36:10"},"nodeType":"YulExpressionStatement","src":"3869:36:10"}]},"name":"revertASM","nodeType":"YulFunctionDefinition","parameters":[{"name":"str","nodeType":"YulTypedName","src":"3420:3:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"3425:3:10","type":""}],"src":"3401:518:10"},{"body":{"nodeType":"YulBlock","src":"3981:270:10","statements":[{"nodeType":"YulAssignment","src":"3999:238:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4036:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4099:4:10","type":"","value":"0x00"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4095:3:10"},"nodeType":"YulFunctionCall","src":"4095:9:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4089:5:10"},"nodeType":"YulFunctionCall","src":"4089:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"4131:66:10","type":"","value":"0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4060:3:10"},"nodeType":"YulFunctionCall","src":"4060:159:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4011:3:10"},"nodeType":"YulFunctionCall","src":"4011:226:10"},"variableNames":[{"name":"implAddr","nodeType":"YulIdentifier","src":"3999:8:10"}]}]},"name":"getImplementationAddress","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"implAddr","nodeType":"YulTypedName","src":"3972:8:10","type":""}],"src":"3933:318:10"},{"body":{"nodeType":"YulBlock","src":"4387:546:10","statements":[{"body":{"nodeType":"YulBlock","src":"4532:70:10","statements":[{"expression":{"arguments":[{"hexValue":"757064617465206c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"4564:15:10","type":"","value":"update locked"},{"kind":"number","nodeType":"YulLiteral","src":"4581:2:10","type":"","value":"13"}],"functionName":{"name":"revertASM","nodeType":"YulIdentifier","src":"4554:9:10"},"nodeType":"YulFunctionCall","src":"4554:30:10"},"nodeType":"YulExpressionStatement","src":"4554:30:10"}]},"condition":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4480:3:10","type":"","value":"160"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4495:4:10","type":"","value":"0x00"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4491:3:10"},"nodeType":"YulFunctionCall","src":"4491:9:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4485:5:10"},"nodeType":"YulFunctionCall","src":"4485:16:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4476:3:10"},"nodeType":"YulFunctionCall","src":"4476:26:10"},{"kind":"number","nodeType":"YulLiteral","src":"4504:26:10","type":"","value":"0xca11c0de15dead10deadc0de"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4473:2:10"},"nodeType":"YulFunctionCall","src":"4473:58:10"},"nodeType":"YulIf","src":"4470:132:10"},{"nodeType":"YulVariableDeclaration","src":"4678:51:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4697:2:10","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4705:2:10","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4722:4:10","type":"","value":"0x05"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4709:12:10"},"nodeType":"YulFunctionCall","src":"4709:18:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4701:3:10"},"nodeType":"YulFunctionCall","src":"4701:27:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4693:3:10"},"nodeType":"YulFunctionCall","src":"4693:36:10"},"variables":[{"name":"newImpl","nodeType":"YulTypedName","src":"4682:7:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4800:4:10","type":"","value":"0x00"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4796:3:10"},"nodeType":"YulFunctionCall","src":"4796:9:10"},{"name":"newImpl","nodeType":"YulIdentifier","src":"4807:7:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4789:6:10"},"nodeType":"YulFunctionCall","src":"4789:26:10"},"nodeType":"YulExpressionStatement","src":"4789:26:10"},{"expression":{"arguments":[],"functionName":{"name":"stop","nodeType":"YulIdentifier","src":"4913:4:10"},"nodeType":"YulFunctionCall","src":"4913:6:10"},"nodeType":"YulExpressionStatement","src":"4913:6:10"}]},"name":"setImplementationAddress","nodeType":"YulFunctionDefinition","src":"4351:582:10"},{"body":{"nodeType":"YulBlock","src":"5056:918:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5074:36:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5104:4:10","type":"","value":"0x00"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5100:3:10"},"nodeType":"YulFunctionCall","src":"5100:9:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5094:5:10"},"nodeType":"YulFunctionCall","src":"5094:16:10"},"variables":[{"name":"logicAddress","nodeType":"YulTypedName","src":"5078:12:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5151:70:10","statements":[{"expression":{"arguments":[{"hexValue":"6c6f676963206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"5183:15:10","type":"","value":"logic not set"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:10","type":"","value":"13"}],"functionName":{"name":"revertASM","nodeType":"YulIdentifier","src":"5173:9:10"},"nodeType":"YulFunctionCall","src":"5173:30:10"},"nodeType":"YulExpressionStatement","src":"5173:30:10"}]},"condition":{"arguments":[{"name":"logicAddress","nodeType":"YulIdentifier","src":"5137:12:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5130:6:10"},"nodeType":"YulFunctionCall","src":"5130:20:10"},"nodeType":"YulIf","src":"5127:94:10"},{"nodeType":"YulVariableDeclaration","src":"5282:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5299:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5293:5:10"},"nodeType":"YulFunctionCall","src":"5293:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"5286:3:10","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5389:4:10","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5399:3:10"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5404:12:10"},"nodeType":"YulFunctionCall","src":"5404:14:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:10"},"nodeType":"YulFunctionCall","src":"5395:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5382:6:10"},"nodeType":"YulFunctionCall","src":"5382:38:10"},"nodeType":"YulExpressionStatement","src":"5382:38:10"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5495:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5500:4:10","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5506:12:10"},"nodeType":"YulFunctionCall","src":"5506:14:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5482:12:10"},"nodeType":"YulFunctionCall","src":"5482:39:10"},"nodeType":"YulExpressionStatement","src":"5482:39:10"},{"nodeType":"YulVariableDeclaration","src":"5538:215:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"5583:3:10"},"nodeType":"YulFunctionCall","src":"5583:5:10"},{"name":"logicAddress","nodeType":"YulIdentifier","src":"5610:12:10"},{"name":"ptr","nodeType":"YulIdentifier","src":"5644:3:10"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5669:12:10"},"nodeType":"YulFunctionCall","src":"5669:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"5705:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"5731:4:10","type":"","value":"0x00"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"5549:12:10"},"nodeType":"YulFunctionCall","src":"5549:204:10"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"5542:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5785:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5790:4:10","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5796:14:10"},"nodeType":"YulFunctionCall","src":"5796:16:10"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"5770:14:10"},"nodeType":"YulFunctionCall","src":"5770:43:10"},"nodeType":"YulExpressionStatement","src":"5770:43:10"},{"body":{"nodeType":"YulBlock","src":"5845:69:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5874:3:10"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5879:14:10"},"nodeType":"YulFunctionCall","src":"5879:16:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5867:6:10"},"nodeType":"YulFunctionCall","src":"5867:29:10"},"nodeType":"YulExpressionStatement","src":"5867:29:10"}]},"condition":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5840:3:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5833:6:10"},"nodeType":"YulFunctionCall","src":"5833:11:10"},"nodeType":"YulIf","src":"5830:84:10"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5938:3:10"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5943:14:10"},"nodeType":"YulFunctionCall","src":"5943:16:10"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"5931:6:10"},"nodeType":"YulFunctionCall","src":"5931:29:10"},"nodeType":"YulExpressionStatement","src":"5931:29:10"}]},"name":"passthrough","nodeType":"YulFunctionDefinition","src":"5033:941:10"}]},"evmVersion":"london","externalReferences":[{"declaration":1416,"isOffset":false,"isSlot":false,"src":"2780:7:10","valueSize":1}],"flags":["memory-safe"],"id":1419,"nodeType":"InlineAssembly","src":"1867:4117:10"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"1647:43:10","text":"Delegates calls to proxy implementation"},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"1704:9:10","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"1713:2:10"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[],"src":"1725:0:10"},"scope":1422,"src":"1695:4295:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1423,"src":"1404:4588:10","usedErrors":[]}],"src":"43:5950:10"},"id":10},"contracts/proxy/ProxyImplementationGetter.sol":{"ast":{"absolutePath":"contracts/proxy/ProxyImplementationGetter.sol","exportedSymbols":{"ProxyImplementationGetter":[1438]},"id":1439,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1424,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"43:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ProxyImplementationGetter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1438,"linearizedBaseContracts":[1438],"name":"ProxyImplementationGetter","nameLocation":"87:25:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1436,"nodeType":"Block","src":"227:589:11","statements":[{"assignments":[1432],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"cdata","nameLocation":"250:5:11","nodeType":"VariableDeclaration","scope":1436,"src":"237:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"237:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1434,"initialValue":{"hexValue":"0cbcae703c","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"258:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6189b8312ed2b64210690c230297df9fd883270b4adfa539b05ca734142aed8","typeString":"literal_string hex\"0cbcae703c\""}},"nodeType":"VariableDeclarationStatement","src":"237:36:11"},{"AST":{"nodeType":"YulBlock","src":"308:502:11","statements":[{"nodeType":"YulVariableDeclaration","src":"322:194:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"365:3:11"},"nodeType":"YulFunctionCall","src":"365:5:11"},{"name":"_proxy","nodeType":"YulIdentifier","src":"388:6:11"},{"arguments":[{"name":"cdata","nodeType":"YulIdentifier","src":"416:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"423:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"412:3:11"},"nodeType":"YulFunctionCall","src":"412:16:11"},{"arguments":[{"name":"cdata","nodeType":"YulIdentifier","src":"452:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"446:5:11"},"nodeType":"YulFunctionCall","src":"446:12:11"},{"kind":"number","nodeType":"YulLiteral","src":"476:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"498:4:11","type":"","value":"0x00"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"337:10:11"},"nodeType":"YulFunctionCall","src":"337:179:11"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"326:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"529:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"540:5:11"},"nodeType":"YulFunctionCall","src":"540:11:11"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"533:3:11","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"571:4:11","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"581:3:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"586:14:11"},"nodeType":"YulFunctionCall","src":"586:16:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:11"},"nodeType":"YulFunctionCall","src":"577:26:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"564:6:11"},"nodeType":"YulFunctionCall","src":"564:40:11"},"nodeType":"YulExpressionStatement","src":"564:40:11"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"632:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"637:4:11","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"643:14:11"},"nodeType":"YulFunctionCall","src":"643:16:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"617:14:11"},"nodeType":"YulFunctionCall","src":"617:43:11"},"nodeType":"YulExpressionStatement","src":"617:43:11"},{"body":{"nodeType":"YulBlock","src":"692:61:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"717:3:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"722:14:11"},"nodeType":"YulFunctionCall","src":"722:16:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"710:6:11"},"nodeType":"YulFunctionCall","src":"710:29:11"},"nodeType":"YulExpressionStatement","src":"710:29:11"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"683:7:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"676:6:11"},"nodeType":"YulFunctionCall","src":"676:15:11"},"nodeType":"YulIf","src":"673:80:11"},{"nodeType":"YulAssignment","src":"766:34:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"785:2:11","type":"","value":"96"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"795:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"789:5:11"},"nodeType":"YulFunctionCall","src":"789:10:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"781:3:11"},"nodeType":"YulFunctionCall","src":"781:19:11"},"variableNames":[{"name":"implAddress","nodeType":"YulIdentifier","src":"766:11:11"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1426,"isOffset":false,"isSlot":false,"src":"388:6:11","valueSize":1},{"declaration":1432,"isOffset":false,"isSlot":false,"src":"416:5:11","valueSize":1},{"declaration":1432,"isOffset":false,"isSlot":false,"src":"452:5:11","valueSize":1},{"declaration":1429,"isOffset":false,"isSlot":false,"src":"766:11:11","valueSize":1}],"flags":["memory-safe"],"id":1435,"nodeType":"InlineAssembly","src":"283:527:11"}]},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"__getProxyImplementation","nameLocation":"128:24:11","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"_proxy","nameLocation":"170:6:11","nodeType":"VariableDeclaration","scope":1437,"src":"162:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"162:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"152:30:11"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"implAddress","nameLocation":"214:11:11","nodeType":"VariableDeclaration","scope":1437,"src":"206:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"205:21:11"},"scope":1438,"src":"119:697:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1439,"src":"69:749:11","usedErrors":[]}],"src":"43:776:11"},"id":11},"contracts/proxy/ProxyInternalUpgradeLock.sol":{"ast":{"absolutePath":"contracts/proxy/ProxyInternalUpgradeLock.sol","exportedSymbols":{"ProxyInternalUpgradeLock":[1447]},"id":1448,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1440,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"43:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ProxyInternalUpgradeLock","contractDependencies":[],"contractKind":"contract","documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"69:144:12","text":" @title ProxyInternalUpgradeLock\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)"},"fullyImplemented":true,"id":1447,"linearizedBaseContracts":[1447],"name":"ProxyInternalUpgradeLock","nameLocation":"232:24:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1445,"nodeType":"Block","src":"304:455:12","statements":[{"AST":{"nodeType":"YulBlock","src":"339:414:12","statements":[{"nodeType":"YulVariableDeclaration","src":"353:25:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"373:4:12","type":"","value":"0x00"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"369:3:12"},"nodeType":"YulFunctionCall","src":"369:9:12"},"variables":[{"name":"implSlot","nodeType":"YulTypedName","src":"357:8:12","type":""}]},{"expression":{"arguments":[{"name":"implSlot","nodeType":"YulIdentifier","src":"415:8:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"465:66:12","type":"","value":"0xca11c0de15dead10deadc0de0000000000000000000000000000000000000000"},{"arguments":[{"arguments":[{"name":"implSlot","nodeType":"YulIdentifier","src":"588:8:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"582:5:12"},"nodeType":"YulFunctionCall","src":"582:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"623:66:12","type":"","value":"0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"553:3:12"},"nodeType":"YulFunctionCall","src":"553:158:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"441:2:12"},"nodeType":"YulFunctionCall","src":"441:288:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"391:6:12"},"nodeType":"YulFunctionCall","src":"391:352:12"},"nodeType":"YulExpressionStatement","src":"391:352:12"}]},"evmVersion":"london","externalReferences":[],"flags":["memory-safe"],"id":1444,"nodeType":"InlineAssembly","src":"314:439:12"}]},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"__lockImplementation","nameLocation":"272:20:12","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"292:2:12"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"304:0:12"},"scope":1447,"src":"263:496:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1448,"src":"214:547:12","usedErrors":[]}],"src":"43:719:12"},"id":12},"contracts/proxy/ProxyInternalUpgradeUnlock.sol":{"ast":{"absolutePath":"contracts/proxy/ProxyInternalUpgradeUnlock.sol","exportedSymbols":{"ProxyInternalUpgradeUnlock":[1456]},"id":1457,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1449,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"43:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ProxyInternalUpgradeUnlock","contractDependencies":[],"contractKind":"contract","documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"69:146:13","text":" @title ProxyInternalUpgradeUnlock\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)"},"fullyImplemented":true,"id":1456,"linearizedBaseContracts":[1456],"name":"ProxyInternalUpgradeUnlock","nameLocation":"234:26:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1454,"nodeType":"Block","src":"310:313:13","statements":[{"AST":{"nodeType":"YulBlock","src":"345:272:13","statements":[{"nodeType":"YulVariableDeclaration","src":"359:25:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:4:13","type":"","value":"0x00"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"375:3:13"},"nodeType":"YulFunctionCall","src":"375:9:13"},"variables":[{"name":"implSlot","nodeType":"YulTypedName","src":"363:8:13","type":""}]},{"expression":{"arguments":[{"name":"implSlot","nodeType":"YulIdentifier","src":"421:8:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:66:13","type":"","value":"0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff"},{"arguments":[{"name":"implSlot","nodeType":"YulIdentifier","src":"566:8:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"560:5:13"},"nodeType":"YulFunctionCall","src":"560:15:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"447:3:13"},"nodeType":"YulFunctionCall","src":"447:146:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"397:6:13"},"nodeType":"YulFunctionCall","src":"397:210:13"},"nodeType":"YulExpressionStatement","src":"397:210:13"}]},"evmVersion":"london","externalReferences":[],"flags":["memory-safe"],"id":1453,"nodeType":"InlineAssembly","src":"320:297:13"}]},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"__unlockImplementation","nameLocation":"276:22:13","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[],"src":"298:2:13"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"310:0:13"},"scope":1456,"src":"267:356:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1457,"src":"216:409:13","usedErrors":[]}],"src":"43:583:13"},"id":13},"contracts/proxy/ProxyUpgrader.sol":{"ast":{"absolutePath":"contracts/proxy/ProxyUpgrader.sol","exportedSymbols":{"ProxyUpgrader":[1483]},"id":1484,"license":"MIT-open-group","nodeType":"SourceUnit","nodes":[{"id":1458,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"43:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"ProxyUpgrader","contractDependencies":[],"contractKind":"contract","documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"69:102:14","text":" @title ProxyUpgrader\n @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)"},"fullyImplemented":true,"id":1483,"linearizedBaseContracts":[1483],"name":"ProxyUpgrader","nameLocation":"190:13:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1481,"nodeType":"Block","src":"272:635:14","statements":[{"assignments":[1467],"declarations":[{"constant":false,"id":1467,"mutability":"mutable","name":"cdata","nameLocation":"295:5:14","nodeType":"VariableDeclaration","scope":1481,"src":"282:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1466,"name":"bytes","nodeType":"ElementaryTypeName","src":"282:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1479,"initialValue":{"arguments":[{"hexValue":"ca11c0de11","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"333:15:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_94b14fc7eb0c21c47cfd2257735524b475cba5e363977a9bee901f8811e078e4","typeString":"literal_string hex\"ca11c0de11\""}},{"arguments":[{"arguments":[{"id":1475,"name":"_newImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"378:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"370:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1473,"name":"uint160","nodeType":"ElementaryTypeName","src":"370:7:14","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"370:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"362:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:14","typeDescriptions":{}}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"362:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_94b14fc7eb0c21c47cfd2257735524b475cba5e363977a9bee901f8811e078e4","typeString":"literal_string hex\"ca11c0de11\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1468,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"303:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"307:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"303:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"303:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"282:116:14"},{"AST":{"nodeType":"YulBlock","src":"433:468:14","statements":[{"nodeType":"YulVariableDeclaration","src":"447:207:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"484:3:14"},"nodeType":"YulFunctionCall","src":"484:5:14"},{"name":"_proxy","nodeType":"YulIdentifier","src":"507:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"531:1:14","type":"","value":"0"},{"arguments":[{"name":"cdata","nodeType":"YulIdentifier","src":"554:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"561:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"550:3:14"},"nodeType":"YulFunctionCall","src":"550:16:14"},{"arguments":[{"name":"cdata","nodeType":"YulIdentifier","src":"590:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"584:5:14"},"nodeType":"YulFunctionCall","src":"584:12:14"},{"kind":"number","nodeType":"YulLiteral","src":"614:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"636:4:14","type":"","value":"0x00"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"462:4:14"},"nodeType":"YulFunctionCall","src":"462:192:14"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"451:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"667:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"684:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"678:5:14"},"nodeType":"YulFunctionCall","src":"678:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"671:3:14","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:4:14","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"719:3:14"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"724:14:14"},"nodeType":"YulFunctionCall","src":"724:16:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:14"},"nodeType":"YulFunctionCall","src":"715:26:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"702:6:14"},"nodeType":"YulFunctionCall","src":"702:40:14"},"nodeType":"YulExpressionStatement","src":"702:40:14"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"770:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"775:4:14","type":"","value":"0x00"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"781:14:14"},"nodeType":"YulFunctionCall","src":"781:16:14"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"755:14:14"},"nodeType":"YulFunctionCall","src":"755:43:14"},"nodeType":"YulExpressionStatement","src":"755:43:14"},{"body":{"nodeType":"YulBlock","src":"830:61:14","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"855:3:14"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"860:14:14"},"nodeType":"YulFunctionCall","src":"860:16:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"848:6:14"},"nodeType":"YulFunctionCall","src":"848:29:14"},"nodeType":"YulExpressionStatement","src":"848:29:14"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"821:7:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"814:6:14"},"nodeType":"YulFunctionCall","src":"814:15:14"},"nodeType":"YulIf","src":"811:80:14"}]},"evmVersion":"london","externalReferences":[{"declaration":1461,"isOffset":false,"isSlot":false,"src":"507:6:14","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"554:5:14","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"590:5:14","valueSize":1}],"flags":["memory-safe"],"id":1480,"nodeType":"InlineAssembly","src":"408:493:14"}]},"id":1482,"implemented":true,"kind":"function","modifiers":[],"name":"__upgrade","nameLocation":"219:9:14","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"_proxy","nameLocation":"237:6:14","nodeType":"VariableDeclaration","scope":1482,"src":"229:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"229:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"_newImpl","nameLocation":"253:8:14","nodeType":"VariableDeclaration","scope":1482,"src":"245:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"228:34:14"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"272:0:14"},"scope":1483,"src":"210:697:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1484,"src":"172:737:14","usedErrors":[]}],"src":"43:867:14"},"id":14}},"contracts":{"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008b1d4379fb91dfb3892dd882769f098937d4749abf287394f551c94fd32e8fa64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xB1 0xD4 CALLDATACOPY SWAP16 0xB9 SAR 0xFB CODESIZE SWAP3 0xDD DUP9 0x27 PUSH10 0xF098937D4749ABF28739 0x4F SSTORE SHR SWAP5 REVERT ORIGIN 0xE8 STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008b1d4379fb91dfb3892dd882769f098937d4749abf287394f551c94fd32e8fa64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xB1 0xD4 CALLDATACOPY SWAP16 0xB9 SAR 0xFB CODESIZE SWAP3 0xDD DUP9 0x27 PUSH10 0xF098937D4749ABF28739 0x4F SSTORE SHR SWAP5 REVERT ORIGIN 0xE8 STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DeterministicAddress.sol":{"DeterministicAddress":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_salt","type":"bytes32"},{"internalType":"address","name":"_factory","type":"address"}],"name":"getMetamorphicContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"}],"devdoc":{"author":"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)","kind":"dev","methods":{},"title":"DeterministicAddress","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getMetamorphicContractAddress(bytes32,address)":"8653a465"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getMetamorphicContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DeterministicAddress\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeterministicAddress.sol\":\"DeterministicAddress\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ProxyChild.sol":{"ProxyChild":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)","kind":"dev","methods":{},"title":"ProxyChild","version":1},"evm":{"bytecode":{"functionDebugData":{"@_422":{"entryPoint":null,"id":422,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a0604052348015600f57600080fd5b503360805260805160ad61002c6000396000602f015260ad6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806388cc58e414602d575b600080fd5b7f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3fea2646970667358221220359cbeffa54b36a57428e9617df498e7e123b4584b8b18637d8f38a121ca793e64736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH1 0xAD PUSH2 0x2C PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x2F ADD MSTORE PUSH1 0xAD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88CC58E4 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP13 0xBE SELFDESTRUCT 0xA5 0x4B CALLDATASIZE 0xA5 PUSH21 0x28E9617DF498E7E123B4584B8B18637D8F38A121CA PUSH26 0x3E64736F6C634300081100330000000000000000000000000000 ","sourceMap":"168:580:3:-:0;;;473:52;;;;;;;;;-1:-1:-1;508:10:3;497:21;;168:580;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getFactory_442":{"entryPoint":null,"id":442,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:242:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:125:15","statements":[{"nodeType":"YulAssignment","src":"125:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:15"},"nodeType":"YulFunctionCall","src":"133:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"190:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:15"},"nodeType":"YulFunctionCall","src":"178:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:15"},"nodeType":"YulFunctionCall","src":"160:74:15"},"nodeType":"YulExpressionStatement","src":"160:74:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:15","type":""}],"src":"14:226:15"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"387":[{"length":32,"start":47}]},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c806388cc58e414602d575b600080fd5b7f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3fea2646970667358221220359cbeffa54b36a57428e9617df498e7e123b4584b8b18637d8f38a121ca793e64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88CC58E4 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP13 0xBE SELFDESTRUCT 0xA5 0x4B CALLDATASIZE 0xA5 PUSH21 0x28E9617DF498E7E123B4584B8B18637D8F38A121CA PUSH26 0x3E64736F6C634300081100330000000000000000000000000000 ","sourceMap":"168:580:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:84;731:8;662:84;;190:42:15;178:55;;;160:74;;148:2;133:18;662:84:3;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"34600","executionCost":"infinite","totalCost":"infinite"},"external":{"getFactory()":"infinite"},"internal":{"senderIsFactory()":"infinite"}},"methodIdentifiers":{"getFactory()":"88cc58e4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProxyChild\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyChild.sol\":\"ProxyChild\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/ProxyChild.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title ProxyChild\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\ncontract ProxyChild {\\n    address immutable _factory;\\n    bool _locked;\\n\\n    modifier onlyFactory() {\\n        senderIsFactory();\\n        _;\\n    }\\n\\n    modifier onlyFactoryOnce() {\\n        senderIsFactory();\\n        require(!_locked, \\\"Initialized is locked\\\");\\n        _;\\n        _locked = true;\\n    }\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    function senderIsFactory() internal view {\\n        require(msg.sender == _factory, \\\"ChildProxy: only factory allowed\\\");\\n    }\\n\\n    function getFactory() public view returns (address) {\\n        return _factory;\\n    }\\n}\",\"keccak256\":\"0x569c0466eedbd7adc06b85556c553d3c16ea7b4ba773253c5e632628f5dcc9c3\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[{"astId":389,"contract":"contracts/ProxyChild.sol:ProxyChild","label":"_locked","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ProxyFactory.sol":{"ProxyFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CodeSizeZero","type":"error"},{"inputs":[{"internalType":"address","name":"current","type":"address"},{"internalType":"address","name":"expected","type":"address"}],"name":"IncorrectProxyImplementation","type":"error"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"SaltAlreadyInUse","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"},{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"Deployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedRaw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedStatic","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedTemplate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"},{"indexed":false,"internalType":"address","name":"proxyAddr","type":"address"},{"indexed":false,"internalType":"address","name":"newlogicAddr","type":"address"}],"name":"UpgradedProxy","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[{"internalType":"address","name":"target_","type":"address"},{"internalType":"uint256","name":"value_","type":"uint256"},{"internalType":"bytes","name":"cdata_","type":"bytes"}],"name":"callAny","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"contracts","outputs":[{"internalType":"bytes32[]","name":"contracts_","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"deployCode_","type":"bytes"}],"name":"deployCreate","outputs":[{"internalType":"address","name":"contractAddr","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value_","type":"uint256"},{"internalType":"bytes32","name":"salt_","type":"bytes32"},{"internalType":"bytes","name":"deployCode_","type":"bytes"}],"name":"deployCreate2","outputs":[{"internalType":"address","name":"contractAddr","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"deployCode_","type":"bytes"},{"internalType":"bytes32","name":"salt_","type":"bytes32"}],"name":"deployCreateAndRegister","outputs":[{"internalType":"address","name":"contractAddr","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt_","type":"bytes32"}],"name":"deployProxy","outputs":[{"internalType":"address","name":"contractAddr","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_salt","type":"bytes32"},{"internalType":"address","name":"_factory","type":"address"}],"name":"getMetamorphicContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumContracts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proxyAddress_","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contract_","type":"address"},{"internalType":"bytes","name":"initCallData_","type":"bytes"}],"name":"initializeContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt_","type":"bytes32"}],"name":"lookup","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct ProxyFactoryBase.MultiCallArgs[]","name":"cdata_","type":"tuple[]"}],"name":"multiCall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner_","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt_","type":"bytes32"},{"internalType":"address","name":"newImpl_","type":"address"},{"internalType":"bytes","name":"initCallData_","type":"bytes"}],"name":"upgradeProxy","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"custom:salt":"ProxyFactory","kind":"dev","methods":{"callAny(address,uint256,bytes)":{"params":{"cdata_":": Hex encoded state with function signature + arguments of the target function to be called","target_":": the address of the contract to be called","value_":": value in WEIs to send together the call"},"returns":{"_0":"the return of the calls as a byte array"}},"constructor":{"details":"The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory."},"contracts()":{"details":"contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory","returns":{"contracts_":"the array of salts associated with all the contracts deployed with this factory"}},"deployCreate(bytes)":{"params":{"deployCode_":"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)"},"returns":{"contractAddr":"the deployed contract address"}},"deployCreate2(uint256,bytes32,bytes)":{"details":"deployCreate2 allows the owner to deploy contracts with deterministic address through the factory","params":{"deployCode_":"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)","salt_":"salt used to determine the final determinist address for the deployed contract","value_":"endowment value in WEIS for the created contract"},"returns":{"contractAddr":"the deployed contract address"}},"deployCreateAndRegister(bytes,bytes32)":{"params":{"deployCode_":"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)","salt_":"salt used to determine the final determinist address for the deployed contract"},"returns":{"contractAddr":"the deployed contract address"}},"deployProxy(bytes32)":{"details":"deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.","params":{"salt_":"salt used to determine the final determinist address for the deployed contract"}},"getImplementation()":{"details":"getImplementation is public getter function for the _owner account address"},"getNumContracts()":{"details":"getNumContracts getter function for retrieving the total number of contracts deployed with this factory","returns":{"_0":"the length of the contract array"}},"getProxyImplementation(address)":{"params":{"proxyAddress_":"the address of the proxy"},"returns":{"_0":"the address of implementation/logic contract used by the proxy"}},"initializeContract(address,bytes)":{"details":"initializeContract allows the owner/delegator to initialize contracts deployed via factory","params":{"contract_":"address of the contract that will be initialized","initCallData_":"Hex encoded initialization function signature + parameters to initialize the deployed contract"}},"lookup(bytes32)":{"params":{"salt_":": Custom NatSpec tag @custom:salt at the top of the contract solidity file"}},"multiCall((address,uint256,bytes)[])":{"details":"multiCall allows EOA to make multiple function calls within a single transaction impersonating the factory","params":{"cdata_":": array of hex encoded state with the function calls (function signature + arguments)"}},"owner()":{"details":"owner is public getter function for the _owner account address","returns":{"owner_":"address of the owner account"}},"setOwner(address)":{"details":"Sets the new owner","params":{"newOwner_":": address of the new owner"}},"upgradeProxy(bytes32,address,bytes)":{"details":"upgradeProxy updates the implementation/logic address of an already deployed proxy contract.","params":{"initCallData_":"Hex encoded initialization function signature + parameters to initialize the new implementation contract","newImpl_":"address of the new contract that contains the new implementation logic","salt_":"salt used to determine the final determinist address for the deployed proxy contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_458":{"entryPoint":null,"id":458,"parameterSlots":0,"returnSlots":0},"@_769":{"entryPoint":null,"id":769,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_packed_t_bytes8_t_bytes_memory_ptr_t_bytes32__to_t_bytes8_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":180,"id":null,"parameterSlots":4,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:571:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"205:364:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"222:3:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"231:6:15"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"251:3:15","type":"","value":"192"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"247:3:15"},"nodeType":"YulFunctionCall","src":"247:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"260:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"243:3:15"},"nodeType":"YulFunctionCall","src":"243:19:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"239:3:15"},"nodeType":"YulFunctionCall","src":"239:24:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"227:3:15"},"nodeType":"YulFunctionCall","src":"227:37:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"215:6:15"},"nodeType":"YulFunctionCall","src":"215:50:15"},"nodeType":"YulExpressionStatement","src":"215:50:15"},{"nodeType":"YulVariableDeclaration","src":"274:27:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"294:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"288:5:15"},"nodeType":"YulFunctionCall","src":"288:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"278:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"310:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"319:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"314:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"381:85:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"410:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"406:3:15"},"nodeType":"YulFunctionCall","src":"406:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"419:1:15","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"402:3:15"},"nodeType":"YulFunctionCall","src":"402:19:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"437:6:15"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"433:3:15"},"nodeType":"YulFunctionCall","src":"433:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"449:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"429:3:15"},"nodeType":"YulFunctionCall","src":"429:25:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"423:5:15"},"nodeType":"YulFunctionCall","src":"423:32:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:15"},"nodeType":"YulFunctionCall","src":"395:61:15"},"nodeType":"YulExpressionStatement","src":"395:61:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"340:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"343:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"337:2:15"},"nodeType":"YulFunctionCall","src":"337:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"351:21:15","statements":[{"nodeType":"YulAssignment","src":"353:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"362:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"365:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:15"},"nodeType":"YulFunctionCall","src":"358:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"353:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"333:3:15","statements":[]},"src":"329:137:15"},{"nodeType":"YulVariableDeclaration","src":"475:26:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"489:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"494:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"485:3:15"},"nodeType":"YulFunctionCall","src":"485:16:15"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"479:2:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"521:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:15","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"517:3:15"},"nodeType":"YulFunctionCall","src":"517:10:15"},{"name":"value2","nodeType":"YulIdentifier","src":"529:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"510:6:15"},"nodeType":"YulFunctionCall","src":"510:26:15"},"nodeType":"YulExpressionStatement","src":"510:26:15"},{"nodeType":"YulAssignment","src":"545:18:15","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"556:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"560:2:15","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:15"},"nodeType":"YulFunctionCall","src":"552:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"545:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes8_t_bytes_memory_ptr_t_bytes32__to_t_bytes8_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"165:3:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"170:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"178:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"186:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"197:3:15","type":""}],"src":"14:555:15"}]},"contents":"{\n    { }\n    function abi_encode_tuple_packed_t_bytes8_t_bytes_memory_ptr_t_bytes32__to_t_bytes8_t_bytes_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, not(sub(shl(192, 1), 1))))\n        let length := mload(value1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 8), mload(add(add(value1, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(add(_1, 8), value2)\n        end := add(_1, 40)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b506040516000906738585839386009f360c01b90610030602082016100a6565b601f1982820381018352601f90910116604081905261005592919030906020016100b4565b604051602081830303815290604052905060008151602083016000f0905080610082573d6000803e3d6000fd5b6001600160a01b031660805250600080546001600160a01b031916331790556100fb565b6102db80620017f383390190565b6001600160c01b0319841681528251600090815b818110156100e557602081870181015160088684010152016100c8565b5060089201918201929092526028019392505050565b6080516116dc620001176000396000610b7001526116dc6000f3fe6080604052600436106100f35760003560e01c80636c0f79b61161008a578063c56ca9ed11610059578063c56ca9ed14610395578063cfe10b30146103b5578063e1d7a8e4146103d3578063f39ec1f7146103f3576100f3565b80636c0f79b61461023a5780638653a4651461025c5780638da5cb5b1461033f578063aaf10f421461036a576100f3565b8063248b1701116100c6578063248b1701146101ba57806327fe1822146101e757806339cab4721461020757806356f2a76114610227576100f3565b8063043c94141461010a57806312e6bf6a1461012c57806313af403514610155578063204e1c7a14610175575b3480156100ff57600080fd5b506002543d5260203df35b34801561011657600080fd5b5061012a610125366004611139565b610413565b005b61013f61013a366004611193565b610453565b60405161014c9190611243565b60405180910390f35b34801561016157600080fd5b5061012a610170366004611256565b6104d8565b34801561018157600080fd5b50610195610190366004611256565b61054d565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014c565b3480156101c657600080fd5b506101da6101d5366004611271565b61055e565b60405161014c91906112e6565b3480156101f357600080fd5b50610195610202366004611366565b61059f565b34801561021357600080fd5b506101956102223660046113a8565b6105d9565b6101956102353660046113c1565b610612565b34801561024657600080fd5b5061024f610657565b60405161014c91906113fc565b34801561026857600080fd5b50610195610277366004611440565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b34801561034b57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610195565b34801561037657600080fd5b5060025473ffffffffffffffffffffffffffffffffffffffff16610195565b3480156103a157600080fd5b506101956103b036600461146c565b6106af565b3480156103c157600080fd5b5060015460405190815260200161014c565b3480156103df57600080fd5b5061012a6103ee3660046114b8565b6106f7565b3480156103ff57600080fd5b5061019561040e3660046113a8565b610735565b33301480610438575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61044157600080fd5b61044d8484848461075f565b50505050565b60603330148061047a575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61048357600080fd5b600083838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506104cc92508891508790508361090a565b9150505b949350505050565b333014806104fd575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61050657600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006105588261092d565b92915050565b606033301480610585575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61058e57600080fd5b6105988383610997565b9392505050565b6000333014806105c6575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6105cf57600080fd5b6105988383610af3565b600033301480610600575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61060957600080fd5b61055882610b6b565b600033301480610639575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61064257600080fd5b61064e85858585610c2a565b95945050505050565b606060018054806020026020016040519081016040528092919081815260200182805480156106a557602002820191906000526020600020905b815481526020019060010190808311610691575b5050505050905090565b6000333014806106d6575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6106df57600080fd5b60006106eb8585610af3565b90506104d08382610cd1565b3330148061071c575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61072557600080fd5b610730838383610db2565b505050565b60008181526003602052604081205473ffffffffffffffffffffffffffffffffffffffff16610558565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018790527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be605580840191909152835180840390910181526075909201909252805191012061080a8185610de7565b60006108158261092d565b90508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108a1576040517f35da668500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8083166004830152861660248201526044015b60405180910390fd5b6108ac828585610db2565b6040805187815273ffffffffffffffffffffffffffffffffffffffff848116602083015287168183015290517f430fbfc2698f4e110d994ecf59c30881703dc7b8cd50bc5f12e4e48d21e144a39181900360600190a1505050505050565b60606104d073ffffffffffffffffffffffffffffffffffffffff85168385610e6f565b6000806040518060400160405280600581526020017f0cbcae703c0000000000000000000000000000000000000000000000000000008152509050600080825160208401865afa6040513d81016040523d6000823e8161098b573d81fd5b5160601c949350505050565b60608167ffffffffffffffff8111156109b2576109b261150b565b6040519080825280602002602001820160405280156109e557816020015b60608152602001906001900390816109d05790505b50905060005b82811015610aec57610abc848483818110610a0857610a0861153a565b9050602002810190610a1a9190611569565b610a28906020810190611256565b858584818110610a3a57610a3a61153a565b9050602002810190610a4c9190611569565b60200135868685818110610a6257610a6261153a565b9050602002810190610a749190611569565b610a829060408101906115a7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061090a92505050565b828281518110610ace57610ace61153a565b60200260200101819052508080610ae49061160c565b9150506109eb565b5092915050565b600060405180838582378301818103826000f092505050610b1c610b15823b90565b1515610e95565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a192915050565b6000807f000000000000000000000000000000000000000000000000000000000000000090508060025560405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152836017826000f5925050610bd1610b15833b90565b610bdb8383610cd1565b60405173ffffffffffffffffffffffffffffffffffffffff831681527f06690e5b52be10a3d5820ec875c3dd3327f3077954a09f104201e40e5f7082c69060200160405180910390a150919050565b600060405180838582378301858282038389f592505050610c4c610b15823b90565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a1949350505050565b60008281526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610d30576040517fcd3b7fe100000000000000000000000000000000000000000000000000000000815260048101839052602401610898565b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905560009182526003602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b8015610730576040518082016040528183823760008083836000885af161044d576040519050803d016040523d6000823e3d81fd5b6040517fca11c0de11000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff8216602582015260009060450160405160208183030381529060405290506000808251602084016000875af16040513d81016040523d6000823e81610e68573d81fd5b5050505050565b60606104d084848460405180606001604052806029815260200161167e60299139610ecf565b80610ecc576040517f5e393b2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b606082471015610f61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610898565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f8a919061166b565b60006040518083038185875af1925050503d8060008114610fc7576040519150601f19603f3d011682016040523d82523d6000602084013e610fcc565b606091505b5091509150610fdd87838387610fe8565b979650505050505050565b6060831561107e5782516000036110775773ffffffffffffffffffffffffffffffffffffffff85163b611077576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610898565b50816104d0565b6104d083838151156110935781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108989190611243565b803573ffffffffffffffffffffffffffffffffffffffff811681146110eb57600080fd5b919050565b60008083601f84011261110257600080fd5b50813567ffffffffffffffff81111561111a57600080fd5b60208301915083602082850101111561113257600080fd5b9250929050565b6000806000806060858703121561114f57600080fd5b8435935061115f602086016110c7565b9250604085013567ffffffffffffffff81111561117b57600080fd5b611187878288016110f0565b95989497509550505050565b600080600080606085870312156111a957600080fd5b6111b2856110c7565b935060208501359250604085013567ffffffffffffffff81111561117b57600080fd5b60005b838110156111f05781810151838201526020016111d8565b50506000910152565b600081518084526112118160208601602086016111d5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061059860208301846111f9565b60006020828403121561126857600080fd5b610598826110c7565b6000806020838503121561128457600080fd5b823567ffffffffffffffff8082111561129c57600080fd5b818501915085601f8301126112b057600080fd5b8135818111156112bf57600080fd5b8660208260051b85010111156112d457600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611359577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526113478583516111f9565b9450928501929085019060010161130d565b5092979650505050505050565b6000806020838503121561137957600080fd5b823567ffffffffffffffff81111561139057600080fd5b61139c858286016110f0565b90969095509350505050565b6000602082840312156113ba57600080fd5b5035919050565b600080600080606085870312156113d757600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561117b57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561143457835183529284019291840191600101611418565b50909695505050505050565b6000806040838503121561145357600080fd5b82359150611463602084016110c7565b90509250929050565b60008060006040848603121561148157600080fd5b833567ffffffffffffffff81111561149857600080fd5b6114a4868287016110f0565b909790965060209590950135949350505050565b6000806000604084860312156114cd57600080fd5b6114d6846110c7565b9250602084013567ffffffffffffffff8111156114f257600080fd5b6114fe868287016110f0565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261159d57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115dc57600080fd5b83018035915067ffffffffffffffff8211156115f757600080fd5b60200191503681900382131561113257600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611664577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000825161159d8184602087016111d556fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220003c5fe50a6476c15b68466b33e357aeec3b96721a66a5ef3f2f2608ed4a303a64736f6c6343000811003360a060405234801561001057600080fd5b50336080526080516102ac61002f6000396000601b01526102ac6000f3fe60806040523661001357610011610017565b005b6100115b60007f00000000000000000000000000000000000000000000000000000000000000009050600536146025361417156101275760003560d81c80640cbcae703c81146100995764ca11c0de1181146100ea5761009460127f66756e6374696f6e206e6f7420666f756e640000000000000000000000000000610132565b610124565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5460601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000168152601481f35b82331461011c5761011c600c7f756e617574686f72697a65640000000000000000000000000000000000000000610132565b610124610177565b50505b61012f6101fa565b50565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101839052604481018290526064808201919081fd5b6bca11c0de15dead10deadc0de6000195460a01c036101bb576101bb600d7f757064617465206c6f636b656400000000000000000000000000000000000000610132565b73ffffffffffffffffffffffffffffffffffffffff600535167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff819055005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff548061024c5761024c600d7f6c6f676963206e6f742073657400000000000000000000000000000000000000610132565b60405136810160405236600082376000803683855af491503d6000823e81610272573d81fd5b3d81f3fea264697066735822122008cba2e77d14c8cdbf42884951755adca3df49c0b7f5dbf6714f8ff7438492a564736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH8 0x38585839386009F3 PUSH1 0xC0 SHL SWAP1 PUSH2 0x30 PUSH1 0x20 DUP3 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x55 SWAP3 SWAP2 SWAP1 ADDRESS SWAP1 PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP DUP1 PUSH2 0x82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xFB JUMP JUMPDEST PUSH2 0x2DB DUP1 PUSH3 0x17F3 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP5 AND DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x8 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xC8 JUMP JUMPDEST POP PUSH1 0x8 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x28 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x16DC PUSH3 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xB70 ADD MSTORE PUSH2 0x16DC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0F79B6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC56CA9ED GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC56CA9ED EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xCFE10B30 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xE1D7A8E4 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xF39EC1F7 EQ PUSH2 0x3F3 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6C0F79B6 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x8653A465 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x36A JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x248B1701 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x248B1701 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x27FE1822 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x39CAB472 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x56F2A761 EQ PUSH2 0x227 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x43C9414 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x12E6BF6A EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x175 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD RETURNDATASIZE MSTORE PUSH1 0x20 RETURNDATASIZE RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x195 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x195 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x438 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44D DUP5 DUP5 DUP5 DUP5 PUSH2 0x75F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLER ADDRESS EQ DUP1 PUSH2 0x47A JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x4CC SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 POP DUP4 PUSH2 0x90A JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x4FD JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x558 DUP3 PUSH2 0x92D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 CALLER ADDRESS EQ DUP1 PUSH2 0x585 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x598 DUP4 DUP4 PUSH2 0x997 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x5C6 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x598 DUP4 DUP4 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x600 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x558 DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x639 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64E DUP6 DUP6 DUP6 DUP6 PUSH2 0xC2A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x691 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x6D6 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP6 DUP6 PUSH2 0xAF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D0 DUP4 DUP3 PUSH2 0xCD1 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x71C JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x730 DUP4 DUP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x80A DUP2 DUP6 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x815 DUP3 PUSH2 0x92D JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x35DA668500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP3 DUP6 DUP6 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x430FBFC2698F4E110D994ECF59C30881703DC7B8CD50BC5F12E4E48D21E144A3 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP4 DUP6 PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xCBCAE703C000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 GAS STATICCALL PUSH1 0x40 MLOAD RETURNDATASIZE DUP2 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0x98B JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST MLOAD PUSH1 0x60 SHR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B2 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9E5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9D0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH2 0xABC DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0xA28 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1256 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA3A PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x20 ADD CALLDATALOAD DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA62 JUMPI PUSH2 0xA62 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0xA82 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH2 0x15A7 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x90A SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0x153A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xAE4 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9EB JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP2 DUP2 SUB DUP3 PUSH1 0x0 CREATE SWAP3 POP POP POP PUSH2 0xB1C PUSH2 0xB15 DUP3 EXTCODESIZE SWAP1 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH23 0x6020363636335AFA1536363636515AF43D36363E3D36F3 PUSH1 0x48 SHL DUP2 MSTORE DUP4 PUSH1 0x17 DUP3 PUSH1 0x0 CREATE2 SWAP3 POP POP PUSH2 0xBD1 PUSH2 0xB15 DUP4 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH2 0xBDB DUP4 DUP4 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0x6690E5B52BE10A3D5820EC875C3DD3327F3077954A09F104201E40E5F7082C6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP6 DUP3 DUP3 SUB DUP4 DUP10 CREATE2 SWAP3 POP POP POP PUSH2 0xC4C PUSH2 0xB15 DUP3 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD3B7FE100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x898 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD SWAP1 SWAP2 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP3 SWAP1 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD DUP1 DUP3 ADD PUSH1 0x40 MSTORE DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP9 GAS CALL PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD SWAP1 POP DUP1 RETURNDATASIZE ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCA11C0DE11000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x25 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x45 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 DUP8 GAS CALL PUSH1 0x40 MLOAD RETURNDATASIZE DUP2 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0xE68 JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4D0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167E PUSH1 0x29 SWAP2 CODECOPY PUSH2 0xECF JUMP JUMPDEST DUP1 PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x5E393B2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x898 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFDD DUP8 DUP4 DUP4 DUP8 PUSH2 0xFE8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x107E JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1077 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1077 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x898 JUMP JUMPDEST POP DUP2 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x4D0 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1093 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x115F PUSH1 0x20 DUP7 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1187 DUP8 DUP3 DUP9 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 DUP6 PUSH2 0x10C7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11D8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1211 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x598 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1359 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x1347 DUP6 DUP4 MLOAD PUSH2 0x11F9 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x130D JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139C DUP6 DUP3 DUP7 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1418 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1463 PUSH1 0x20 DUP5 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A4 DUP7 DUP3 DUP8 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D6 DUP5 PUSH2 0x10C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FE DUP7 DUP3 DUP8 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1664 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x159D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x11D5 JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2063616C6C KECCAK256 PUSH24 0x6974682076616C7565206661696C6564A264697066735822 SLT KECCAK256 STOP EXTCODECOPY 0x5F 0xE5 EXP PUSH5 0x76C15B6846 PUSH12 0x33E357AEEC3B96721A66A5EF EXTCODEHASH 0x2F 0x26 ADDMOD 0xED 0x4A ADDRESS GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x2AC PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x1B ADD MSTORE PUSH2 0x2AC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x5 CALLDATASIZE EQ PUSH1 0x25 CALLDATASIZE EQ OR ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xD8 SHR DUP1 PUSH5 0xCBCAE703C DUP2 EQ PUSH2 0x99 JUMPI PUSH5 0xCA11C0DE11 DUP2 EQ PUSH2 0xEA JUMPI PUSH2 0x94 PUSH1 0x12 PUSH32 0x66756E6374696F6E206E6F7420666F756E640000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND DUP2 MSTORE PUSH1 0x14 DUP2 RETURN JUMPDEST DUP3 CALLER EQ PUSH2 0x11C JUMPI PUSH2 0x11C PUSH1 0xC PUSH32 0x756E617574686F72697A65640000000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x177 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x12F PUSH2 0x1FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP2 SWAP1 DUP2 REVERT JUMPDEST PUSH12 0xCA11C0DE15DEAD10DEADC0DE PUSH1 0x0 NOT SLOAD PUSH1 0xA0 SHR SUB PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH1 0xD PUSH32 0x757064617465206C6F636B656400000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 CALLDATALOAD AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD DUP1 PUSH2 0x24C JUMPI PUSH2 0x24C PUSH1 0xD PUSH32 0x6C6F676963206E6F742073657400000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE DUP2 ADD PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL SWAP2 POP RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0x272 JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCB LOG2 0xE7 PUSH30 0x14C8CDBF42884951755ADCA3DF49C0B7F5DBF6714F8FF7438492A564736F PUSH13 0x63430008110033000000000000 ","sourceMap":"330:5739:4:-:0;;;968:35;;;;;;;;;-1:-1:-1;2511:24:5;;2366:28;;-1:-1:-1;;;2475:22:5;2511:24;;;;;:::i;:::-;-1:-1:-1;;2511:24:5;;;;;;;;;;;;;;;;2397:202;;;2511:24;2581:4;;2511:24;2397:202;;:::i;:::-;;;;;;;;;;;;;2366:233;;2714:12;2926:15;2920:22;2897:4;2880:15;2876:26;2857:1;2833:123;2825:131;;2979:4;2969:263;;3111:16;3105:4;3099;3084:44;3201:16;3195:4;3188:30;2969:263;-1:-1:-1;;;;;3309:21:5;;;-1:-1:-1;3391:6:5;:19;;-1:-1:-1;;;;;;3391:19:5;3400:10;3391:19;;;330:5739:4;;;;;;;;;;:::o;14:555:15:-;-1:-1:-1;;;;;;227:37:15;;215:50;;288:13;;197:3;;;329:137;343:6;340:1;337:13;329:137;;;449:4;433:14;;;429:25;;423:32;419:1;406:11;;;402:19;395:61;358:12;329:137;;;-1:-1:-1;525:1:15;485:16;;517:10;;;510:26;;;;560:2;552:11;;14:555;-1:-1:-1;;;14:555:15:o;:::-;330:5739:4;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_775":{"entryPoint":null,"id":775,"parameterSlots":0,"returnSlots":0},"@__getProxyImplementation_1437":{"entryPoint":2349,"id":1437,"parameterSlots":1,"returnSlots":1},"@__upgrade_1482":{"entryPoint":3559,"id":1482,"parameterSlots":2,"returnSlots":0},"@_addNewContract_1102":{"entryPoint":3281,"id":1102,"parameterSlots":2,"returnSlots":0},"@_callAny_862":{"entryPoint":2314,"id":862,"parameterSlots":3,"returnSlots":1},"@_codeSizeZeroRevert_1154":{"entryPoint":3733,"id":1154,"parameterSlots":1,"returnSlots":0},"@_deployCreate2_918":{"entryPoint":3114,"id":918,"parameterSlots":4,"returnSlots":1},"@_deployCreate_885":{"entryPoint":2803,"id":885,"parameterSlots":2,"returnSlots":1},"@_deployProxy_950":{"entryPoint":2923,"id":950,"parameterSlots":1,"returnSlots":1},"@_extCodeSize_1114":{"entryPoint":null,"id":1114,"parameterSlots":1,"returnSlots":1},"@_initializeContract_960":{"entryPoint":3506,"id":960,"parameterSlots":3,"returnSlots":0},"@_lookup_1126":{"entryPoint":null,"id":1126,"parameterSlots":1,"returnSlots":1},"@_multiCall_1013":{"entryPoint":2455,"id":1013,"parameterSlots":2,"returnSlots":1},"@_revert_328":{"entryPoint":null,"id":328,"parameterSlots":2,"returnSlots":0},"@_upgradeProxy_1067":{"entryPoint":1887,"id":1067,"parameterSlots":4,"returnSlots":0},"@callAny_483":{"entryPoint":1107,"id":483,"parameterSlots":4,"returnSlots":1},"@contracts_833":{"entryPoint":1623,"id":833,"parameterSlots":0,"returnSlots":1},"@deployCreate2_547":{"entryPoint":1554,"id":547,"parameterSlots":4,"returnSlots":1},"@deployCreateAndRegister_524":{"entryPoint":1711,"id":524,"parameterSlots":3,"returnSlots":1},"@deployCreate_498":{"entryPoint":1439,"id":498,"parameterSlots":2,"returnSlots":1},"@deployProxy_564":{"entryPoint":1497,"id":564,"parameterSlots":1,"returnSlots":1},"@functionCallWithValue_109":{"entryPoint":3695,"id":109,"parameterSlots":3,"returnSlots":1},"@functionCallWithValue_153":{"entryPoint":3791,"id":153,"parameterSlots":4,"returnSlots":1},"@getImplementation_810":{"entryPoint":null,"id":810,"parameterSlots":0,"returnSlots":1},"@getMetamorphicContractAddress_365":{"entryPoint":null,"id":365,"parameterSlots":2,"returnSlots":1},"@getNumContracts_843":{"entryPoint":null,"id":843,"parameterSlots":0,"returnSlots":1},"@getProxyImplementation_630":{"entryPoint":1357,"id":630,"parameterSlots":1,"returnSlots":1},"@initializeContract_580":{"entryPoint":1783,"id":580,"parameterSlots":3,"returnSlots":0},"@isContract_17":{"entryPoint":null,"id":17,"parameterSlots":1,"returnSlots":1},"@lookup_801":{"entryPoint":1845,"id":801,"parameterSlots":1,"returnSlots":1},"@multiCall_598":{"entryPoint":1374,"id":598,"parameterSlots":2,"returnSlots":1},"@owner_821":{"entryPoint":null,"id":821,"parameterSlots":0,"returnSlots":1},"@setOwner_788":{"entryPoint":1240,"id":788,"parameterSlots":1,"returnSlots":0},"@upgradeProxy_617":{"entryPoint":1043,"id":617,"parameterSlots":4,"returnSlots":0},"@verifyCallResultFromTarget_284":{"entryPoint":4072,"id":284,"parameterSlots":4,"returnSlots":1},"abi_decode_address":{"entryPoint":4295,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":4336,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":4694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_calldata_ptr":{"entryPoint":5304,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4499,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":4721,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5184,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr":{"entryPoint":4409,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":4966,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_calldata_ptrt_bytes32":{"entryPoint":5228,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_bytes32t_bytes_calldata_ptr":{"entryPoint":5057,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_bytes":{"entryPoint":4601,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_94b14fc7eb0c21c47cfd2257735524b475cba5e363977a9bee901f8811e078e4_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":5543,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_MultiCallArgs_$657_calldata_ptr":{"entryPoint":5481,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4565,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":5644,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":5434,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5387,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12510:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:15","statements":[{"nodeType":"YulAssignment","src":"73:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:15"},"nodeType":"YulFunctionCall","src":"82:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:15"}]},{"body":{"nodeType":"YulBlock","src":"188:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:15"},"nodeType":"YulFunctionCall","src":"190:12:15"},"nodeType":"YulExpressionStatement","src":"190:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:15"},"nodeType":"YulFunctionCall","src":"131:54:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:15"},"nodeType":"YulFunctionCall","src":"121:65:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:15"},"nodeType":"YulFunctionCall","src":"114:73:15"},"nodeType":"YulIf","src":"111:93:15"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"14:196:15"},{"body":{"nodeType":"YulBlock","src":"287:275:15","statements":[{"body":{"nodeType":"YulBlock","src":"336:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"345:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"348:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:15"},"nodeType":"YulFunctionCall","src":"338:12:15"},"nodeType":"YulExpressionStatement","src":"338:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"315:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"323:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"311:3:15"},"nodeType":"YulFunctionCall","src":"311:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"330:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:15"},"nodeType":"YulFunctionCall","src":"307:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"300:6:15"},"nodeType":"YulFunctionCall","src":"300:35:15"},"nodeType":"YulIf","src":"297:55:15"},{"nodeType":"YulAssignment","src":"361:30:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"384:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"371:12:15"},"nodeType":"YulFunctionCall","src":"371:20:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"361:6:15"}]},{"body":{"nodeType":"YulBlock","src":"434:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"443:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"446:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"436:6:15"},"nodeType":"YulFunctionCall","src":"436:12:15"},"nodeType":"YulExpressionStatement","src":"436:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"406:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"414:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"403:2:15"},"nodeType":"YulFunctionCall","src":"403:30:15"},"nodeType":"YulIf","src":"400:50:15"},{"nodeType":"YulAssignment","src":"459:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"475:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"483:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"471:3:15"},"nodeType":"YulFunctionCall","src":"471:17:15"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"459:8:15"}]},{"body":{"nodeType":"YulBlock","src":"540:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"552:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"542:6:15"},"nodeType":"YulFunctionCall","src":"542:12:15"},"nodeType":"YulExpressionStatement","src":"542:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"511:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"519:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:15"},"nodeType":"YulFunctionCall","src":"507:19:15"},{"kind":"number","nodeType":"YulLiteral","src":"528:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"503:3:15"},"nodeType":"YulFunctionCall","src":"503:30:15"},{"name":"end","nodeType":"YulIdentifier","src":"535:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"500:2:15"},"nodeType":"YulFunctionCall","src":"500:39:15"},"nodeType":"YulIf","src":"497:59:15"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"250:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"258:3:15","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"266:8:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"276:6:15","type":""}],"src":"215:347:15"},{"body":{"nodeType":"YulBlock","src":"690:428:15","statements":[{"body":{"nodeType":"YulBlock","src":"736:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"745:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"748:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"738:6:15"},"nodeType":"YulFunctionCall","src":"738:12:15"},"nodeType":"YulExpressionStatement","src":"738:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"711:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"720:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"707:3:15"},"nodeType":"YulFunctionCall","src":"707:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"732:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"703:3:15"},"nodeType":"YulFunctionCall","src":"703:32:15"},"nodeType":"YulIf","src":"700:52:15"},{"nodeType":"YulAssignment","src":"761:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"784:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"771:12:15"},"nodeType":"YulFunctionCall","src":"771:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"761:6:15"}]},{"nodeType":"YulAssignment","src":"803:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"836:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"847:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"832:3:15"},"nodeType":"YulFunctionCall","src":"832:18:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"813:18:15"},"nodeType":"YulFunctionCall","src":"813:38:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"803:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"860:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"891:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"902:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"887:3:15"},"nodeType":"YulFunctionCall","src":"887:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"874:12:15"},"nodeType":"YulFunctionCall","src":"874:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"864:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"949:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"958:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"961:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"951:6:15"},"nodeType":"YulFunctionCall","src":"951:12:15"},"nodeType":"YulExpressionStatement","src":"951:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"921:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"929:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"918:2:15"},"nodeType":"YulFunctionCall","src":"918:30:15"},"nodeType":"YulIf","src":"915:50:15"},{"nodeType":"YulVariableDeclaration","src":"974:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1041:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:15"},"nodeType":"YulFunctionCall","src":"1026:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1050:7:15"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1000:25:15"},"nodeType":"YulFunctionCall","src":"1000:58:15"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"978:8:15","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"988:8:15","type":""}]},{"nodeType":"YulAssignment","src":"1067:18:15","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1077:8:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1067:6:15"}]},{"nodeType":"YulAssignment","src":"1094:18:15","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1104:8:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1094:6:15"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"632:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"643:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"655:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"663:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"671:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"679:6:15","type":""}],"src":"567:551:15"},{"body":{"nodeType":"YulBlock","src":"1246:428:15","statements":[{"body":{"nodeType":"YulBlock","src":"1292:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1301:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1304:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1294:6:15"},"nodeType":"YulFunctionCall","src":"1294:12:15"},"nodeType":"YulExpressionStatement","src":"1294:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1267:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1263:3:15"},"nodeType":"YulFunctionCall","src":"1263:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1288:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1259:3:15"},"nodeType":"YulFunctionCall","src":"1259:32:15"},"nodeType":"YulIf","src":"1256:52:15"},{"nodeType":"YulAssignment","src":"1317:39:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1346:9:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1327:18:15"},"nodeType":"YulFunctionCall","src":"1327:29:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1317:6:15"}]},{"nodeType":"YulAssignment","src":"1365:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1392:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1403:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1388:3:15"},"nodeType":"YulFunctionCall","src":"1388:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1375:12:15"},"nodeType":"YulFunctionCall","src":"1375:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1365:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1416:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1447:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1458:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:15"},"nodeType":"YulFunctionCall","src":"1443:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1430:12:15"},"nodeType":"YulFunctionCall","src":"1430:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1420:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1505:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1514:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1517:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1507:6:15"},"nodeType":"YulFunctionCall","src":"1507:12:15"},"nodeType":"YulExpressionStatement","src":"1507:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1477:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1485:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1474:2:15"},"nodeType":"YulFunctionCall","src":"1474:30:15"},"nodeType":"YulIf","src":"1471:50:15"},{"nodeType":"YulVariableDeclaration","src":"1530:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1586:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1597:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:15"},"nodeType":"YulFunctionCall","src":"1582:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1606:7:15"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1556:25:15"},"nodeType":"YulFunctionCall","src":"1556:58:15"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"1534:8:15","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"1544:8:15","type":""}]},{"nodeType":"YulAssignment","src":"1623:18:15","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1633:8:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1623:6:15"}]},{"nodeType":"YulAssignment","src":"1650:18:15","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1660:8:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1650:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1188:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1199:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1211:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1219:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1227:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1235:6:15","type":""}],"src":"1123:551:15"},{"body":{"nodeType":"YulBlock","src":"1745:184:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1755:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1764:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1759:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1824:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1849:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"1854:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1845:3:15"},"nodeType":"YulFunctionCall","src":"1845:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1868:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"1873:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:15"},"nodeType":"YulFunctionCall","src":"1864:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1858:5:15"},"nodeType":"YulFunctionCall","src":"1858:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:15"},"nodeType":"YulFunctionCall","src":"1838:39:15"},"nodeType":"YulExpressionStatement","src":"1838:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1785:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"1788:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1782:2:15"},"nodeType":"YulFunctionCall","src":"1782:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1796:19:15","statements":[{"nodeType":"YulAssignment","src":"1798:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1807:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"1810:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1803:3:15"},"nodeType":"YulFunctionCall","src":"1803:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1798:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"1778:3:15","statements":[]},"src":"1774:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1907:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"1912:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1903:3:15"},"nodeType":"YulFunctionCall","src":"1903:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"1921:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1896:6:15"},"nodeType":"YulFunctionCall","src":"1896:27:15"},"nodeType":"YulExpressionStatement","src":"1896:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1723:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1728:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"1733:6:15","type":""}],"src":"1679:250:15"},{"body":{"nodeType":"YulBlock","src":"1983:280:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1993:26:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2013:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2007:5:15"},"nodeType":"YulFunctionCall","src":"2007:12:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1997:6:15","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2035:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2040:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2028:6:15"},"nodeType":"YulFunctionCall","src":"2028:19:15"},"nodeType":"YulExpressionStatement","src":"2028:19:15"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2095:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2091:3:15"},"nodeType":"YulFunctionCall","src":"2091:16:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2113:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2118:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2109:3:15"},"nodeType":"YulFunctionCall","src":"2109:14:15"},{"name":"length","nodeType":"YulIdentifier","src":"2125:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2056:34:15"},"nodeType":"YulFunctionCall","src":"2056:76:15"},"nodeType":"YulExpressionStatement","src":"2056:76:15"},{"nodeType":"YulAssignment","src":"2141:116:15","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2156:3:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2169:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2177:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2165:3:15"},"nodeType":"YulFunctionCall","src":"2165:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"2182:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2161:3:15"},"nodeType":"YulFunctionCall","src":"2161:88:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:15"},"nodeType":"YulFunctionCall","src":"2152:98:15"},{"kind":"number","nodeType":"YulLiteral","src":"2252:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:15"},"nodeType":"YulFunctionCall","src":"2148:109:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2141:3:15"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1960:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1967:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1975:3:15","type":""}],"src":"1934:329:15"},{"body":{"nodeType":"YulBlock","src":"2387:98:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2404:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2415:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2397:6:15"},"nodeType":"YulFunctionCall","src":"2397:21:15"},"nodeType":"YulExpressionStatement","src":"2397:21:15"},{"nodeType":"YulAssignment","src":"2427:52:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2452:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2464:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2475:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2460:3:15"},"nodeType":"YulFunctionCall","src":"2460:18:15"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"2435:16:15"},"nodeType":"YulFunctionCall","src":"2435:44:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2427:4:15"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2356:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2367:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2378:4:15","type":""}],"src":"2268:217:15"},{"body":{"nodeType":"YulBlock","src":"2560:116:15","statements":[{"body":{"nodeType":"YulBlock","src":"2606:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2615:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2618:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2608:6:15"},"nodeType":"YulFunctionCall","src":"2608:12:15"},"nodeType":"YulExpressionStatement","src":"2608:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2581:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2590:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2577:3:15"},"nodeType":"YulFunctionCall","src":"2577:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2602:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2573:3:15"},"nodeType":"YulFunctionCall","src":"2573:32:15"},"nodeType":"YulIf","src":"2570:52:15"},{"nodeType":"YulAssignment","src":"2631:39:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2660:9:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2641:18:15"},"nodeType":"YulFunctionCall","src":"2641:29:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2631:6:15"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2526:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2537:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2549:6:15","type":""}],"src":"2490:186:15"},{"body":{"nodeType":"YulBlock","src":"2782:125:15","statements":[{"nodeType":"YulAssignment","src":"2792:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2804:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2815:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2800:3:15"},"nodeType":"YulFunctionCall","src":"2800:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2792:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2849:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2857:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2845:3:15"},"nodeType":"YulFunctionCall","src":"2845:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:15"},"nodeType":"YulFunctionCall","src":"2827:74:15"},"nodeType":"YulExpressionStatement","src":"2827:74:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2751:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2762:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2773:4:15","type":""}],"src":"2681:226:15"},{"body":{"nodeType":"YulBlock","src":"3049:510:15","statements":[{"body":{"nodeType":"YulBlock","src":"3095:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3104:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3107:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3097:6:15"},"nodeType":"YulFunctionCall","src":"3097:12:15"},"nodeType":"YulExpressionStatement","src":"3097:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3070:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3079:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3066:3:15"},"nodeType":"YulFunctionCall","src":"3066:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3091:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3062:3:15"},"nodeType":"YulFunctionCall","src":"3062:32:15"},"nodeType":"YulIf","src":"3059:52:15"},{"nodeType":"YulVariableDeclaration","src":"3120:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3147:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3134:12:15"},"nodeType":"YulFunctionCall","src":"3134:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3124:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3166:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3176:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3170:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3221:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3230:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3233:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3223:6:15"},"nodeType":"YulFunctionCall","src":"3223:12:15"},"nodeType":"YulExpressionStatement","src":"3223:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3209:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3217:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3206:2:15"},"nodeType":"YulFunctionCall","src":"3206:14:15"},"nodeType":"YulIf","src":"3203:34:15"},{"nodeType":"YulVariableDeclaration","src":"3246:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3260:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3271:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3256:3:15"},"nodeType":"YulFunctionCall","src":"3256:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3250:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3326:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3335:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3338:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3328:6:15"},"nodeType":"YulFunctionCall","src":"3328:12:15"},"nodeType":"YulExpressionStatement","src":"3328:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3305:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"3309:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3301:3:15"},"nodeType":"YulFunctionCall","src":"3301:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3316:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3297:3:15"},"nodeType":"YulFunctionCall","src":"3297:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3290:6:15"},"nodeType":"YulFunctionCall","src":"3290:35:15"},"nodeType":"YulIf","src":"3287:55:15"},{"nodeType":"YulVariableDeclaration","src":"3351:30:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3378:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3365:12:15"},"nodeType":"YulFunctionCall","src":"3365:16:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3355:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3408:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3417:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3420:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3410:6:15"},"nodeType":"YulFunctionCall","src":"3410:12:15"},"nodeType":"YulExpressionStatement","src":"3410:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3396:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3404:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3393:2:15"},"nodeType":"YulFunctionCall","src":"3393:14:15"},"nodeType":"YulIf","src":"3390:34:15"},{"body":{"nodeType":"YulBlock","src":"3482:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3491:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3494:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3484:6:15"},"nodeType":"YulFunctionCall","src":"3484:12:15"},"nodeType":"YulExpressionStatement","src":"3484:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3447:2:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3455:1:15","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3458:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3451:3:15"},"nodeType":"YulFunctionCall","src":"3451:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3443:3:15"},"nodeType":"YulFunctionCall","src":"3443:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3468:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3439:3:15"},"nodeType":"YulFunctionCall","src":"3439:32:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3473:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3436:2:15"},"nodeType":"YulFunctionCall","src":"3436:45:15"},"nodeType":"YulIf","src":"3433:65:15"},{"nodeType":"YulAssignment","src":"3507:21:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3521:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"3525:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3517:3:15"},"nodeType":"YulFunctionCall","src":"3517:11:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3507:6:15"}]},{"nodeType":"YulAssignment","src":"3537:16:15","value":{"name":"length","nodeType":"YulIdentifier","src":"3547:6:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3537:6:15"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3007:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3018:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3030:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3038:6:15","type":""}],"src":"2912:647:15"},{"body":{"nodeType":"YulBlock","src":"3733:690:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3743:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3753:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3747:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3764:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3782:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3793:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:15"},"nodeType":"YulFunctionCall","src":"3778:18:15"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3768:6:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3812:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"3823:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3805:6:15"},"nodeType":"YulFunctionCall","src":"3805:21:15"},"nodeType":"YulExpressionStatement","src":"3805:21:15"},{"nodeType":"YulVariableDeclaration","src":"3835:17:15","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3846:6:15"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3839:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3861:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3881:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3875:5:15"},"nodeType":"YulFunctionCall","src":"3875:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3865:6:15","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3904:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"3912:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3897:6:15"},"nodeType":"YulFunctionCall","src":"3897:22:15"},"nodeType":"YulExpressionStatement","src":"3897:22:15"},{"nodeType":"YulAssignment","src":"3928:25:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3950:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3935:3:15"},"nodeType":"YulFunctionCall","src":"3935:18:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3928:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"3962:53:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3984:9:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3999:1:15","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"4002:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3995:3:15"},"nodeType":"YulFunctionCall","src":"3995:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3980:3:15"},"nodeType":"YulFunctionCall","src":"3980:30:15"},{"kind":"number","nodeType":"YulLiteral","src":"4012:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3976:3:15"},"nodeType":"YulFunctionCall","src":"3976:39:15"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3966:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4024:29:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4042:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4050:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4038:3:15"},"nodeType":"YulFunctionCall","src":"4038:15:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4028:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4062:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4071:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4066:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4130:264:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4151:3:15"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4164:6:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4172:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4160:3:15"},"nodeType":"YulFunctionCall","src":"4160:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"4184:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4156:3:15"},"nodeType":"YulFunctionCall","src":"4156:95:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4144:6:15"},"nodeType":"YulFunctionCall","src":"4144:108:15"},"nodeType":"YulExpressionStatement","src":"4144:108:15"},{"nodeType":"YulAssignment","src":"4265:49:15","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4298:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4292:5:15"},"nodeType":"YulFunctionCall","src":"4292:13:15"},{"name":"tail_2","nodeType":"YulIdentifier","src":"4307:6:15"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4275:16:15"},"nodeType":"YulFunctionCall","src":"4275:39:15"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4265:6:15"}]},{"nodeType":"YulAssignment","src":"4327:25:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4341:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4349:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4337:3:15"},"nodeType":"YulFunctionCall","src":"4337:15:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4327:6:15"}]},{"nodeType":"YulAssignment","src":"4365:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4376:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4381:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:15"},"nodeType":"YulFunctionCall","src":"4372:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4365:3:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4092:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"4095:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4089:2:15"},"nodeType":"YulFunctionCall","src":"4089:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4103:18:15","statements":[{"nodeType":"YulAssignment","src":"4105:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4114:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"4117:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:15"},"nodeType":"YulFunctionCall","src":"4110:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4105:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"4085:3:15","statements":[]},"src":"4081:313:15"},{"nodeType":"YulAssignment","src":"4403:14:15","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4411:6:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4403:4:15"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3702:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3713:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3724:4:15","type":""}],"src":"3564:859:15"},{"body":{"nodeType":"YulBlock","src":"4517:320:15","statements":[{"body":{"nodeType":"YulBlock","src":"4563:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4572:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4575:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4565:6:15"},"nodeType":"YulFunctionCall","src":"4565:12:15"},"nodeType":"YulExpressionStatement","src":"4565:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4538:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4547:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4534:3:15"},"nodeType":"YulFunctionCall","src":"4534:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4559:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4530:3:15"},"nodeType":"YulFunctionCall","src":"4530:32:15"},"nodeType":"YulIf","src":"4527:52:15"},{"nodeType":"YulVariableDeclaration","src":"4588:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4615:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4602:12:15"},"nodeType":"YulFunctionCall","src":"4602:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4592:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4668:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4677:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4680:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4670:6:15"},"nodeType":"YulFunctionCall","src":"4670:12:15"},"nodeType":"YulExpressionStatement","src":"4670:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4640:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4648:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4637:2:15"},"nodeType":"YulFunctionCall","src":"4637:30:15"},"nodeType":"YulIf","src":"4634:50:15"},{"nodeType":"YulVariableDeclaration","src":"4693:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4760:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:15"},"nodeType":"YulFunctionCall","src":"4745:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4769:7:15"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4719:25:15"},"nodeType":"YulFunctionCall","src":"4719:58:15"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"4697:8:15","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"4707:8:15","type":""}]},{"nodeType":"YulAssignment","src":"4786:18:15","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"4796:8:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4786:6:15"}]},{"nodeType":"YulAssignment","src":"4813:18:15","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4823:8:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4813:6:15"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4475:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4486:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4498:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4506:6:15","type":""}],"src":"4428:409:15"},{"body":{"nodeType":"YulBlock","src":"4912:110:15","statements":[{"body":{"nodeType":"YulBlock","src":"4958:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4967:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4960:6:15"},"nodeType":"YulFunctionCall","src":"4960:12:15"},"nodeType":"YulExpressionStatement","src":"4960:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4933:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4942:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4929:3:15"},"nodeType":"YulFunctionCall","src":"4929:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4954:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4925:3:15"},"nodeType":"YulFunctionCall","src":"4925:32:15"},"nodeType":"YulIf","src":"4922:52:15"},{"nodeType":"YulAssignment","src":"4983:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5006:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4993:12:15"},"nodeType":"YulFunctionCall","src":"4993:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4983:6:15"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4878:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4889:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4901:6:15","type":""}],"src":"4842:180:15"},{"body":{"nodeType":"YulBlock","src":"5150:422:15","statements":[{"body":{"nodeType":"YulBlock","src":"5196:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5205:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5208:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5198:6:15"},"nodeType":"YulFunctionCall","src":"5198:12:15"},"nodeType":"YulExpressionStatement","src":"5198:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5171:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5167:3:15"},"nodeType":"YulFunctionCall","src":"5167:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5192:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5163:3:15"},"nodeType":"YulFunctionCall","src":"5163:32:15"},"nodeType":"YulIf","src":"5160:52:15"},{"nodeType":"YulAssignment","src":"5221:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5244:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5231:12:15"},"nodeType":"YulFunctionCall","src":"5231:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:15"}]},{"nodeType":"YulAssignment","src":"5263:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5301:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:15"},"nodeType":"YulFunctionCall","src":"5286:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5273:12:15"},"nodeType":"YulFunctionCall","src":"5273:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5263:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"5314:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5345:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5356:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5341:3:15"},"nodeType":"YulFunctionCall","src":"5341:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5328:12:15"},"nodeType":"YulFunctionCall","src":"5328:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5318:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5403:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5412:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5415:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5405:6:15"},"nodeType":"YulFunctionCall","src":"5405:12:15"},"nodeType":"YulExpressionStatement","src":"5405:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5375:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5383:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5372:2:15"},"nodeType":"YulFunctionCall","src":"5372:30:15"},"nodeType":"YulIf","src":"5369:50:15"},{"nodeType":"YulVariableDeclaration","src":"5428:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5484:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5495:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5480:3:15"},"nodeType":"YulFunctionCall","src":"5480:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5504:7:15"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"5454:25:15"},"nodeType":"YulFunctionCall","src":"5454:58:15"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"5432:8:15","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"5442:8:15","type":""}]},{"nodeType":"YulAssignment","src":"5521:18:15","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"5531:8:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5521:6:15"}]},{"nodeType":"YulAssignment","src":"5548:18:15","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"5558:8:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5548:6:15"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5092:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5103:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5115:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5123:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5131:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5139:6:15","type":""}],"src":"5027:545:15"},{"body":{"nodeType":"YulBlock","src":"5728:481:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5738:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5748:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5742:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5759:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5777:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5788:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5773:3:15"},"nodeType":"YulFunctionCall","src":"5773:18:15"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5763:6:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5807:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5818:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5800:6:15"},"nodeType":"YulFunctionCall","src":"5800:21:15"},"nodeType":"YulExpressionStatement","src":"5800:21:15"},{"nodeType":"YulVariableDeclaration","src":"5830:17:15","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5841:6:15"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5834:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5856:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5876:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5870:5:15"},"nodeType":"YulFunctionCall","src":"5870:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5860:6:15","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5899:6:15"},{"name":"length","nodeType":"YulIdentifier","src":"5907:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5892:6:15"},"nodeType":"YulFunctionCall","src":"5892:22:15"},"nodeType":"YulExpressionStatement","src":"5892:22:15"},{"nodeType":"YulAssignment","src":"5923:25:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5934:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5945:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5930:3:15"},"nodeType":"YulFunctionCall","src":"5930:18:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5923:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"5957:29:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5975:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5983:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5971:3:15"},"nodeType":"YulFunctionCall","src":"5971:15:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5961:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5995:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6004:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5999:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6063:120:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6084:3:15"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6095:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6089:5:15"},"nodeType":"YulFunctionCall","src":"6089:13:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6077:6:15"},"nodeType":"YulFunctionCall","src":"6077:26:15"},"nodeType":"YulExpressionStatement","src":"6077:26:15"},{"nodeType":"YulAssignment","src":"6116:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6127:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"6132:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6123:3:15"},"nodeType":"YulFunctionCall","src":"6123:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6116:3:15"}]},{"nodeType":"YulAssignment","src":"6148:25:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6162:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"6170:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6158:3:15"},"nodeType":"YulFunctionCall","src":"6158:15:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6148:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6025:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"6028:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6022:2:15"},"nodeType":"YulFunctionCall","src":"6022:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6036:18:15","statements":[{"nodeType":"YulAssignment","src":"6038:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6047:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"6050:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6043:3:15"},"nodeType":"YulFunctionCall","src":"6043:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6038:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6018:3:15","statements":[]},"src":"6014:169:15"},{"nodeType":"YulAssignment","src":"6192:11:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6200:3:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6192:4:15"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5697:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5708:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5719:4:15","type":""}],"src":"5577:632:15"},{"body":{"nodeType":"YulBlock","src":"6301:167:15","statements":[{"body":{"nodeType":"YulBlock","src":"6347:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6356:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6359:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6349:6:15"},"nodeType":"YulFunctionCall","src":"6349:12:15"},"nodeType":"YulExpressionStatement","src":"6349:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6322:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6331:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6318:3:15"},"nodeType":"YulFunctionCall","src":"6318:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6343:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6314:3:15"},"nodeType":"YulFunctionCall","src":"6314:32:15"},"nodeType":"YulIf","src":"6311:52:15"},{"nodeType":"YulAssignment","src":"6372:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6395:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6382:12:15"},"nodeType":"YulFunctionCall","src":"6382:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6372:6:15"}]},{"nodeType":"YulAssignment","src":"6414:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6447:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6458:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6443:3:15"},"nodeType":"YulFunctionCall","src":"6443:18:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6424:18:15"},"nodeType":"YulFunctionCall","src":"6424:38:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6414:6:15"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6259:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6270:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6282:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6290:6:15","type":""}],"src":"6214:254:15"},{"body":{"nodeType":"YulBlock","src":"6579:371:15","statements":[{"body":{"nodeType":"YulBlock","src":"6625:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6634:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6637:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6627:6:15"},"nodeType":"YulFunctionCall","src":"6627:12:15"},"nodeType":"YulExpressionStatement","src":"6627:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6600:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6609:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6596:3:15"},"nodeType":"YulFunctionCall","src":"6596:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"6621:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6592:3:15"},"nodeType":"YulFunctionCall","src":"6592:32:15"},"nodeType":"YulIf","src":"6589:52:15"},{"nodeType":"YulVariableDeclaration","src":"6650:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6677:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6664:12:15"},"nodeType":"YulFunctionCall","src":"6664:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6654:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6730:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6739:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6742:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6732:6:15"},"nodeType":"YulFunctionCall","src":"6732:12:15"},"nodeType":"YulExpressionStatement","src":"6732:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6702:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6710:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6699:2:15"},"nodeType":"YulFunctionCall","src":"6699:30:15"},"nodeType":"YulIf","src":"6696:50:15"},{"nodeType":"YulVariableDeclaration","src":"6755:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6811:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"6822:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6807:3:15"},"nodeType":"YulFunctionCall","src":"6807:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6831:7:15"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"6781:25:15"},"nodeType":"YulFunctionCall","src":"6781:58:15"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"6759:8:15","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"6769:8:15","type":""}]},{"nodeType":"YulAssignment","src":"6848:18:15","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"6858:8:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6848:6:15"}]},{"nodeType":"YulAssignment","src":"6875:18:15","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"6885:8:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6875:6:15"}]},{"nodeType":"YulAssignment","src":"6902:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6940:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:15"},"nodeType":"YulFunctionCall","src":"6925:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6912:12:15"},"nodeType":"YulFunctionCall","src":"6912:32:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6902:6:15"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6529:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6540:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6552:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6560:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6568:6:15","type":""}],"src":"6473:477:15"},{"body":{"nodeType":"YulBlock","src":"7056:76:15","statements":[{"nodeType":"YulAssignment","src":"7066:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7078:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7089:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7074:3:15"},"nodeType":"YulFunctionCall","src":"7074:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7066:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7108:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"7119:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7101:6:15"},"nodeType":"YulFunctionCall","src":"7101:25:15"},"nodeType":"YulExpressionStatement","src":"7101:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7025:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7036:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7047:4:15","type":""}],"src":"6955:177:15"},{"body":{"nodeType":"YulBlock","src":"7243:377:15","statements":[{"body":{"nodeType":"YulBlock","src":"7289:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7298:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7301:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7291:6:15"},"nodeType":"YulFunctionCall","src":"7291:12:15"},"nodeType":"YulExpressionStatement","src":"7291:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7264:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7273:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7260:3:15"},"nodeType":"YulFunctionCall","src":"7260:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"7285:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7256:3:15"},"nodeType":"YulFunctionCall","src":"7256:32:15"},"nodeType":"YulIf","src":"7253:52:15"},{"nodeType":"YulAssignment","src":"7314:39:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7343:9:15"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7324:18:15"},"nodeType":"YulFunctionCall","src":"7324:29:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7314:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"7362:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7404:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:15"},"nodeType":"YulFunctionCall","src":"7389:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7376:12:15"},"nodeType":"YulFunctionCall","src":"7376:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7366:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7451:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7460:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7463:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7453:6:15"},"nodeType":"YulFunctionCall","src":"7453:12:15"},"nodeType":"YulExpressionStatement","src":"7453:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7423:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7431:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7420:2:15"},"nodeType":"YulFunctionCall","src":"7420:30:15"},"nodeType":"YulIf","src":"7417:50:15"},{"nodeType":"YulVariableDeclaration","src":"7476:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7532:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"7543:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7528:3:15"},"nodeType":"YulFunctionCall","src":"7528:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7552:7:15"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"7502:25:15"},"nodeType":"YulFunctionCall","src":"7502:58:15"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"7480:8:15","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"7490:8:15","type":""}]},{"nodeType":"YulAssignment","src":"7569:18:15","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"7579:8:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7569:6:15"}]},{"nodeType":"YulAssignment","src":"7596:18:15","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"7606:8:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7596:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7193:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7204:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7216:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7224:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7232:6:15","type":""}],"src":"7137:483:15"},{"body":{"nodeType":"YulBlock","src":"7901:315:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7918:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7923:66:15","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7911:6:15"},"nodeType":"YulFunctionCall","src":"7911:79:15"},"nodeType":"YulExpressionStatement","src":"7911:79:15"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8010:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8015:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8006:3:15"},"nodeType":"YulFunctionCall","src":"8006:11:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8027:2:15","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"8031:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8023:3:15"},"nodeType":"YulFunctionCall","src":"8023:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"8040:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8019:3:15"},"nodeType":"YulFunctionCall","src":"8019:88:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7999:6:15"},"nodeType":"YulFunctionCall","src":"7999:109:15"},"nodeType":"YulExpressionStatement","src":"7999:109:15"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8128:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8133:2:15","type":"","value":"21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:15"},"nodeType":"YulFunctionCall","src":"8124:12:15"},{"name":"value1","nodeType":"YulIdentifier","src":"8138:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8117:6:15"},"nodeType":"YulFunctionCall","src":"8117:28:15"},"nodeType":"YulExpressionStatement","src":"8117:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8165:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8170:2:15","type":"","value":"53"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:15"},"nodeType":"YulFunctionCall","src":"8161:12:15"},{"name":"value2","nodeType":"YulIdentifier","src":"8175:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8154:6:15"},"nodeType":"YulFunctionCall","src":"8154:28:15"},"nodeType":"YulExpressionStatement","src":"8154:28:15"},{"nodeType":"YulAssignment","src":"8191:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8202:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8207:2:15","type":"","value":"85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8198:3:15"},"nodeType":"YulFunctionCall","src":"8198:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8191:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7861:3:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7866:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7874:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7882:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7893:3:15","type":""}],"src":"7625:591:15"},{"body":{"nodeType":"YulBlock","src":"8350:198:15","statements":[{"nodeType":"YulAssignment","src":"8360:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8372:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8383:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8368:3:15"},"nodeType":"YulFunctionCall","src":"8368:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8360:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"8395:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8405:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8399:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8463:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8478:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"8486:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8474:3:15"},"nodeType":"YulFunctionCall","src":"8474:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8456:6:15"},"nodeType":"YulFunctionCall","src":"8456:34:15"},"nodeType":"YulExpressionStatement","src":"8456:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8510:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8521:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8506:3:15"},"nodeType":"YulFunctionCall","src":"8506:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8530:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"8538:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8526:3:15"},"nodeType":"YulFunctionCall","src":"8526:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8499:6:15"},"nodeType":"YulFunctionCall","src":"8499:43:15"},"nodeType":"YulExpressionStatement","src":"8499:43:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8311:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8322:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8330:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8341:4:15","type":""}],"src":"8221:327:15"},{"body":{"nodeType":"YulBlock","src":"8710:241:15","statements":[{"nodeType":"YulAssignment","src":"8720:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8732:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8743:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8728:3:15"},"nodeType":"YulFunctionCall","src":"8728:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8720:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8762:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"8773:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8755:6:15"},"nodeType":"YulFunctionCall","src":"8755:25:15"},"nodeType":"YulExpressionStatement","src":"8755:25:15"},{"nodeType":"YulVariableDeclaration","src":"8789:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8799:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8793:2:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8872:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:15"},"nodeType":"YulFunctionCall","src":"8857:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8881:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"8889:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8877:3:15"},"nodeType":"YulFunctionCall","src":"8877:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:15"},"nodeType":"YulFunctionCall","src":"8850:43:15"},"nodeType":"YulExpressionStatement","src":"8850:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8913:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8924:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:15"},"nodeType":"YulFunctionCall","src":"8909:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8933:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"8941:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8929:3:15"},"nodeType":"YulFunctionCall","src":"8929:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8902:6:15"},"nodeType":"YulFunctionCall","src":"8902:43:15"},"nodeType":"YulExpressionStatement","src":"8902:43:15"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8663:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8674:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8682:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8690:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8701:4:15","type":""}],"src":"8553:398:15"},{"body":{"nodeType":"YulBlock","src":"8988:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9005:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9008:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8998:6:15"},"nodeType":"YulFunctionCall","src":"8998:88:15"},"nodeType":"YulExpressionStatement","src":"8998:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9102:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9105:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9095:6:15"},"nodeType":"YulFunctionCall","src":"9095:15:15"},"nodeType":"YulExpressionStatement","src":"9095:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9126:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9129:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9119:6:15"},"nodeType":"YulFunctionCall","src":"9119:15:15"},"nodeType":"YulExpressionStatement","src":"9119:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8956:184:15"},{"body":{"nodeType":"YulBlock","src":"9177:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9197:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9187:6:15"},"nodeType":"YulFunctionCall","src":"9187:88:15"},"nodeType":"YulExpressionStatement","src":"9187:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9291:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9294:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9284:6:15"},"nodeType":"YulFunctionCall","src":"9284:15:15"},"nodeType":"YulExpressionStatement","src":"9284:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9315:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9318:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9308:6:15"},"nodeType":"YulFunctionCall","src":"9308:15:15"},"nodeType":"YulExpressionStatement","src":"9308:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9145:184:15"},{"body":{"nodeType":"YulBlock","src":"9441:281:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9451:51:15","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"9490:11:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9477:12:15"},"nodeType":"YulFunctionCall","src":"9477:25:15"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"9455:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"9650:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9659:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9662:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9652:6:15"},"nodeType":"YulFunctionCall","src":"9652:12:15"},"nodeType":"YulExpressionStatement","src":"9652:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"9525:18:15"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"9553:12:15"},"nodeType":"YulFunctionCall","src":"9553:14:15"},{"name":"base_ref","nodeType":"YulIdentifier","src":"9569:8:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9549:3:15"},"nodeType":"YulFunctionCall","src":"9549:29:15"},{"kind":"number","nodeType":"YulLiteral","src":"9580:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9545:3:15"},"nodeType":"YulFunctionCall","src":"9545:102:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9521:3:15"},"nodeType":"YulFunctionCall","src":"9521:127:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9514:6:15"},"nodeType":"YulFunctionCall","src":"9514:135:15"},"nodeType":"YulIf","src":"9511:155:15"},{"nodeType":"YulAssignment","src":"9675:41:15","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"9687:8:15"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"9697:18:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9683:3:15"},"nodeType":"YulFunctionCall","src":"9683:33:15"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"9675:4:15"}]}]},"name":"access_calldata_tail_t_struct$_MultiCallArgs_$657_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"9406:8:15","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"9416:11:15","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"9432:4:15","type":""}],"src":"9334:388:15"},{"body":{"nodeType":"YulBlock","src":"9821:486:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9831:51:15","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"9870:11:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9857:12:15"},"nodeType":"YulFunctionCall","src":"9857:25:15"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"9835:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10030:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10039:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10042:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10032:6:15"},"nodeType":"YulFunctionCall","src":"10032:12:15"},"nodeType":"YulExpressionStatement","src":"10032:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"9905:18:15"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"9933:12:15"},"nodeType":"YulFunctionCall","src":"9933:14:15"},{"name":"base_ref","nodeType":"YulIdentifier","src":"9949:8:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9929:3:15"},"nodeType":"YulFunctionCall","src":"9929:29:15"},{"kind":"number","nodeType":"YulLiteral","src":"9960:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9925:3:15"},"nodeType":"YulFunctionCall","src":"9925:102:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9901:3:15"},"nodeType":"YulFunctionCall","src":"9901:127:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9894:6:15"},"nodeType":"YulFunctionCall","src":"9894:135:15"},"nodeType":"YulIf","src":"9891:155:15"},{"nodeType":"YulVariableDeclaration","src":"10055:47:15","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"10073:8:15"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"10083:18:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10069:3:15"},"nodeType":"YulFunctionCall","src":"10069:33:15"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"10059:6:15","type":""}]},{"nodeType":"YulAssignment","src":"10111:30:15","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"10134:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10121:12:15"},"nodeType":"YulFunctionCall","src":"10121:20:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10111:6:15"}]},{"body":{"nodeType":"YulBlock","src":"10184:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10193:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10196:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10186:6:15"},"nodeType":"YulFunctionCall","src":"10186:12:15"},"nodeType":"YulExpressionStatement","src":"10186:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10156:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10164:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10153:2:15"},"nodeType":"YulFunctionCall","src":"10153:30:15"},"nodeType":"YulIf","src":"10150:50:15"},{"nodeType":"YulAssignment","src":"10209:25:15","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"10221:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10229:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10217:3:15"},"nodeType":"YulFunctionCall","src":"10217:17:15"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"10209:4:15"}]},{"body":{"nodeType":"YulBlock","src":"10285:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10294:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10297:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10287:6:15"},"nodeType":"YulFunctionCall","src":"10287:12:15"},"nodeType":"YulExpressionStatement","src":"10287:12:15"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"10250:4:15"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"10260:12:15"},"nodeType":"YulFunctionCall","src":"10260:14:15"},{"name":"length","nodeType":"YulIdentifier","src":"10276:6:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10256:3:15"},"nodeType":"YulFunctionCall","src":"10256:27:15"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"10246:3:15"},"nodeType":"YulFunctionCall","src":"10246:38:15"},"nodeType":"YulIf","src":"10243:58:15"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"9778:8:15","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"9788:11:15","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"9804:4:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9810:6:15","type":""}],"src":"9727:580:15"},{"body":{"nodeType":"YulBlock","src":"10359:302:15","statements":[{"body":{"nodeType":"YulBlock","src":"10458:168:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10479:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10482:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10472:6:15"},"nodeType":"YulFunctionCall","src":"10472:88:15"},"nodeType":"YulExpressionStatement","src":"10472:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10580:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10583:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10573:6:15"},"nodeType":"YulFunctionCall","src":"10573:15:15"},"nodeType":"YulExpressionStatement","src":"10573:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10608:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10611:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10601:6:15"},"nodeType":"YulFunctionCall","src":"10601:15:15"},"nodeType":"YulExpressionStatement","src":"10601:15:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10375:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"10382:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10372:2:15"},"nodeType":"YulFunctionCall","src":"10372:77:15"},"nodeType":"YulIf","src":"10369:257:15"},{"nodeType":"YulAssignment","src":"10635:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10646:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"10653:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10642:3:15"},"nodeType":"YulFunctionCall","src":"10642:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10635:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10341:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10351:3:15","type":""}],"src":"10312:349:15"},{"body":{"nodeType":"YulBlock","src":"10767:76:15","statements":[{"nodeType":"YulAssignment","src":"10777:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10789:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10800:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10785:3:15"},"nodeType":"YulFunctionCall","src":"10785:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10777:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10819:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"10830:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10812:6:15"},"nodeType":"YulFunctionCall","src":"10812:25:15"},"nodeType":"YulExpressionStatement","src":"10812:25:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10736:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10747:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10758:4:15","type":""}],"src":"10666:177:15"},{"body":{"nodeType":"YulBlock","src":"11068:159:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11085:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11090:66:15","type":"","value":"0xca11c0de11000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11078:6:15"},"nodeType":"YulFunctionCall","src":"11078:79:15"},"nodeType":"YulExpressionStatement","src":"11078:79:15"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11177:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11182:1:15","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11173:3:15"},"nodeType":"YulFunctionCall","src":"11173:11:15"},{"name":"value0","nodeType":"YulIdentifier","src":"11186:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11166:6:15"},"nodeType":"YulFunctionCall","src":"11166:27:15"},"nodeType":"YulExpressionStatement","src":"11166:27:15"},{"nodeType":"YulAssignment","src":"11202:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11213:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11218:2:15","type":"","value":"37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11209:3:15"},"nodeType":"YulFunctionCall","src":"11209:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11202:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_94b14fc7eb0c21c47cfd2257735524b475cba5e363977a9bee901f8811e078e4_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11044:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11049:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11060:3:15","type":""}],"src":"10848:379:15"},{"body":{"nodeType":"YulBlock","src":"11406:228:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11423:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11434:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11416:6:15"},"nodeType":"YulFunctionCall","src":"11416:21:15"},"nodeType":"YulExpressionStatement","src":"11416:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11457:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11468:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:15"},"nodeType":"YulFunctionCall","src":"11453:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"11473:2:15","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11446:6:15"},"nodeType":"YulFunctionCall","src":"11446:30:15"},"nodeType":"YulExpressionStatement","src":"11446:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11496:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11507:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11492:3:15"},"nodeType":"YulFunctionCall","src":"11492:18:15"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11512:34:15","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11485:6:15"},"nodeType":"YulFunctionCall","src":"11485:62:15"},"nodeType":"YulExpressionStatement","src":"11485:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11567:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11578:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11563:3:15"},"nodeType":"YulFunctionCall","src":"11563:18:15"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"11583:8:15","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11556:6:15"},"nodeType":"YulFunctionCall","src":"11556:36:15"},"nodeType":"YulExpressionStatement","src":"11556:36:15"},{"nodeType":"YulAssignment","src":"11601:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11613:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11624:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11609:3:15"},"nodeType":"YulFunctionCall","src":"11609:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11601:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11383:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11397:4:15","type":""}],"src":"11232:402:15"},{"body":{"nodeType":"YulBlock","src":"11776:150:15","statements":[{"nodeType":"YulVariableDeclaration","src":"11786:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11806:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11800:5:15"},"nodeType":"YulFunctionCall","src":"11800:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11790:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11861:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11869:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11857:3:15"},"nodeType":"YulFunctionCall","src":"11857:17:15"},{"name":"pos","nodeType":"YulIdentifier","src":"11876:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"11881:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11822:34:15"},"nodeType":"YulFunctionCall","src":"11822:66:15"},"nodeType":"YulExpressionStatement","src":"11822:66:15"},{"nodeType":"YulAssignment","src":"11897:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11908:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"11913:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11904:3:15"},"nodeType":"YulFunctionCall","src":"11904:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11897:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11752:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11757:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11768:3:15","type":""}],"src":"11639:287:15"},{"body":{"nodeType":"YulBlock","src":"12105:179:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12115:6:15"},"nodeType":"YulFunctionCall","src":"12115:21:15"},"nodeType":"YulExpressionStatement","src":"12115:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12156:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12167:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12152:3:15"},"nodeType":"YulFunctionCall","src":"12152:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"12172:2:15","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12145:6:15"},"nodeType":"YulFunctionCall","src":"12145:30:15"},"nodeType":"YulExpressionStatement","src":"12145:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12195:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12206:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12191:3:15"},"nodeType":"YulFunctionCall","src":"12191:18:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"12211:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12184:6:15"},"nodeType":"YulFunctionCall","src":"12184:59:15"},"nodeType":"YulExpressionStatement","src":"12184:59:15"},{"nodeType":"YulAssignment","src":"12252:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12264:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12275:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12260:3:15"},"nodeType":"YulFunctionCall","src":"12260:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12252:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12082:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12096:4:15","type":""}],"src":"11931:353:15"},{"body":{"nodeType":"YulBlock","src":"12410:98:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12427:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12438:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12420:6:15"},"nodeType":"YulFunctionCall","src":"12420:21:15"},"nodeType":"YulExpressionStatement","src":"12420:21:15"},{"nodeType":"YulAssignment","src":"12450:52:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12475:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12498:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:15"},"nodeType":"YulFunctionCall","src":"12483:18:15"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"12458:16:15"},"nodeType":"YulFunctionCall","src":"12458:44:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12450:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12379:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12390:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12401:4:15","type":""}],"src":"12289:219:15"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_MultiCallArgs_$657_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0))\n            tail_2 := abi_encode_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0xff00000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 1), and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_struct$_MultiCallArgs_$657_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_94b14fc7eb0c21c47cfd2257735524b475cba5e363977a9bee901f8811e078e4_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0xca11c0de11000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 5), value0)\n        end := add(pos, 37)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"669":[{"length":32,"start":2928}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0F79B6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC56CA9ED GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC56CA9ED EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xCFE10B30 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xE1D7A8E4 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xF39EC1F7 EQ PUSH2 0x3F3 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6C0F79B6 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x8653A465 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x36A JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x248B1701 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x248B1701 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x27FE1822 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x39CAB472 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x56F2A761 EQ PUSH2 0x227 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x43C9414 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x12E6BF6A EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x175 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD RETURNDATASIZE MSTORE PUSH1 0x20 RETURNDATASIZE RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x13FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x195 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x195 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x438 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44D DUP5 DUP5 DUP5 DUP5 PUSH2 0x75F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLER ADDRESS EQ DUP1 PUSH2 0x47A JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x4CC SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 POP DUP4 PUSH2 0x90A JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x4FD JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x558 DUP3 PUSH2 0x92D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 CALLER ADDRESS EQ DUP1 PUSH2 0x585 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x598 DUP4 DUP4 PUSH2 0x997 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x5C6 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x598 DUP4 DUP4 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x600 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x558 DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x639 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64E DUP6 DUP6 DUP6 DUP6 PUSH2 0xC2A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x691 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ DUP1 PUSH2 0x6D6 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6EB DUP6 DUP6 PUSH2 0xAF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D0 DUP4 DUP3 PUSH2 0xCD1 JUMP JUMPDEST CALLER ADDRESS EQ DUP1 PUSH2 0x71C JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x730 DUP4 DUP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0x1C0BF703A3415CADA9785E89E9D70314C3111AE7D8E04F33BB42EB1D264088BE PUSH1 0x55 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x80A DUP2 DUP6 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x815 DUP3 PUSH2 0x92D JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x35DA668500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP3 DUP6 DUP6 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x430FBFC2698F4E110D994ECF59C30881703DC7B8CD50BC5F12E4E48D21E144A3 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP4 DUP6 PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xCBCAE703C000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 GAS STATICCALL PUSH1 0x40 MLOAD RETURNDATASIZE DUP2 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0x98B JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST MLOAD PUSH1 0x60 SHR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B2 PUSH2 0x150B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9E5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9D0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH2 0xABC DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0xA28 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1256 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA3A PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x20 ADD CALLDATALOAD DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA62 JUMPI PUSH2 0xA62 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0xA82 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH2 0x15A7 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x90A SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0x153A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xAE4 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9EB JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP2 DUP2 SUB DUP3 PUSH1 0x0 CREATE SWAP3 POP POP POP PUSH2 0xB1C PUSH2 0xB15 DUP3 EXTCODESIZE SWAP1 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH23 0x6020363636335AFA1536363636515AF43D36363E3D36F3 PUSH1 0x48 SHL DUP2 MSTORE DUP4 PUSH1 0x17 DUP3 PUSH1 0x0 CREATE2 SWAP3 POP POP PUSH2 0xBD1 PUSH2 0xB15 DUP4 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH2 0xBDB DUP4 DUP4 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0x6690E5B52BE10A3D5820EC875C3DD3327F3077954A09F104201E40E5F7082C6 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 DUP6 DUP3 CALLDATACOPY DUP4 ADD DUP6 DUP3 DUP3 SUB DUP4 DUP10 CREATE2 SWAP3 POP POP POP PUSH2 0xC4C PUSH2 0xB15 DUP3 EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xD3ACF0DA590CFCD8F020AFD7F40B7E6E4C8BD2FC9EB7AEC9836837B667685B3A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD3B7FE100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x898 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD SWAP1 SWAP2 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP3 SWAP1 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD DUP1 DUP3 ADD PUSH1 0x40 MSTORE DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x0 DUP9 GAS CALL PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD SWAP1 POP DUP1 RETURNDATASIZE ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCA11C0DE11000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x25 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x45 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 DUP8 GAS CALL PUSH1 0x40 MLOAD RETURNDATASIZE DUP2 ADD PUSH1 0x40 MSTORE RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0xE68 JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4D0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167E PUSH1 0x29 SWAP2 CODECOPY PUSH2 0xECF JUMP JUMPDEST DUP1 PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x5E393B2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x898 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFDD DUP8 DUP4 DUP4 DUP8 PUSH2 0xFE8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x107E JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1077 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1077 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x898 JUMP JUMPDEST POP DUP2 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x4D0 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1093 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x115F PUSH1 0x20 DUP7 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1187 DUP8 DUP3 DUP9 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 DUP6 PUSH2 0x10C7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11D8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1211 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x598 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1359 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x1347 DUP6 DUP4 MLOAD PUSH2 0x11F9 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x130D JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139C DUP6 DUP3 DUP7 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1418 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1463 PUSH1 0x20 DUP5 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A4 DUP7 DUP3 DUP8 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D6 DUP5 PUSH2 0x10C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FE DUP7 DUP3 DUP8 ADD PUSH2 0x10F0 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x15DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1664 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x159D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x11D5 JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2063616C6C KECCAK256 PUSH24 0x6974682076616C7565206661696C6564A264697066735822 SLT KECCAK256 STOP EXTCODECOPY 0x5F 0xE5 EXP PUSH5 0x76C15B6846 PUSH12 0x33E357AEEC3B96721A66A5EF EXTCODEHASH 0x2F 0x26 ADDMOD 0xED 0x4A ADDRESS GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"330:5739:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3657:20:5;3651:27;3633:16;3626:53;3717:4;3699:16;3692:30;5463:194:4;;;;;;;;;;-1:-1:-1;5463:194:4;;;;;:::i;:::-;;:::i;:::-;;1403:244;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3841:89:5;;;;;;;;;;-1:-1:-1;3841:89:5;;;;;:::i;:::-;;:::i;5905:162:4:-;;;;;;;;;;-1:-1:-1;5905:162:4;;;;;:::i;:::-;;:::i;:::-;;;2857:42:15;2845:55;;;2827:74;;2815:2;2800:18;5905:162:4;2681:226:15;4847:150:4;;;;;;;;;;-1:-1:-1;4847:150:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2019:162::-;;;;;;;;;;-1:-1:-1;2019:162:4;;;;;:::i;:::-;;:::i;3938:149::-;;;;;;;;;;-1:-1:-1;3938:149:4;;;;;:::i;:::-;;:::i;3479:242::-;;;;;;:::i;:::-;;:::i;4992:111:5:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;223:829:1:-;;;;;;;;;;-1:-1:-1;223:829:1;;;;;:::i;:::-;731:234;;7923:66:15;731:234:1;;;7911:79:15;8040:66;8027:2;8023:15;;;8019:88;8006:11;;;7999:109;8124:12;;;8117:28;;;510:66:1;8161:12:15;;;8154:28;;;340:7:1;;8198:12:15;;731:234:1;;;;;;;;;;;;;692:299;;731:234;692:299;;;;;223:829;-1:-1:-1;;;;223:829:1;4635:86:5;;;;;;;;;;-1:-1:-1;4673:14:5;4708:6;;;4635:86;;4389:98;;;;;;;;;;-1:-1:-1;4465:15:5;;;;4389:98;;2671:305:4;;;;;;;;;;-1:-1:-1;2671:305:4;;;;;:::i;:::-;;:::i;5296:98:5:-;;;;;;;;;;-1:-1:-1;5370:10:5;:17;5296:98;;7101:25:15;;;7089:2;7074:18;5296:98:5;6955:177:15;4415:178:4;;;;;;;;;;-1:-1:-1;4415:178:4;;;;;:::i;:::-;;:::i;4173:107:5:-;;;;;;;;;;-1:-1:-1;4173:107:5;;;;;:::i;:::-;;:::i;5463:194:4:-;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;5605:45:4::1;5619:5;5626:8;5636:13;;5605;:45::i;:::-;5463:194:::0;;;;:::o;1403:244::-;1540:12;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;1564:18:4::1;1585:6;;1564:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;1564:27:4;;-1:-1:-1;1608:32:4::1;::::0;-1:-1:-1;1617:7:4;;-1:-1:-1;1626:6:4;;-1:-1:-1;1564:27:4;1608:8:::1;:32::i;:::-;1601:39;;;1738:1:5;1403:244:4::0;;;;;;:::o;3841:89:5:-;1675:10;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;3905:6:::1;:18:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3841:89::o;5905:162:4:-;5995:7;6021:39;6046:13;6021:24;:39::i;:::-;6014:46;5905:162;-1:-1:-1;;5905:162:4:o;4847:150::-;4939:14;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;4972:18:4::1;4983:6;;4972:10;:18::i;:::-;4965:25:::0;4847:150;-1:-1:-1;;;4847:150:4:o;2019:162::-;2109:20;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;2148:26:4::1;2162:11;;2148:13;:26::i;3938:149::-:0;4014:20;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;4061:19:4::1;4074:5;4061:12;:19::i;3479:242::-:0;3625:20;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;3672:42:4::1;3687:6;3695:5;3702:11;;3672:14;:42::i;:::-;3657:57:::0;3479:242;-1:-1:-1;;;;;3479:242:4:o;4992:111:5:-;5034:27;5086:10;5073:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4992:111;:::o;2671:305:4:-;2795:20;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;2827:26:4::1;2856;2870:11;;2856:13;:26::i;:::-;2827:55;;2892:42;2908:5;2915:18;2892:15;:42::i;4415:178::-:0;1675:10:5;1697:4;1675:27;;:52;;-1:-1:-1;4673:14:5;4708:6;;;1706:10;:21;1675:52;1667:61;;;;;;4541:45:4::1;4561:9;4572:13;;4541:19;:45::i;:::-;4415:178:::0;;;:::o;4173:107:5:-;4233:7;13365:24;;;:17;:24;;;;;;;;4259:14;13284:112;11732:663;731:234:1;;;7923:66:15;731:234:1;;;;7911:79:15;;;;11974:4:5;8027:2:15;8023:15;8040:66;8019:88;8006:11;;;7999:109;8124:12;;;8117:28;;;510:66:1;8161:12:15;;;;8154:28;;;;731:234:1;;;;;;;;;;8198:12:15;;;;731:234:1;;;692:299;;;;;11999:26:5;12009:5;12016:8;11999:9;:26::i;:::-;12035:29;12067:31;12092:5;12067:24;:31::i;:::-;12035:63;;12137:8;12112:33;;:21;:33;;;12108:178;;12168:107;;;;;8405:42:15;8474:15;;;12168:107:5;;;8456:34:15;8526:15;;8506:18;;;8499:43;8368:18;;12168:107:5;;;;;;;;12108:178;12295:41;12315:5;12322:13;;12295:19;:41::i;:::-;12351:37;;;8755:25:15;;;8799:42;8877:15;;;8872:2;8857:18;;8850:43;8929:15;;8909:18;;;8902:43;12351:37:5;;;;;;;8743:2:15;12351:37:5;;;11857:538;;11732:663;;;;:::o;5736:203::-;5856:12;5887:45;:29;;;5917:6;5925;5887:29;:45::i;119:697:11:-;206:19;237:18;:36;;;;;;;;;;;;;;;;;;;498:4;476;452:5;446:12;423:4;416:5;412:16;388:6;365:5;337:179;546:4;540:11;586:16;581:3;577:26;571:4;564:40;643:16;637:4;632:3;617:43;683:7;673:80;;722:16;717:3;710:29;673:80;789:10;785:2;781:19;;119:697;-1:-1:-1;;;;119:697:11:o;10891:374:5:-;10976:22;11032:6;11020:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11010:36;;11061:9;11056:203;11076:17;;;11056:203;;;11127:121;11153:6;;11160:1;11153:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:16;;;;;;;:::i;:::-;11187:6;;11194:1;11187:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:15;;;11220:6;;11227:1;11220:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:14;;;;;;;:::i;:::-;11127:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11127:8:5;;-1:-1:-1;;;11127:121:5:i;:::-;11114:7;11122:1;11114:10;;;;;;;;:::i;:::-;;;;;;:134;;;;11095:3;;;;;:::i;:::-;;;;11056:203;;;;10891:374;;;;:::o;6308:694::-;6391:20;6523:4;6517:11;6552:7;6687:18;6667;6662:3;6649:57;6787:28;;6864:17;;;6873:7;6852:1;6845:37;6829:53;;;;6901:54;6922:26;6935:12;13031:20;;12884:204;6922:26;:31;;6901:19;:54::i;:::-;6970:25;;2857:42:15;2845:55;;2827:74;;6970:25:5;;2815:2:15;2800:18;6970:25:5;;;;;;;6308:694;;;;:::o;8564:780::-;8633:20;8665:21;8689:14;8665:38;;8828:13;8806:20;8799:43;8872:4;8866:11;8912:4;8907:3;8903:14;8897:4;8890:28;9056:48;9052:2;9048:57;9027:3;9003:116;9170:5;9164:4;9159:3;9156:1;9148:28;9132:44;;;9195:54;9216:26;9229:12;13031:20;;12884:204;9195:54;9259:36;9275:5;9282:12;9259:15;:36::i;:::-;9310:27;;2857:42:15;2845:55;;2827:74;;9310:27:5;;2815:2:15;2800:18;9310:27:5;;;;;;;8655:689;8564:780;;;:::o;7505:841::-;7636:20;7752:4;7746:11;7781:7;7916:18;7896;7891:3;7878:57;8016:28;;8118:5;8099:17;;;8108:7;8082:6;8074:50;8058:66;;;;8143:54;8164:26;8177:12;13031:20;;12884:204;8143:54;8277:10;:22;;;;;;;-1:-1:-1;8277:22:5;;;;;;;;;8314:25;;2857:42:15;2845:55;;2827:74;;8314:25:5;;2815:2:15;2800:18;8314:25:5;;;;;;;7505:841;;;;;;:::o;12498:303::-;12648:1;12612:24;;;:17;:24;;;;;;:38;:24;:38;12608:99;;12673:23;;;;;;;;7101:25:15;;;7074:18;;12673:23:5;6955:177:15;12608:99:5;12716:10;:22;;;;;;;;;;;;;-1:-1:-1;12748:24:5;;;:17;12716:22;12748:24;;;;;:46;;;;;;;;;;;;;;12498:303::o;9673:961::-;9848:20;9841:28;9831:787;;9906:4;9900:11;9967:3;9945:20;9941:30;9935:4;9928:44;10029:20;10007;10002:3;9989:61;10326:4;10296;10250:20;10221:3;10194:1;10159:9;10128:5;10098:254;10067:537;;10406:4;10400:11;10393:18;;10467:3;10449:16;10445:26;10439:4;10432:40;10519:16;10513:4;10508:3;10493:43;10569:16;10564:3;10557:29;210:697:14;303:95;;11090:66:15;303:95:14;;;11078:79:15;362:26:14;;;11173:11:15;;;11166:27;282:18:14;;11209:12:15;;303:95:14;;;;;;;;;;;;282:116;;636:4;614;590:5;584:12;561:4;554:5;550:16;531:1;507:6;484:5;462:192;684:4;678:11;724:16;719:3;715:26;709:4;702:40;781:16;775:4;770:3;755:43;821:7;811:80;;860:16;855:3;848:29;811:80;;;433:468;210:697;;:::o;4458:254:0:-;4587:12;4618:87;4640:6;4648:4;4654:5;4618:87;;;;;;;;;;;;;;;;;:21;:87::i;13831:129:5:-;13901:5;13896:58;;13929:14;;;;;;;;;;;;;;13896:58;13831:129;:::o;4960:446:0:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;11434:2:15;5149:81:0;;;11416:21:15;11473:2;11453:18;;;11446:30;11512:34;11492:18;;;11485:62;11583:8;11563:18;;;11556:36;11609:19;;5149:81:0;11232:402:15;5149:81:0;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:0:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;1465:19;;;;7908:60;;;;;;;12133:2:15;7908:60:0;;;12115:21:15;12172:2;12152:18;;;12145:30;12211:31;12191:18;;;12184:59;12260:18;;7908:60:0;11931:353:15;7908:60:0;-1:-1:-1;8003:10:0;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;14:196:15:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;266:8;276:6;330:3;323:4;315:6;311:17;307:27;297:55;;348:1;345;338:12;297:55;-1:-1:-1;371:20:15;;414:18;403:30;;400:50;;;446:1;443;436:12;400:50;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:59;;;552:1;549;542:12;497:59;215:347;;;;;:::o;567:551::-;655:6;663;671;679;732:2;720:9;711:7;707:23;703:32;700:52;;;748:1;745;738:12;700:52;784:9;771:23;761:33;;813:38;847:2;836:9;832:18;813:38;:::i;:::-;803:48;;902:2;891:9;887:18;874:32;929:18;921:6;918:30;915:50;;;961:1;958;951:12;915:50;1000:58;1050:7;1041:6;1030:9;1026:22;1000:58;:::i;:::-;567:551;;;;-1:-1:-1;1077:8:15;-1:-1:-1;;;;567:551:15:o;1123:::-;1211:6;1219;1227;1235;1288:2;1276:9;1267:7;1263:23;1259:32;1256:52;;;1304:1;1301;1294:12;1256:52;1327:29;1346:9;1327:29;:::i;:::-;1317:39;;1403:2;1392:9;1388:18;1375:32;1365:42;;1458:2;1447:9;1443:18;1430:32;1485:18;1477:6;1474:30;1471:50;;;1517:1;1514;1507:12;1679:250;1764:1;1774:113;1788:6;1785:1;1782:13;1774:113;;;1864:11;;;1858:18;1845:11;;;1838:39;1810:2;1803:10;1774:113;;;-1:-1:-1;;1921:1:15;1903:16;;1896:27;1679:250::o;1934:329::-;1975:3;2013:5;2007:12;2040:6;2035:3;2028:19;2056:76;2125:6;2118:4;2113:3;2109:14;2102:4;2095:5;2091:16;2056:76;:::i;:::-;2177:2;2165:15;2182:66;2161:88;2152:98;;;;2252:4;2148:109;;1934:329;-1:-1:-1;;1934:329:15:o;2268:217::-;2415:2;2404:9;2397:21;2378:4;2435:44;2475:2;2464:9;2460:18;2452:6;2435:44;:::i;2490:186::-;2549:6;2602:2;2590:9;2581:7;2577:23;2573:32;2570:52;;;2618:1;2615;2608:12;2570:52;2641:29;2660:9;2641:29;:::i;2912:647::-;3030:6;3038;3091:2;3079:9;3070:7;3066:23;3062:32;3059:52;;;3107:1;3104;3097:12;3059:52;3147:9;3134:23;3176:18;3217:2;3209:6;3206:14;3203:34;;;3233:1;3230;3223:12;3203:34;3271:6;3260:9;3256:22;3246:32;;3316:7;3309:4;3305:2;3301:13;3297:27;3287:55;;3338:1;3335;3328:12;3287:55;3378:2;3365:16;3404:2;3396:6;3393:14;3390:34;;;3420:1;3417;3410:12;3390:34;3473:7;3468:2;3458:6;3455:1;3451:14;3447:2;3443:23;3439:32;3436:45;3433:65;;;3494:1;3491;3484:12;3433:65;3525:2;3517:11;;;;;3547:6;;-1:-1:-1;2912:647:15;;-1:-1:-1;;;;2912:647:15:o;3564:859::-;3724:4;3753:2;3793;3782:9;3778:18;3823:2;3812:9;3805:21;3846:6;3881;3875:13;3912:6;3904;3897:22;3950:2;3939:9;3935:18;3928:25;;4012:2;4002:6;3999:1;3995:14;3984:9;3980:30;3976:39;3962:53;;4050:2;4042:6;4038:15;4071:1;4081:313;4095:6;4092:1;4089:13;4081:313;;;4184:66;4172:9;4164:6;4160:22;4156:95;4151:3;4144:108;4275:39;4307:6;4298;4292:13;4275:39;:::i;:::-;4265:49;-1:-1:-1;4372:12:15;;;;4337:15;;;;4117:1;4110:9;4081:313;;;-1:-1:-1;4411:6:15;;3564:859;-1:-1:-1;;;;;;;3564:859:15:o;4428:409::-;4498:6;4506;4559:2;4547:9;4538:7;4534:23;4530:32;4527:52;;;4575:1;4572;4565:12;4527:52;4615:9;4602:23;4648:18;4640:6;4637:30;4634:50;;;4680:1;4677;4670:12;4634:50;4719:58;4769:7;4760:6;4749:9;4745:22;4719:58;:::i;:::-;4796:8;;4693:84;;-1:-1:-1;4428:409:15;-1:-1:-1;;;;4428:409:15:o;4842:180::-;4901:6;4954:2;4942:9;4933:7;4929:23;4925:32;4922:52;;;4970:1;4967;4960:12;4922:52;-1:-1:-1;4993:23:15;;4842:180;-1:-1:-1;4842:180:15:o;5027:545::-;5115:6;5123;5131;5139;5192:2;5180:9;5171:7;5167:23;5163:32;5160:52;;;5208:1;5205;5198:12;5160:52;5244:9;5231:23;5221:33;;5301:2;5290:9;5286:18;5273:32;5263:42;;5356:2;5345:9;5341:18;5328:32;5383:18;5375:6;5372:30;5369:50;;;5415:1;5412;5405:12;5577:632;5748:2;5800:21;;;5870:13;;5773:18;;;5892:22;;;5719:4;;5748:2;5971:15;;;;5945:2;5930:18;;;5719:4;6014:169;6028:6;6025:1;6022:13;6014:169;;;6089:13;;6077:26;;6158:15;;;;6123:12;;;;6050:1;6043:9;6014:169;;;-1:-1:-1;6200:3:15;;5577:632;-1:-1:-1;;;;;;5577:632:15:o;6214:254::-;6282:6;6290;6343:2;6331:9;6322:7;6318:23;6314:32;6311:52;;;6359:1;6356;6349:12;6311:52;6395:9;6382:23;6372:33;;6424:38;6458:2;6447:9;6443:18;6424:38;:::i;:::-;6414:48;;6214:254;;;;;:::o;6473:477::-;6552:6;6560;6568;6621:2;6609:9;6600:7;6596:23;6592:32;6589:52;;;6637:1;6634;6627:12;6589:52;6677:9;6664:23;6710:18;6702:6;6699:30;6696:50;;;6742:1;6739;6732:12;6696:50;6781:58;6831:7;6822:6;6811:9;6807:22;6781:58;:::i;:::-;6858:8;;6755:84;;-1:-1:-1;6940:2:15;6925:18;;;;6912:32;;6473:477;-1:-1:-1;;;;6473:477:15:o;7137:483::-;7216:6;7224;7232;7285:2;7273:9;7264:7;7260:23;7256:32;7253:52;;;7301:1;7298;7291:12;7253:52;7324:29;7343:9;7324:29;:::i;:::-;7314:39;;7404:2;7393:9;7389:18;7376:32;7431:18;7423:6;7420:30;7417:50;;;7463:1;7460;7453:12;7417:50;7502:58;7552:7;7543:6;7532:9;7528:22;7502:58;:::i;:::-;7137:483;;7579:8;;-1:-1:-1;7476:84:15;;-1:-1:-1;;;;7137:483:15:o;8956:184::-;9008:77;9005:1;8998:88;9105:4;9102:1;9095:15;9129:4;9126:1;9119:15;9145:184;9197:77;9194:1;9187:88;9294:4;9291:1;9284:15;9318:4;9315:1;9308:15;9334:388;9432:4;9490:11;9477:25;9580:66;9569:8;9553:14;9549:29;9545:102;9525:18;9521:127;9511:155;;9662:1;9659;9652:12;9511:155;9683:33;;;;;9334:388;-1:-1:-1;;9334:388:15:o;9727:580::-;9804:4;9810:6;9870:11;9857:25;9960:66;9949:8;9933:14;9929:29;9925:102;9905:18;9901:127;9891:155;;10042:1;10039;10032:12;9891:155;10069:33;;10121:20;;;-1:-1:-1;10164:18:15;10153:30;;10150:50;;;10196:1;10193;10186:12;10150:50;10229:4;10217:17;;-1:-1:-1;10260:14:15;10256:27;;;10246:38;;10243:58;;;10297:1;10294;10287:12;10312:349;10351:3;10382:66;10375:5;10372:77;10369:257;;10482:77;10479:1;10472:88;10583:4;10580:1;10573:15;10611:4;10608:1;10601:15;10369:257;-1:-1:-1;10653:1:15;10642:13;;10312:349::o;11639:287::-;11768:3;11806:6;11800:13;11822:66;11881:6;11876:3;11869:4;11861:6;11857:17;11822:66;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1170400","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","callAny(address,uint256,bytes)":"infinite","contracts()":"infinite","deployCreate(bytes)":"infinite","deployCreate2(uint256,bytes32,bytes)":"infinite","deployCreateAndRegister(bytes,bytes32)":"infinite","deployProxy(bytes32)":"infinite","getImplementation()":"2396","getMetamorphicContractAddress(bytes32,address)":"648","getNumContracts()":"2324","getProxyImplementation(address)":"infinite","initializeContract(address,bytes)":"infinite","lookup(bytes32)":"2572","multiCall((address,uint256,bytes)[])":"infinite","owner()":"2374","setOwner(address)":"26754","upgradeProxy(bytes32,address,bytes)":"infinite"}},"methodIdentifiers":{"callAny(address,uint256,bytes)":"12e6bf6a","contracts()":"6c0f79b6","deployCreate(bytes)":"27fe1822","deployCreate2(uint256,bytes32,bytes)":"56f2a761","deployCreateAndRegister(bytes,bytes32)":"c56ca9ed","deployProxy(bytes32)":"39cab472","getImplementation()":"aaf10f42","getMetamorphicContractAddress(bytes32,address)":"8653a465","getNumContracts()":"cfe10b30","getProxyImplementation(address)":"204e1c7a","initializeContract(address,bytes)":"e1d7a8e4","lookup(bytes32)":"f39ec1f7","multiCall((address,uint256,bytes)[])":"248b1701","owner()":"8da5cb5b","setOwner(address)":"13af4035","upgradeProxy(bytes32,address,bytes)":"043c9414"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CodeSizeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"IncorrectProxyImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"SaltAlreadyInUse\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedRaw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedStatic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newlogicAddr\",\"type\":\"address\"}],\"name\":\"UpgradedProxy\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"cdata_\",\"type\":\"bytes\"}],\"name\":\"callAny\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"contracts_\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployCode_\",\"type\":\"bytes\"}],\"name\":\"deployCreate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"deployCode_\",\"type\":\"bytes\"}],\"name\":\"deployCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployCode_\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"deployCreateAndRegister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"deployProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getMetamorphicContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress_\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData_\",\"type\":\"bytes\"}],\"name\":\"initializeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"lookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ProxyFactoryBase.MultiCallArgs[]\",\"name\":\"cdata_\",\"type\":\"tuple[]\"}],\"name\":\"multiCall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImpl_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData_\",\"type\":\"bytes\"}],\"name\":\"upgradeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:salt\":\"ProxyFactory\",\"kind\":\"dev\",\"methods\":{\"callAny(address,uint256,bytes)\":{\"params\":{\"cdata_\":\": Hex encoded state with function signature + arguments of the target function to be called\",\"target_\":\": the address of the contract to be called\",\"value_\":\": value in WEIs to send together the call\"},\"returns\":{\"_0\":\"the return of the calls as a byte array\"}},\"constructor\":{\"details\":\"The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory.\"},\"contracts()\":{\"details\":\"contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory\",\"returns\":{\"contracts_\":\"the array of salts associated with all the contracts deployed with this factory\"}},\"deployCreate(bytes)\":{\"params\":{\"deployCode_\":\"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)\"},\"returns\":{\"contractAddr\":\"the deployed contract address\"}},\"deployCreate2(uint256,bytes32,bytes)\":{\"details\":\"deployCreate2 allows the owner to deploy contracts with deterministic address through the factory\",\"params\":{\"deployCode_\":\"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)\",\"salt_\":\"salt used to determine the final determinist address for the deployed contract\",\"value_\":\"endowment value in WEIS for the created contract\"},\"returns\":{\"contractAddr\":\"the deployed contract address\"}},\"deployCreateAndRegister(bytes,bytes32)\":{\"params\":{\"deployCode_\":\"Hex encoded state with the deployment code of the contract to be deployed + constructors' args (if any)\",\"salt_\":\"salt used to determine the final determinist address for the deployed contract\"},\"returns\":{\"contractAddr\":\"the deployed contract address\"}},\"deployProxy(bytes32)\":{\"details\":\"deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\",\"params\":{\"salt_\":\"salt used to determine the final determinist address for the deployed contract\"}},\"getImplementation()\":{\"details\":\"getImplementation is public getter function for the _owner account address\"},\"getNumContracts()\":{\"details\":\"getNumContracts getter function for retrieving the total number of contracts deployed with this factory\",\"returns\":{\"_0\":\"the length of the contract array\"}},\"getProxyImplementation(address)\":{\"params\":{\"proxyAddress_\":\"the address of the proxy\"},\"returns\":{\"_0\":\"the address of implementation/logic contract used by the proxy\"}},\"initializeContract(address,bytes)\":{\"details\":\"initializeContract allows the owner/delegator to initialize contracts deployed via factory\",\"params\":{\"contract_\":\"address of the contract that will be initialized\",\"initCallData_\":\"Hex encoded initialization function signature + parameters to initialize the deployed contract\"}},\"lookup(bytes32)\":{\"params\":{\"salt_\":\": Custom NatSpec tag @custom:salt at the top of the contract solidity file\"}},\"multiCall((address,uint256,bytes)[])\":{\"details\":\"multiCall allows EOA to make multiple function calls within a single transaction impersonating the factory\",\"params\":{\"cdata_\":\": array of hex encoded state with the function calls (function signature + arguments)\"}},\"owner()\":{\"details\":\"owner is public getter function for the _owner account address\",\"returns\":{\"owner_\":\"address of the owner account\"}},\"setOwner(address)\":{\"details\":\"Sets the new owner\",\"params\":{\"newOwner_\":\": address of the new owner\"}},\"upgradeProxy(bytes32,address,bytes)\":{\"details\":\"upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\",\"params\":{\"initCallData_\":\"Hex encoded initialization function signature + parameters to initialize the new implementation contract\",\"newImpl_\":\"address of the new contract that contains the new implementation logic\",\"salt_\":\"salt used to determine the final determinist address for the deployed proxy contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"callAny(address,uint256,bytes)\":{\"notice\":\"callAny allows EOA to call function impersonating the factory address\"},\"deployCreate(bytes)\":{\"notice\":\"deployCreate allows the owner to deploy raw contracts through the factory using non-deterministic address generation (create OpCode)\"},\"deployCreateAndRegister(bytes,bytes32)\":{\"notice\":\"allows the owner to deploy contracts through the factory using non-deterministic address generation and record the address to external contract mapping\"},\"getProxyImplementation(address)\":{\"notice\":\"getter function for retrieving the implementation address of an AliceNet proxy.\"},\"lookup(bytes32)\":{\"notice\":\"lookup allows anyone interacting with the contract to get the address of contract specified by its salt_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyFactory.sol\":\"ProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nerror IncorrectProxyImplementation(address current, address expected); // error for when the proxy implementation is not the expected one\\nerror CodeSizeZero(); // error for when the deployed contract code size is zero\\nerror SaltAlreadyInUse(bytes32 salt); // error for when another contract has already been deployed with the same salt\\nerror Unauthorized(); // error for when the caller is not authorized to perform the action\\n\",\"keccak256\":\"0x4d4b4dad6da3774ea06528ab69b551bf65f46a9cfc6d54fc840de3f5f12ecee5\",\"license\":\"MIT-open-group\"},\"contracts/ProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\nimport \\\"./DeterministicAddress.sol\\\";\\nimport \\\"./proxy/Proxy.sol\\\";\\nimport \\\"./ProxyFactoryBase.sol\\\";\\n\\n/**\\n * @title ProxyFactory\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\\n */\\n/// @custom:salt ProxyFactory\\ncontract ProxyFactory is ProxyFactoryBase {\\n    /**\\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\\n     * account will be set as the first owner of the factory.\\n     */\\n    constructor() ProxyFactoryBase() {}\\n\\n    /**\\n     * @notice callAny allows EOA to call function impersonating the factory address\\n     * @param target_: the address of the contract to be called\\n     * @param value_: value in WEIs to send together the call\\n     * @param cdata_: Hex encoded state with function signature + arguments of the target function to be called\\n     * @return the return of the calls as a byte array\\n     */\\n    function callAny(\\n        address target_,\\n        uint256 value_,\\n        bytes calldata cdata_\\n    ) public payable onlyOwner returns (bytes memory) {\\n        bytes memory cdata = cdata_;\\n        return _callAny(target_, value_, cdata);\\n    }\\n\\n    /**\\n     * @notice deployCreate allows the owner to deploy raw contracts through the factory using\\n     * non-deterministic address generation (create OpCode)\\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function deployCreate(\\n        bytes calldata deployCode_\\n    ) public onlyOwner returns (address contractAddr) {\\n        return _deployCreate(deployCode_);\\n    }\\n\\n    /**\\n     * @notice allows the owner to deploy contracts through the factory using\\n     * non-deterministic address generation and record the address to external contract mapping\\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @return contractAddr the deployed contract address\\n     */\\n    function deployCreateAndRegister(\\n        bytes calldata deployCode_,\\n        bytes32 salt_\\n    ) public onlyOwner returns (address contractAddr) {\\n        address newContractAddress = _deployCreate(deployCode_);\\n        _addNewContract(salt_, newContractAddress);\\n        return newContractAddress;\\n    }\\n\\n    /**\\n     * @dev deployCreate2 allows the owner to deploy contracts with deterministic address\\n     * through the factory\\n     * @param value_ endowment value in WEIS for the created contract\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param deployCode_ Hex encoded state with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function deployCreate2(\\n        uint256 value_,\\n        bytes32 salt_,\\n        bytes calldata deployCode_\\n    ) public payable onlyOwner returns (address contractAddr) {\\n        contractAddr = _deployCreate2(value_, salt_, deployCode_);\\n    }\\n\\n    /**\\n     * @dev deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     */\\n    function deployProxy(\\n        bytes32 salt_\\n    ) public onlyOwner returns (address contractAddr) {\\n        contractAddr = _deployProxy(salt_);\\n    }\\n\\n    /**\\n     * @dev initializeContract allows the owner/delegator to initialize contracts deployed via factory\\n     * @param contract_ address of the contract that will be initialized\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * deployed contract\\n     */\\n    function initializeContract(\\n        address contract_,\\n        bytes calldata initCallData_\\n    ) public onlyOwner {\\n        _initializeContract(contract_, initCallData_);\\n    }\\n\\n    /**\\n     * @dev multiCall allows EOA to make multiple function calls within a single transaction\\n     * impersonating the factory\\n     * @param cdata_: array of hex encoded state with the function calls (function signature + arguments)\\n     */\\n    function multiCall(\\n        MultiCallArgs[] calldata cdata_\\n    ) public onlyOwner returns (bytes[] memory) {\\n        return _multiCall(cdata_);\\n    }\\n\\n    /**\\n     * @dev upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\\n     * @param newImpl_ address of the new contract that contains the new implementation logic\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * new implementation contract\\n     */\\n    function upgradeProxy(\\n        bytes32 salt_,\\n        address newImpl_,\\n        bytes calldata initCallData_\\n    ) public onlyOwner {\\n        _upgradeProxy(salt_, newImpl_, initCallData_);\\n    }\\n\\n    /**\\n     * @notice getter function for retrieving the implementation address of an AliceNet proxy.\\n     * @param proxyAddress_ the address of the proxy\\n     * @return the address of implementation/logic contract used by the proxy\\n     */\\n    function getProxyImplementation(\\n        address proxyAddress_\\n    ) public view returns (address) {\\n        return __getProxyImplementation(proxyAddress_);\\n    }\\n}\\n\",\"keccak256\":\"0xdecf7f811dd8e5d9243f37e1614bee0ccabb14821e2a348eb9e3df4f956b2a5b\",\"license\":\"MIT-open-group\"},\"contracts/ProxyFactoryBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\nimport \\\"./proxy/Proxy.sol\\\";\\nimport \\\"./DeterministicAddress.sol\\\";\\nimport \\\"./proxy/ProxyUpgrader.sol\\\";\\nimport \\\"./proxy/IProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"contracts/Errors.sol\\\";\\nimport \\\"contracts/proxy/ProxyImplementationGetter.sol\\\";\\n\\n/**\\n * @title ProxyFactoryBase\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyFactoryBase is\\n    DeterministicAddress,\\n    ProxyUpgrader,\\n    ProxyImplementationGetter\\n{\\n    using Address for address;\\n\\n    struct MultiCallArgs {\\n        address target;\\n        uint256 value;\\n        bytes data;\\n    }\\n\\n    /**\\n    @dev owner role for privileged access to functions\\n    */\\n    address private _owner;\\n\\n    /**\\n    @dev array to store list of contract salts\\n    */\\n    bytes32[] private _contracts;\\n\\n    /**\\n    @dev slot for storing implementation address\\n    */\\n    address private _implementation;\\n\\n    address private immutable _proxyTemplate;\\n\\n    bytes8 private constant _UNIVERSAL_DEPLOY_CODE = 0x38585839386009f3;\\n\\n    mapping(bytes32 => address) internal _contractRegistry;\\n\\n    /**\\n     *@dev events that notify of contract deployment\\n     */\\n    event Deployed(bytes32 salt, address contractAddr);\\n    event DeployedTemplate(address contractAddr);\\n    event DeployedStatic(address contractAddr);\\n    event DeployedRaw(address contractAddr);\\n    event DeployedProxy(address contractAddr);\\n    event UpgradedProxy(bytes32 salt, address proxyAddr, address newlogicAddr);\\n\\n    // modifier restricts caller to owner or self via multicall\\n    modifier onlyOwner() {\\n        require(msg.sender == address(this) || msg.sender == owner());\\n        _;\\n    }\\n\\n    /**\\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\\n     * account will be set as the first owner of the factory.\\n     */\\n    constructor() {\\n        bytes memory proxyDeployCode = abi.encodePacked(\\n            //8 byte code copy constructor code\\n            _UNIVERSAL_DEPLOY_CODE,\\n            type(Proxy).creationCode,\\n            bytes32(uint256(uint160(address(this))))\\n        );\\n        //variable to store the address created from create(the location of the proxy template contract)\\n        address addr;\\n        assembly (\\\"memory-safe\\\") {\\n            //deploys the proxy template contract\\n            addr := create(\\n                0,\\n                add(proxyDeployCode, 0x20),\\n                mload(proxyDeployCode)\\n            )\\n            if iszero(addr) {\\n                //if contract creation fails, we want to return any err messages\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                //revert and return errors\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n        //State var that stores the proxyTemplate address\\n        _proxyTemplate = addr;\\n        //State var that stores the _owner address\\n        _owner = msg.sender;\\n    }\\n\\n    // solhint-disable payable-fallback\\n    /**\\n     * @dev fallback function returns the address of the most recent deployment of a template\\n     */\\n    fallback() external {\\n        assembly {\\n            mstore(returndatasize(), sload(_implementation.slot))\\n            return(returndatasize(), 0x20)\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the new owner\\n     * @param newOwner_: address of the new owner\\n     */\\n    function setOwner(address newOwner_) public onlyOwner {\\n        _owner = newOwner_;\\n    }\\n\\n    /**\\n     * @notice lookup allows anyone interacting with the contract to get the address of contract specified\\n     * by its salt_\\n     * @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file\\n     */\\n    function lookup(bytes32 salt_) public view virtual returns (address) {\\n        return _lookup(salt_);\\n    }\\n\\n    /**\\n     * @dev getImplementation is public getter function for the _owner account address\\n     */\\n    function getImplementation() public view returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev owner is public getter function for the _owner account address\\n     * @return owner_ address of the owner account\\n     */\\n    function owner() public view returns (address owner_) {\\n        owner_ = _owner;\\n    }\\n\\n    /**\\n     * @dev contracts is public getter that gets the array of salts associated with all the contracts\\n     * deployed with this factory\\n     * @return contracts_ the array of salts associated with all the contracts deployed with this\\n     * factory\\n     */\\n    function contracts() public view returns (bytes32[] memory contracts_) {\\n        contracts_ = _contracts;\\n    }\\n\\n    /**\\n     * @dev getNumContracts getter function for retrieving the total number of contracts\\n     * deployed with this factory\\n     * @return the length of the contract array\\n     */\\n    function getNumContracts() public view returns (uint256) {\\n        return _contracts.length;\\n    }\\n\\n    /**\\n     * @dev _callAny allows EOA to call function impersonating the factory address\\n     * @param target_: the address of the contract to be called\\n     * @param value_: value in WEIs to send together the call\\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\\n     */\\n    function _callAny(\\n        address target_,\\n        uint256 value_,\\n        bytes memory cdata_\\n    ) internal returns (bytes memory) {\\n        return target_.functionCallWithValue(cdata_, value_);\\n    }\\n\\n    /**\\n     * @dev _deployCreate allows the owner to deploy raw contracts through the factory using\\n     * non-deterministic address generation (create OpCode)\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate(\\n        bytes calldata deployCode_\\n    ) internal returns (address contractAddr) {\\n        assembly (\\\"memory-safe\\\") {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\\n        }\\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\\n        emit DeployedRaw(contractAddr);\\n    }\\n\\n    /**\\n     * @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\\n     * factory\\n     * @param value_ endowment value in WEIS for the created contract\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate2(\\n        uint256 value_,\\n        bytes32 salt_,\\n        bytes calldata deployCode_\\n    ) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create2(value_, basePtr, sub(ptr, basePtr), salt_)\\n        }\\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\\n        //record the contract salt to the _contracts array for lookup\\n        _contracts.push(salt_);\\n        emit DeployedRaw(contractAddr);\\n    }\\n\\n    /**\\n     * @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     */\\n    function _deployProxy(\\n        bytes32 salt_\\n    ) internal returns (address contractAddr) {\\n        address proxyTemplate = _proxyTemplate;\\n        assembly {\\n            // store proxy template address as implementation,\\n            sstore(_implementation.slot, proxyTemplate)\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, 0x20))\\n            // put metamorphic code as initCode\\n            // push1 20\\n            mstore(\\n                ptr,\\n                shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3)\\n            )\\n            contractAddr := create2(0, ptr, 0x17, salt_)\\n        }\\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\\n        _addNewContract(salt_, contractAddr);\\n        emit DeployedProxy(contractAddr);\\n    }\\n\\n    /**\\n     * @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\\n     * @param contract_ address of the contract that will be initialized\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * deployed contract\\n     */\\n    function _initializeContract(\\n        address contract_,\\n        bytes calldata initCallData_\\n    ) internal {\\n        assembly (\\\"memory-safe\\\") {\\n            if iszero(iszero(initCallData_.length)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(initCallData_.length, ptr))\\n                calldatacopy(ptr, initCallData_.offset, initCallData_.length)\\n                if iszero(\\n                    call(\\n                        gas(),\\n                        contract_,\\n                        0,\\n                        ptr,\\n                        initCallData_.length,\\n                        0x00,\\n                        0x00\\n                    )\\n                ) {\\n                    ptr := mload(0x40)\\n                    mstore(0x40, add(returndatasize(), ptr))\\n                    returndatacopy(ptr, 0x00, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice _multiCall allows EOA to make multiple function calls within a single transaction\\n     * impersonating the factory\\n     * @param cdata_: array of abi encoded data with the function calls (function signature + arguments)\\n     */\\n    function _multiCall(\\n        MultiCallArgs[] calldata cdata_\\n    ) internal returns (bytes[] memory results) {\\n        results = new bytes[](cdata_.length);\\n        for (uint256 i = 0; i < cdata_.length; i++) {\\n            results[i] = _callAny(\\n                cdata_[i].target,\\n                cdata_[i].value,\\n                cdata_[i].data\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\\n     * @param newImpl_ address of the new contract that contains the new implementation logic\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * new implementation contract\\n     */\\n    function _upgradeProxy(\\n        bytes32 salt_,\\n        address newImpl_,\\n        bytes calldata initCallData_\\n    ) internal {\\n        address proxy = DeterministicAddress.getMetamorphicContractAddress(\\n            salt_,\\n            address(this)\\n        );\\n        __upgrade(proxy, newImpl_);\\n        address currentImplementation = __getProxyImplementation(proxy);\\n        if (currentImplementation != newImpl_) {\\n            revert IncorrectProxyImplementation(\\n                currentImplementation,\\n                newImpl_\\n            );\\n        }\\n        _initializeContract(proxy, initCallData_);\\n        emit UpgradedProxy(salt_, proxy, newImpl_);\\n    }\\n\\n    /// Internal function to add a new address and \\\"pseudo\\\" salt to the externalContractRegistry\\n    function _addNewContract(\\n        bytes32 salt_,\\n        address newContractAddress_\\n    ) internal {\\n        if (_contractRegistry[salt_] != address(0)) {\\n            revert SaltAlreadyInUse(salt_);\\n        }\\n        _contracts.push(salt_);\\n        _contractRegistry[salt_] = newContractAddress_;\\n    }\\n\\n    /**\\n     * @notice Aux function to return the external code size\\n     */\\n    function _extCodeSize(\\n        address target_\\n    ) internal view returns (uint256 size) {\\n        assembly (\\\"memory-safe\\\") {\\n            size := extcodesize(target_)\\n        }\\n        return size;\\n    }\\n\\n    // lookup allows anyone interacting with the contract to get the address of contract specified by\\n    // its salt_. Returns address(0) in case a contract for that salt was not deployed.\\n    function _lookup(bytes32 salt_) internal view returns (address) {\\n        return _contractRegistry[salt_];\\n    }\\n\\n    /**\\n     * @notice _requireAuth reverts if false and returns unauthorized error message\\n     * @param isOk_ boolean false to cause revert\\n     */\\n    function _requireAuth(bool isOk_) internal pure {\\n        if (!isOk_) {\\n            revert Unauthorized();\\n        }\\n    }\\n\\n    /**\\n     * @notice _codeSizeZeroRevert reverts if false and returns csize0 error message\\n     * @param isOk_ boolean false to cause revert\\n     */\\n    function _codeSizeZeroRevert(bool isOk_) internal pure {\\n        if (!isOk_) {\\n            revert CodeSizeZero();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf532a0acbba23ca845d25e4c69ccb8ca1e6147b661ca5e4c1f54e91a491285f\",\"license\":\"MIT-open-group\"},\"contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\ninterface IProxy {\\n    function getImplementationAddress() external view returns (address);\\n}\",\"keccak256\":\"0xc347986b3d808c671158d689c9ad8a3a9e5f4a78efd5496de3d2777396f9547e\",\"license\":\"MIT-open-group\"},\"contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nimport \\\"contracts/DeterministicAddress.sol\\\";\\n\\n/**\\n * @title Proxy\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\\n */\\n/**\\n * @notice Proxy is a delegatecall reverse proxy implementation that is secure against function\\n * collision.\\n *\\n * The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in\\n * it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded\\n * using the internal mechanism. This does not prevent the implementation from upgrading the proxy\\n * by changing this slot.\\n *\\n * The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the\\n * factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>);\\n *\\n * The proxy can return its implementation address by calling it using the format\\n * abi.encodePacked(hex'0cbcae703c');\\n *\\n * All other calls will be proxied through to the implementation.\\n *\\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that\\n * the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must\\n * carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the\\n * proxy.\\n *\\n * @dev RUN OPTIMIZER OFF\\n */\\ncontract Proxy {\\n    address private immutable _factory;\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /// Delegates calls to proxy implementation\\n    function _fallback() internal {\\n        // make local copy of factory since immutables are not accessible in assembly as of yet\\n        address factory = _factory;\\n        assembly (\\\"memory-safe\\\") {\\n            // check if the calldata has the special signatures to access the proxy functions. To\\n            // avoid collision the signatures for the proxy function are 5 bytes long (instead of\\n            // the normal 4).\\n            if or(eq(calldatasize(), 0x25), eq(calldatasize(), 0x5)) {\\n                {\\n                    let selector := shr(216, calldataload(0x00))\\n                    switch selector\\n                    // getImplementationAddress()\\n                    case 0x0cbcae703c {\\n                        let ptr := mload(0x40)\\n                        mstore(ptr, getImplementationAddress())\\n                        return(ptr, 0x14)\\n                    }\\n                    // setImplementationAddress()\\n                    case 0xca11c0de11 {\\n                        // revert in case user is not factory/admin\\n                        if iszero(eq(caller(), factory)) {\\n                            revertASM(\\\"unauthorized\\\", 12)\\n                        }\\n                        // if caller is factory, and has 0xca11c0de00<address> as calldata,\\n                        // run admin logic and return\\n                        setImplementationAddress()\\n                    }\\n                    default {\\n                        revertASM(\\\"function not found\\\", 18)\\n                    }\\n                }\\n            }\\n            // admin logic was not run so fallthrough to delegatecall\\n            passthrough()\\n\\n            ///////////// Functions ///////////////\\n\\n            function revertASM(str, len) {\\n                let ptr := mload(0x40)\\n                let startPtr := ptr\\n                mstore(ptr, hex\\\"08c379a0\\\") // keccak256('Error(string)')[0:4]\\n                ptr := add(ptr, 0x4)\\n                mstore(ptr, 0x20)\\n                ptr := add(ptr, 0x20)\\n                mstore(ptr, len) // string length\\n                ptr := add(ptr, 0x20)\\n                mstore(ptr, str)\\n                ptr := add(ptr, 0x20)\\n                revert(startPtr, sub(ptr, startPtr))\\n            }\\n\\n            function getImplementationAddress() -> implAddr {\\n                implAddr := shl(\\n                    96,\\n                    and(\\n                        sload(not(0x00)),\\n                        0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                    )\\n                )\\n            }\\n\\n            // updateImplementation is the builtin logic to change the implementation\\n            function setImplementationAddress() {\\n                // check if the upgrade functionality is locked.\\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10deadc0de) {\\n                    revertASM(\\\"update locked\\\", 13)\\n                }\\n                // this is an assignment to implementation\\n                let newImpl := shr(96, shl(96, calldataload(0x05)))\\n                // store address into slot\\n                sstore(not(0x00), newImpl)\\n                // stop to not fall into the default case of the switch selector\\n                stop()\\n            }\\n\\n            // passthrough is the passthrough logic to delegate to the implementation\\n            function passthrough() {\\n                let logicAddress := sload(not(0x00))\\n                if iszero(logicAddress) {\\n                    revertASM(\\\"logic not set\\\", 13)\\n                }\\n                // load free memory pointer\\n                let ptr := mload(0x40)\\n                // allocate memory proportionate to calldata\\n                mstore(0x40, add(ptr, calldatasize()))\\n                // copy calldata into memory\\n                calldatacopy(ptr, 0x00, calldatasize())\\n                let ret := delegatecall(\\n                    gas(),\\n                    logicAddress,\\n                    ptr,\\n                    calldatasize(),\\n                    0x00,\\n                    0x00\\n                )\\n                returndatacopy(ptr, 0x00, returndatasize())\\n                if iszero(ret) {\\n                    revert(ptr, returndatasize())\\n                }\\n                return(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a8897b127757b03568269f0eff6742ea27988880a04baafecf409df6ab7f193\",\"license\":\"MIT-open-group\"},\"contracts/proxy/ProxyImplementationGetter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nabstract contract ProxyImplementationGetter {\\n    function __getProxyImplementation(\\n        address _proxy\\n    ) internal view returns (address implAddress) {\\n        bytes memory cdata = hex\\\"0cbcae703c\\\";\\n        assembly (\\\"memory-safe\\\") {\\n            let success := staticcall(\\n                gas(),\\n                _proxy,\\n                add(cdata, 0x20),\\n                mload(cdata),\\n                0x00,\\n                0x00\\n            )\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, returndatasize()))\\n            returndatacopy(ptr, 0x00, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n            implAddress := shr(96, mload(ptr))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcbc560c3969890872ab8f65d798b714fe7969a81b663632d2554453c7b8cd2da\",\"license\":\"MIT-open-group\"},\"contracts/proxy/ProxyUpgrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title ProxyUpgrader\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyUpgrader {\\n    function __upgrade(address _proxy, address _newImpl) internal {\\n        bytes memory cdata = abi.encodePacked(\\n            hex\\\"ca11c0de11\\\",\\n            uint256(uint160(_newImpl))\\n        );\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(\\n                gas(),\\n                _proxy,\\n                0,\\n                add(cdata, 0x20),\\n                mload(cdata),\\n                0x00,\\n                0x00\\n            )\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, returndatasize()))\\n            returndatacopy(ptr, 0x00, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x14c677421afe6ad998c9c67ecb69e7d15b843ff5dec0a3b30a09f7662382cc09\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[{"astId":660,"contract":"contracts/ProxyFactory.sol:ProxyFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":664,"contract":"contracts/ProxyFactory.sol:ProxyFactory","label":"_contracts","offset":0,"slot":"1","type":"t_array(t_bytes32)dyn_storage"},{"astId":667,"contract":"contracts/ProxyFactory.sol:ProxyFactory","label":"_implementation","offset":0,"slot":"2","type":"t_address"},{"astId":676,"contract":"contracts/ProxyFactory.sol:ProxyFactory","label":"_contractRegistry","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"}}},"userdoc":{"kind":"user","methods":{"callAny(address,uint256,bytes)":{"notice":"callAny allows EOA to call function impersonating the factory address"},"deployCreate(bytes)":{"notice":"deployCreate allows the owner to deploy raw contracts through the factory using non-deterministic address generation (create OpCode)"},"deployCreateAndRegister(bytes,bytes32)":{"notice":"allows the owner to deploy contracts through the factory using non-deterministic address generation and record the address to external contract mapping"},"getProxyImplementation(address)":{"notice":"getter function for retrieving the implementation address of an AliceNet proxy."},"lookup(bytes32)":{"notice":"lookup allows anyone interacting with the contract to get the address of contract specified by its salt_"}},"version":1}}},"contracts/ProxyFactoryBase.sol":{"ProxyFactoryBase":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"},{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"Deployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedRaw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedStatic","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"contractAddr","type":"address"}],"name":"DeployedTemplate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"},{"indexed":false,"internalType":"address","name":"proxyAddr","type":"address"},{"indexed":false,"internalType":"address","name":"newlogicAddr","type":"address"}],"name":"UpgradedProxy","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"name":"contracts","outputs":[{"internalType":"bytes32[]","name":"contracts_","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_salt","type":"bytes32"},{"internalType":"address","name":"_factory","type":"address"}],"name":"getMetamorphicContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumContracts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt_","type":"bytes32"}],"name":"lookup","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner_","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)","events":{"Deployed(bytes32,address)":{"details":"events that notify of contract deployment"}},"kind":"dev","methods":{"constructor":{"details":"The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory."},"contracts()":{"details":"contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory","returns":{"contracts_":"the array of salts associated with all the contracts deployed with this factory"}},"getImplementation()":{"details":"getImplementation is public getter function for the _owner account address"},"getNumContracts()":{"details":"getNumContracts getter function for retrieving the total number of contracts deployed with this factory","returns":{"_0":"the length of the contract array"}},"lookup(bytes32)":{"params":{"salt_":": Custom NatSpec tag @custom:salt at the top of the contract solidity file"}},"owner()":{"details":"owner is public getter function for the _owner account address","returns":{"owner_":"address of the owner account"}},"setOwner(address)":{"details":"Sets the new owner","params":{"newOwner_":": address of the new owner"}}},"stateVariables":{"_contracts":{"details":"array to store list of contract salts"},"_implementation":{"details":"slot for storing implementation address"},"_owner":{"details":"owner role for privileged access to functions"}},"title":"ProxyFactoryBase","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"contracts()":"6c0f79b6","getImplementation()":"aaf10f42","getMetamorphicContractAddress(bytes32,address)":"8653a465","getNumContracts()":"cfe10b30","lookup(bytes32)":"f39ec1f7","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedRaw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedStatic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"DeployedTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newlogicAddr\",\"type\":\"address\"}],\"name\":\"UpgradedProxy\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"contracts_\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getMetamorphicContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"lookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"events\":{\"Deployed(bytes32,address)\":{\"details\":\"events that notify of contract deployment\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the head and the factory address at the tail, and deploys the proxy byte code using create OpCode. The result of this deployment will be a contract with the proxy contract deployment bytecode with its constructor at the head, runtime code in the body and constructor args at the tail. The constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy account will be set as the first owner of the factory.\"},\"contracts()\":{\"details\":\"contracts is public getter that gets the array of salts associated with all the contracts deployed with this factory\",\"returns\":{\"contracts_\":\"the array of salts associated with all the contracts deployed with this factory\"}},\"getImplementation()\":{\"details\":\"getImplementation is public getter function for the _owner account address\"},\"getNumContracts()\":{\"details\":\"getNumContracts getter function for retrieving the total number of contracts deployed with this factory\",\"returns\":{\"_0\":\"the length of the contract array\"}},\"lookup(bytes32)\":{\"params\":{\"salt_\":\": Custom NatSpec tag @custom:salt at the top of the contract solidity file\"}},\"owner()\":{\"details\":\"owner is public getter function for the _owner account address\",\"returns\":{\"owner_\":\"address of the owner account\"}},\"setOwner(address)\":{\"details\":\"Sets the new owner\",\"params\":{\"newOwner_\":\": address of the new owner\"}}},\"stateVariables\":{\"_contracts\":{\"details\":\"array to store list of contract salts\"},\"_implementation\":{\"details\":\"slot for storing implementation address\"},\"_owner\":{\"details\":\"owner role for privileged access to functions\"}},\"title\":\"ProxyFactoryBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lookup(bytes32)\":{\"notice\":\"lookup allows anyone interacting with the contract to get the address of contract specified by its salt_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyFactoryBase.sol\":\"ProxyFactoryBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"},\"contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nerror IncorrectProxyImplementation(address current, address expected); // error for when the proxy implementation is not the expected one\\nerror CodeSizeZero(); // error for when the deployed contract code size is zero\\nerror SaltAlreadyInUse(bytes32 salt); // error for when another contract has already been deployed with the same salt\\nerror Unauthorized(); // error for when the caller is not authorized to perform the action\\n\",\"keccak256\":\"0x4d4b4dad6da3774ea06528ab69b551bf65f46a9cfc6d54fc840de3f5f12ecee5\",\"license\":\"MIT-open-group\"},\"contracts/ProxyFactoryBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\nimport \\\"./proxy/Proxy.sol\\\";\\nimport \\\"./DeterministicAddress.sol\\\";\\nimport \\\"./proxy/ProxyUpgrader.sol\\\";\\nimport \\\"./proxy/IProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"contracts/Errors.sol\\\";\\nimport \\\"contracts/proxy/ProxyImplementationGetter.sol\\\";\\n\\n/**\\n * @title ProxyFactoryBase\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyFactoryBase is\\n    DeterministicAddress,\\n    ProxyUpgrader,\\n    ProxyImplementationGetter\\n{\\n    using Address for address;\\n\\n    struct MultiCallArgs {\\n        address target;\\n        uint256 value;\\n        bytes data;\\n    }\\n\\n    /**\\n    @dev owner role for privileged access to functions\\n    */\\n    address private _owner;\\n\\n    /**\\n    @dev array to store list of contract salts\\n    */\\n    bytes32[] private _contracts;\\n\\n    /**\\n    @dev slot for storing implementation address\\n    */\\n    address private _implementation;\\n\\n    address private immutable _proxyTemplate;\\n\\n    bytes8 private constant _UNIVERSAL_DEPLOY_CODE = 0x38585839386009f3;\\n\\n    mapping(bytes32 => address) internal _contractRegistry;\\n\\n    /**\\n     *@dev events that notify of contract deployment\\n     */\\n    event Deployed(bytes32 salt, address contractAddr);\\n    event DeployedTemplate(address contractAddr);\\n    event DeployedStatic(address contractAddr);\\n    event DeployedRaw(address contractAddr);\\n    event DeployedProxy(address contractAddr);\\n    event UpgradedProxy(bytes32 salt, address proxyAddr, address newlogicAddr);\\n\\n    // modifier restricts caller to owner or self via multicall\\n    modifier onlyOwner() {\\n        require(msg.sender == address(this) || msg.sender == owner());\\n        _;\\n    }\\n\\n    /**\\n     * @dev The constructor encodes the proxy deploy byte code with the _UNIVERSAL_DEPLOY_CODE at the\\n     * head and the factory address at the tail, and deploys the proxy byte code using create OpCode.\\n     * The result of this deployment will be a contract with the proxy contract deployment bytecode with\\n     * its constructor at the head, runtime code in the body and constructor args at the tail. The\\n     * constructor then sets proxyTemplate_ state var to the deployed proxy template address the deploy\\n     * account will be set as the first owner of the factory.\\n     */\\n    constructor() {\\n        bytes memory proxyDeployCode = abi.encodePacked(\\n            //8 byte code copy constructor code\\n            _UNIVERSAL_DEPLOY_CODE,\\n            type(Proxy).creationCode,\\n            bytes32(uint256(uint160(address(this))))\\n        );\\n        //variable to store the address created from create(the location of the proxy template contract)\\n        address addr;\\n        assembly (\\\"memory-safe\\\") {\\n            //deploys the proxy template contract\\n            addr := create(\\n                0,\\n                add(proxyDeployCode, 0x20),\\n                mload(proxyDeployCode)\\n            )\\n            if iszero(addr) {\\n                //if contract creation fails, we want to return any err messages\\n                returndatacopy(0x00, 0x00, returndatasize())\\n                //revert and return errors\\n                revert(0x00, returndatasize())\\n            }\\n        }\\n        //State var that stores the proxyTemplate address\\n        _proxyTemplate = addr;\\n        //State var that stores the _owner address\\n        _owner = msg.sender;\\n    }\\n\\n    // solhint-disable payable-fallback\\n    /**\\n     * @dev fallback function returns the address of the most recent deployment of a template\\n     */\\n    fallback() external {\\n        assembly {\\n            mstore(returndatasize(), sload(_implementation.slot))\\n            return(returndatasize(), 0x20)\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the new owner\\n     * @param newOwner_: address of the new owner\\n     */\\n    function setOwner(address newOwner_) public onlyOwner {\\n        _owner = newOwner_;\\n    }\\n\\n    /**\\n     * @notice lookup allows anyone interacting with the contract to get the address of contract specified\\n     * by its salt_\\n     * @param salt_: Custom NatSpec tag @custom:salt at the top of the contract solidity file\\n     */\\n    function lookup(bytes32 salt_) public view virtual returns (address) {\\n        return _lookup(salt_);\\n    }\\n\\n    /**\\n     * @dev getImplementation is public getter function for the _owner account address\\n     */\\n    function getImplementation() public view returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev owner is public getter function for the _owner account address\\n     * @return owner_ address of the owner account\\n     */\\n    function owner() public view returns (address owner_) {\\n        owner_ = _owner;\\n    }\\n\\n    /**\\n     * @dev contracts is public getter that gets the array of salts associated with all the contracts\\n     * deployed with this factory\\n     * @return contracts_ the array of salts associated with all the contracts deployed with this\\n     * factory\\n     */\\n    function contracts() public view returns (bytes32[] memory contracts_) {\\n        contracts_ = _contracts;\\n    }\\n\\n    /**\\n     * @dev getNumContracts getter function for retrieving the total number of contracts\\n     * deployed with this factory\\n     * @return the length of the contract array\\n     */\\n    function getNumContracts() public view returns (uint256) {\\n        return _contracts.length;\\n    }\\n\\n    /**\\n     * @dev _callAny allows EOA to call function impersonating the factory address\\n     * @param target_: the address of the contract to be called\\n     * @param value_: value in WEIs to send together the call\\n     * @param cdata_: Hex encoded data with function signature + arguments of the target function to be called\\n     */\\n    function _callAny(\\n        address target_,\\n        uint256 value_,\\n        bytes memory cdata_\\n    ) internal returns (bytes memory) {\\n        return target_.functionCallWithValue(cdata_, value_);\\n    }\\n\\n    /**\\n     * @dev _deployCreate allows the owner to deploy raw contracts through the factory using\\n     * non-deterministic address generation (create OpCode)\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate(\\n        bytes calldata deployCode_\\n    ) internal returns (address contractAddr) {\\n        assembly (\\\"memory-safe\\\") {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create(0, basePtr, sub(ptr, basePtr))\\n        }\\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\\n        emit DeployedRaw(contractAddr);\\n    }\\n\\n    /**\\n     * @dev _deployCreate2 allows the owner to deploy contracts with deterministic address through the\\n     * factory\\n     * @param value_ endowment value in WEIS for the created contract\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     * @param deployCode_ Hex encoded data with the deployment code of the contract to be deployed +\\n     * constructors' args (if any)\\n     * @return contractAddr the deployed contract address\\n     */\\n    function _deployCreate2(\\n        uint256 value_,\\n        bytes32 salt_,\\n        bytes calldata deployCode_\\n    ) internal returns (address contractAddr) {\\n        assembly {\\n            //get the next free pointer\\n            let basePtr := mload(0x40)\\n            let ptr := basePtr\\n\\n            //copies the initialization code of the implementation contract\\n            calldatacopy(ptr, deployCode_.offset, deployCode_.length)\\n\\n            //Move the ptr to the end of the code in memory\\n            ptr := add(ptr, deployCode_.length)\\n\\n            contractAddr := create2(value_, basePtr, sub(ptr, basePtr), salt_)\\n        }\\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\\n        //record the contract salt to the _contracts array for lookup\\n        _contracts.push(salt_);\\n        emit DeployedRaw(contractAddr);\\n    }\\n\\n    /**\\n     * @dev _deployProxy deploys a proxy contract with upgradable logic. See Proxy.sol contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed contract\\n     */\\n    function _deployProxy(\\n        bytes32 salt_\\n    ) internal returns (address contractAddr) {\\n        address proxyTemplate = _proxyTemplate;\\n        assembly {\\n            // store proxy template address as implementation,\\n            sstore(_implementation.slot, proxyTemplate)\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, 0x20))\\n            // put metamorphic code as initCode\\n            // push1 20\\n            mstore(\\n                ptr,\\n                shl(72, 0x6020363636335afa1536363636515af43d36363e3d36f3)\\n            )\\n            contractAddr := create2(0, ptr, 0x17, salt_)\\n        }\\n        _codeSizeZeroRevert((_extCodeSize(contractAddr) != 0));\\n        _addNewContract(salt_, contractAddr);\\n        emit DeployedProxy(contractAddr);\\n    }\\n\\n    /**\\n     * @dev _initializeContract allows the owner/delegator to initialize contracts deployed via factory\\n     * @param contract_ address of the contract that will be initialized\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * deployed contract\\n     */\\n    function _initializeContract(\\n        address contract_,\\n        bytes calldata initCallData_\\n    ) internal {\\n        assembly (\\\"memory-safe\\\") {\\n            if iszero(iszero(initCallData_.length)) {\\n                let ptr := mload(0x40)\\n                mstore(0x40, add(initCallData_.length, ptr))\\n                calldatacopy(ptr, initCallData_.offset, initCallData_.length)\\n                if iszero(\\n                    call(\\n                        gas(),\\n                        contract_,\\n                        0,\\n                        ptr,\\n                        initCallData_.length,\\n                        0x00,\\n                        0x00\\n                    )\\n                ) {\\n                    ptr := mload(0x40)\\n                    mstore(0x40, add(returndatasize(), ptr))\\n                    returndatacopy(ptr, 0x00, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice _multiCall allows EOA to make multiple function calls within a single transaction\\n     * impersonating the factory\\n     * @param cdata_: array of abi encoded data with the function calls (function signature + arguments)\\n     */\\n    function _multiCall(\\n        MultiCallArgs[] calldata cdata_\\n    ) internal returns (bytes[] memory results) {\\n        results = new bytes[](cdata_.length);\\n        for (uint256 i = 0; i < cdata_.length; i++) {\\n            results[i] = _callAny(\\n                cdata_[i].target,\\n                cdata_[i].value,\\n                cdata_[i].data\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev _upgradeProxy updates the implementation/logic address of an already deployed proxy contract.\\n     * @param salt_ salt used to determine the final determinist address for the deployed proxy contract\\n     * @param newImpl_ address of the new contract that contains the new implementation logic\\n     * @param initCallData_ Hex encoded initialization function signature + parameters to initialize the\\n     * new implementation contract\\n     */\\n    function _upgradeProxy(\\n        bytes32 salt_,\\n        address newImpl_,\\n        bytes calldata initCallData_\\n    ) internal {\\n        address proxy = DeterministicAddress.getMetamorphicContractAddress(\\n            salt_,\\n            address(this)\\n        );\\n        __upgrade(proxy, newImpl_);\\n        address currentImplementation = __getProxyImplementation(proxy);\\n        if (currentImplementation != newImpl_) {\\n            revert IncorrectProxyImplementation(\\n                currentImplementation,\\n                newImpl_\\n            );\\n        }\\n        _initializeContract(proxy, initCallData_);\\n        emit UpgradedProxy(salt_, proxy, newImpl_);\\n    }\\n\\n    /// Internal function to add a new address and \\\"pseudo\\\" salt to the externalContractRegistry\\n    function _addNewContract(\\n        bytes32 salt_,\\n        address newContractAddress_\\n    ) internal {\\n        if (_contractRegistry[salt_] != address(0)) {\\n            revert SaltAlreadyInUse(salt_);\\n        }\\n        _contracts.push(salt_);\\n        _contractRegistry[salt_] = newContractAddress_;\\n    }\\n\\n    /**\\n     * @notice Aux function to return the external code size\\n     */\\n    function _extCodeSize(\\n        address target_\\n    ) internal view returns (uint256 size) {\\n        assembly (\\\"memory-safe\\\") {\\n            size := extcodesize(target_)\\n        }\\n        return size;\\n    }\\n\\n    // lookup allows anyone interacting with the contract to get the address of contract specified by\\n    // its salt_. Returns address(0) in case a contract for that salt was not deployed.\\n    function _lookup(bytes32 salt_) internal view returns (address) {\\n        return _contractRegistry[salt_];\\n    }\\n\\n    /**\\n     * @notice _requireAuth reverts if false and returns unauthorized error message\\n     * @param isOk_ boolean false to cause revert\\n     */\\n    function _requireAuth(bool isOk_) internal pure {\\n        if (!isOk_) {\\n            revert Unauthorized();\\n        }\\n    }\\n\\n    /**\\n     * @notice _codeSizeZeroRevert reverts if false and returns csize0 error message\\n     * @param isOk_ boolean false to cause revert\\n     */\\n    function _codeSizeZeroRevert(bool isOk_) internal pure {\\n        if (!isOk_) {\\n            revert CodeSizeZero();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf532a0acbba23ca845d25e4c69ccb8ca1e6147b661ca5e4c1f54e91a491285f\",\"license\":\"MIT-open-group\"},\"contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\ninterface IProxy {\\n    function getImplementationAddress() external view returns (address);\\n}\",\"keccak256\":\"0xc347986b3d808c671158d689c9ad8a3a9e5f4a78efd5496de3d2777396f9547e\",\"license\":\"MIT-open-group\"},\"contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nimport \\\"contracts/DeterministicAddress.sol\\\";\\n\\n/**\\n * @title Proxy\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\\n */\\n/**\\n * @notice Proxy is a delegatecall reverse proxy implementation that is secure against function\\n * collision.\\n *\\n * The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in\\n * it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded\\n * using the internal mechanism. This does not prevent the implementation from upgrading the proxy\\n * by changing this slot.\\n *\\n * The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the\\n * factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>);\\n *\\n * The proxy can return its implementation address by calling it using the format\\n * abi.encodePacked(hex'0cbcae703c');\\n *\\n * All other calls will be proxied through to the implementation.\\n *\\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that\\n * the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must\\n * carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the\\n * proxy.\\n *\\n * @dev RUN OPTIMIZER OFF\\n */\\ncontract Proxy {\\n    address private immutable _factory;\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /// Delegates calls to proxy implementation\\n    function _fallback() internal {\\n        // make local copy of factory since immutables are not accessible in assembly as of yet\\n        address factory = _factory;\\n        assembly (\\\"memory-safe\\\") {\\n            // check if the calldata has the special signatures to access the proxy functions. To\\n            // avoid collision the signatures for the proxy function are 5 bytes long (instead of\\n            // the normal 4).\\n            if or(eq(calldatasize(), 0x25), eq(calldatasize(), 0x5)) {\\n                {\\n                    let selector := shr(216, calldataload(0x00))\\n                    switch selector\\n                    // getImplementationAddress()\\n                    case 0x0cbcae703c {\\n                        let ptr := mload(0x40)\\n                        mstore(ptr, getImplementationAddress())\\n                        return(ptr, 0x14)\\n                    }\\n                    // setImplementationAddress()\\n                    case 0xca11c0de11 {\\n                        // revert in case user is not factory/admin\\n                        if iszero(eq(caller(), factory)) {\\n                            revertASM(\\\"unauthorized\\\", 12)\\n                        }\\n                        // if caller is factory, and has 0xca11c0de00<address> as calldata,\\n                        // run admin logic and return\\n                        setImplementationAddress()\\n                    }\\n                    default {\\n                        revertASM(\\\"function not found\\\", 18)\\n                    }\\n                }\\n            }\\n            // admin logic was not run so fallthrough to delegatecall\\n            passthrough()\\n\\n            ///////////// Functions ///////////////\\n\\n            function revertASM(str, len) {\\n                let ptr := mload(0x40)\\n                let startPtr := ptr\\n                mstore(ptr, hex\\\"08c379a0\\\") // keccak256('Error(string)')[0:4]\\n                ptr := add(ptr, 0x4)\\n                mstore(ptr, 0x20)\\n                ptr := add(ptr, 0x20)\\n                mstore(ptr, len) // string length\\n                ptr := add(ptr, 0x20)\\n                mstore(ptr, str)\\n                ptr := add(ptr, 0x20)\\n                revert(startPtr, sub(ptr, startPtr))\\n            }\\n\\n            function getImplementationAddress() -> implAddr {\\n                implAddr := shl(\\n                    96,\\n                    and(\\n                        sload(not(0x00)),\\n                        0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                    )\\n                )\\n            }\\n\\n            // updateImplementation is the builtin logic to change the implementation\\n            function setImplementationAddress() {\\n                // check if the upgrade functionality is locked.\\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10deadc0de) {\\n                    revertASM(\\\"update locked\\\", 13)\\n                }\\n                // this is an assignment to implementation\\n                let newImpl := shr(96, shl(96, calldataload(0x05)))\\n                // store address into slot\\n                sstore(not(0x00), newImpl)\\n                // stop to not fall into the default case of the switch selector\\n                stop()\\n            }\\n\\n            // passthrough is the passthrough logic to delegate to the implementation\\n            function passthrough() {\\n                let logicAddress := sload(not(0x00))\\n                if iszero(logicAddress) {\\n                    revertASM(\\\"logic not set\\\", 13)\\n                }\\n                // load free memory pointer\\n                let ptr := mload(0x40)\\n                // allocate memory proportionate to calldata\\n                mstore(0x40, add(ptr, calldatasize()))\\n                // copy calldata into memory\\n                calldatacopy(ptr, 0x00, calldatasize())\\n                let ret := delegatecall(\\n                    gas(),\\n                    logicAddress,\\n                    ptr,\\n                    calldatasize(),\\n                    0x00,\\n                    0x00\\n                )\\n                returndatacopy(ptr, 0x00, returndatasize())\\n                if iszero(ret) {\\n                    revert(ptr, returndatasize())\\n                }\\n                return(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a8897b127757b03568269f0eff6742ea27988880a04baafecf409df6ab7f193\",\"license\":\"MIT-open-group\"},\"contracts/proxy/ProxyImplementationGetter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nabstract contract ProxyImplementationGetter {\\n    function __getProxyImplementation(\\n        address _proxy\\n    ) internal view returns (address implAddress) {\\n        bytes memory cdata = hex\\\"0cbcae703c\\\";\\n        assembly (\\\"memory-safe\\\") {\\n            let success := staticcall(\\n                gas(),\\n                _proxy,\\n                add(cdata, 0x20),\\n                mload(cdata),\\n                0x00,\\n                0x00\\n            )\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, returndatasize()))\\n            returndatacopy(ptr, 0x00, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n            implAddress := shr(96, mload(ptr))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcbc560c3969890872ab8f65d798b714fe7969a81b663632d2554453c7b8cd2da\",\"license\":\"MIT-open-group\"},\"contracts/proxy/ProxyUpgrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title ProxyUpgrader\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyUpgrader {\\n    function __upgrade(address _proxy, address _newImpl) internal {\\n        bytes memory cdata = abi.encodePacked(\\n            hex\\\"ca11c0de11\\\",\\n            uint256(uint160(_newImpl))\\n        );\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(\\n                gas(),\\n                _proxy,\\n                0,\\n                add(cdata, 0x20),\\n                mload(cdata),\\n                0x00,\\n                0x00\\n            )\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, returndatasize()))\\n            returndatacopy(ptr, 0x00, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x14c677421afe6ad998c9c67ecb69e7d15b843ff5dec0a3b30a09f7662382cc09\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[{"astId":660,"contract":"contracts/ProxyFactoryBase.sol:ProxyFactoryBase","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":664,"contract":"contracts/ProxyFactoryBase.sol:ProxyFactoryBase","label":"_contracts","offset":0,"slot":"1","type":"t_array(t_bytes32)dyn_storage"},{"astId":667,"contract":"contracts/ProxyFactoryBase.sol:ProxyFactoryBase","label":"_implementation","offset":0,"slot":"2","type":"t_address"},{"astId":676,"contract":"contracts/ProxyFactoryBase.sol:ProxyFactoryBase","label":"_contractRegistry","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"}}},"userdoc":{"kind":"user","methods":{"lookup(bytes32)":{"notice":"lookup allows anyone interacting with the contract to get the address of contract specified by its salt_"}},"version":1}}},"contracts/mocks/MockContract.sol":{"Mock":{"abi":[{"inputs":[{"internalType":"uint256","name":"version_","type":"uint256"},{"internalType":"address","name":"anotherMock_","type":"address"},{"internalType":"address","name":"anotherAnotherMock_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"_a","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"uint256","name":"a_","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"a_","type":"uint256"}],"name":"setA","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"name":"setMsg","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This mock inheirts the ProxyChild contract to simplify constructor / initialization logic","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1193":{"entryPoint":null,"id":1193,"parameterSlots":3,"returnSlots":0},"@_422":{"entryPoint":null,"id":422,"parameterSlots":0,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":81,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_address_fromMemory":{"entryPoint":109,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:552:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:15","statements":[{"nodeType":"YulAssignment","src":"84:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:15"},"nodeType":"YulFunctionCall","src":"93:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:15"}]},{"body":{"nodeType":"YulBlock","src":"169:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:15"},"nodeType":"YulFunctionCall","src":"171:12:15"},"nodeType":"YulExpressionStatement","src":"171:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:15"},"nodeType":"YulFunctionCall","src":"150:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:15"},"nodeType":"YulFunctionCall","src":"146:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:15"},"nodeType":"YulFunctionCall","src":"135:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:15"},"nodeType":"YulFunctionCall","src":"125:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:15"},"nodeType":"YulFunctionCall","src":"118:50:15"},"nodeType":"YulIf","src":"115:70:15"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"14:177:15"},{"body":{"nodeType":"YulBlock","src":"311:239:15","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:15"},"nodeType":"YulFunctionCall","src":"359:12:15"},"nodeType":"YulExpressionStatement","src":"359:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:15"},"nodeType":"YulFunctionCall","src":"328:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:15"},"nodeType":"YulFunctionCall","src":"324:32:15"},"nodeType":"YulIf","src":"321:52:15"},{"nodeType":"YulAssignment","src":"382:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"398:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"392:5:15"},"nodeType":"YulFunctionCall","src":"392:16:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:15"}]},{"nodeType":"YulAssignment","src":"417:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"461:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"472:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"457:3:15"},"nodeType":"YulFunctionCall","src":"457:18:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"427:29:15"},"nodeType":"YulFunctionCall","src":"427:49:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"417:6:15"}]},{"nodeType":"YulAssignment","src":"485:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"529:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:18:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"495:29:15"},"nodeType":"YulFunctionCall","src":"495:49:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"485:6:15"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:15","type":""}],"src":"196:354:15"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61010060405234801561001157600080fd5b5060405161086b38038061086b8339810160408190526100309161006d565b3360805260a0929092526001600160a01b0390811660e0521660c0526100a9565b80516001600160a01b038116811461006857600080fd5b919050565b60008060006060848603121561008257600080fd5b8351925061009260208501610051565b91506100a060408501610051565b90509250925092565b60805160a05160c05160e05161078c6100df60003960005050600050506000505060008181609101526101fa015261078c6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ced7b2e311610050578063ced7b2e3146100e8578063d28d8852146100ff578063ee919d501461011457600080fd5b806388cc58e4146100775780638beaf7d7146100c0578063c4784fd4146100d5575b600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b6100d36100ce3660046102b6565b610127565b005b6100d36100e3366004610389565b610142565b6100f160025481565b6040519081526020016100b7565b610107610154565b6040516100b791906103fb565b6100d3610122366004610467565b600255565b61012f6101e2565b600161013b8382610521565b5060025550565b600161014f82848361063b565b505050565b6001805461016190610480565b80601f016020809104026020016040519081016040528092919081815260200182805461018d90610480565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564604482015260640160405180910390fd5b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156102c957600080fd5b823567ffffffffffffffff808211156102e157600080fd5b818501915085601f8301126102f557600080fd5b81358181111561030757610307610287565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561034d5761034d610287565b8160405282815288602084870101111561036657600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000806020838503121561039c57600080fd5b823567ffffffffffffffff808211156103b457600080fd5b818501915085601f8301126103c857600080fd5b8135818111156103d757600080fd5b8660208285010111156103e957600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156104285785810183015185820160400152820161040c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561047957600080fd5b5035919050565b600181811c9082168061049457607f821691505b6020821081036104cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561014f57600081815260208120601f850160051c810160208610156104fa5750805b601f850160051c820191505b8181101561051957828155600101610506565b505050505050565b815167ffffffffffffffff81111561053b5761053b610287565b61054f816105498454610480565b846104d3565b602080601f8311600181146105a2576000841561056c5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610519565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156105ef578886015182559484019460019091019084016105d0565b508582101561062b57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff83111561065357610653610287565b610667836106618354610480565b836104d3565b6000601f8411600181146106b957600085156106835750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561074f565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561070857868501358255602094850194600190920191016106e8565b5086821015610743577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea264697066735822122053ed17a79092a9ba102f94b054ac3a65278e082ce7acdc44dd78b85007fd0f7464736f6c63430008110033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x86B CODESIZE SUB DUP1 PUSH2 0x86B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x6D JUMP JUMPDEST CALLER PUSH1 0x80 MSTORE PUSH1 0xA0 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xE0 MSTORE AND PUSH1 0xC0 MSTORE PUSH2 0xA9 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH2 0x92 PUSH1 0x20 DUP6 ADD PUSH2 0x51 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0 PUSH1 0x40 DUP6 ADD PUSH2 0x51 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x78C PUSH2 0xDF PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 DUP2 DUP2 PUSH1 0x91 ADD MSTORE PUSH2 0x1FA ADD MSTORE PUSH2 0x78C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCED7B2E3 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xCED7B2E3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xEE919D50 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88CC58E4 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8BEAF7D7 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC4784FD4 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x389 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x12F PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x13B DUP4 DUP3 PUSH2 0x521 JUMP JUMPDEST POP PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14F DUP3 DUP5 DUP4 PUSH2 0x63B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x161 SWAP1 PUSH2 0x480 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18D SWAP1 PUSH2 0x480 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368696C6450726F78793A206F6E6C7920666163746F727920616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x307 JUMPI PUSH2 0x307 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x34D JUMPI PUSH2 0x34D PUSH2 0x287 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x428 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x40C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x494 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4CD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x519 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x506 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53B JUMPI PUSH2 0x53B PUSH2 0x287 JUMP JUMPDEST PUSH2 0x54F DUP2 PUSH2 0x549 DUP5 SLOAD PUSH2 0x480 JUMP JUMPDEST DUP5 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x56C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5EF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x5D0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x62B JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x667 DUP4 PUSH2 0x661 DUP4 SLOAD PUSH2 0x480 JUMP JUMPDEST DUP4 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x683 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x6E8 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x743 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xED OR 0xA7 SWAP1 SWAP3 0xA9 0xBA LT 0x2F SWAP5 0xB0 SLOAD 0xAC GASPRICE PUSH6 0x278E082CE7AC 0xDC DIFFICULTY 0xDD PUSH25 0xB85007FD0F7464736F6C634300081100330000000000000000 ","sourceMap":"200:672:6:-:0;;;395:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;508:10:3;497:21;;486:19:6;;;;;-1:-1:-1;;;;;515:27:6;;;;;552:41;;;200:672;;14:177:15;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;398:9;392:16;382:26;;427:49;472:2;461:9;457:18;427:49;:::i;:::-;417:59;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;:::-;200:672:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_a_1171":{"entryPoint":null,"id":1171,"parameterSlots":0,"returnSlots":0},"@_name_1169":{"entryPoint":340,"id":1169,"parameterSlots":0,"returnSlots":0},"@getFactory_442":{"entryPoint":null,"id":442,"parameterSlots":0,"returnSlots":1},"@initialize_1211":{"entryPoint":295,"id":1211,"parameterSlots":2,"returnSlots":0},"@senderIsFactory_434":{"entryPoint":482,"id":434,"parameterSlots":0,"returnSlots":0},"@setA_1221":{"entryPoint":null,"id":1221,"parameterSlots":1,"returnSlots":0},"@setMsg_1231":{"entryPoint":322,"id":1231,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":905,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":694,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1235,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":1595,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1313,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1152,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":647,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7587:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:125:15","statements":[{"nodeType":"YulAssignment","src":"125:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:15"},"nodeType":"YulFunctionCall","src":"133:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"190:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:15"},"nodeType":"YulFunctionCall","src":"178:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:15"},"nodeType":"YulFunctionCall","src":"160:74:15"},"nodeType":"YulExpressionStatement","src":"160:74:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:15","type":""}],"src":"14:226:15"},{"body":{"nodeType":"YulBlock","src":"277:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"294:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"297:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"287:6:15"},"nodeType":"YulFunctionCall","src":"287:88:15"},"nodeType":"YulExpressionStatement","src":"287:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"391:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"394:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"384:6:15"},"nodeType":"YulFunctionCall","src":"384:15:15"},"nodeType":"YulExpressionStatement","src":"384:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"415:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"418:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"408:6:15"},"nodeType":"YulFunctionCall","src":"408:15:15"},"nodeType":"YulExpressionStatement","src":"408:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"245:184:15"},{"body":{"nodeType":"YulBlock","src":"531:962:15","statements":[{"body":{"nodeType":"YulBlock","src":"577:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"586:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"589:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"579:6:15"},"nodeType":"YulFunctionCall","src":"579:12:15"},"nodeType":"YulExpressionStatement","src":"579:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"552:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"561:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"548:3:15"},"nodeType":"YulFunctionCall","src":"548:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"573:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"544:3:15"},"nodeType":"YulFunctionCall","src":"544:32:15"},"nodeType":"YulIf","src":"541:52:15"},{"nodeType":"YulVariableDeclaration","src":"602:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"629:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:15"},"nodeType":"YulFunctionCall","src":"616:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"606:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"648:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"658:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"652:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"703:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"712:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"715:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"705:6:15"},"nodeType":"YulFunctionCall","src":"705:12:15"},"nodeType":"YulExpressionStatement","src":"705:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"691:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"699:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"688:2:15"},"nodeType":"YulFunctionCall","src":"688:14:15"},"nodeType":"YulIf","src":"685:34:15"},{"nodeType":"YulVariableDeclaration","src":"728:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"742:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"753:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"738:3:15"},"nodeType":"YulFunctionCall","src":"738:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"732:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"808:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"817:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"820:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"810:6:15"},"nodeType":"YulFunctionCall","src":"810:12:15"},"nodeType":"YulExpressionStatement","src":"810:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"787:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"791:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"783:3:15"},"nodeType":"YulFunctionCall","src":"783:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"798:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"779:3:15"},"nodeType":"YulFunctionCall","src":"779:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"772:6:15"},"nodeType":"YulFunctionCall","src":"772:35:15"},"nodeType":"YulIf","src":"769:55:15"},{"nodeType":"YulVariableDeclaration","src":"833:26:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"856:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"843:12:15"},"nodeType":"YulFunctionCall","src":"843:16:15"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"837:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"882:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"884:16:15"},"nodeType":"YulFunctionCall","src":"884:18:15"},"nodeType":"YulExpressionStatement","src":"884:18:15"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"874:2:15"},{"name":"_1","nodeType":"YulIdentifier","src":"878:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"871:2:15"},"nodeType":"YulFunctionCall","src":"871:10:15"},"nodeType":"YulIf","src":"868:36:15"},{"nodeType":"YulVariableDeclaration","src":"913:76:15","value":{"kind":"number","nodeType":"YulLiteral","src":"923:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"917:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"998:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1018:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1012:5:15"},"nodeType":"YulFunctionCall","src":"1012:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1002:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1030:71:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1052:6:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1076:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1080:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:15"},"nodeType":"YulFunctionCall","src":"1072:13:15"},{"name":"_4","nodeType":"YulIdentifier","src":"1087:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1068:3:15"},"nodeType":"YulFunctionCall","src":"1068:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"1092:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1064:3:15"},"nodeType":"YulFunctionCall","src":"1064:31:15"},{"name":"_4","nodeType":"YulIdentifier","src":"1097:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1060:3:15"},"nodeType":"YulFunctionCall","src":"1060:40:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:15"},"nodeType":"YulFunctionCall","src":"1048:53:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1034:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1160:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1162:16:15"},"nodeType":"YulFunctionCall","src":"1162:18:15"},"nodeType":"YulExpressionStatement","src":"1162:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1119:10:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1131:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1116:2:15"},"nodeType":"YulFunctionCall","src":"1116:18:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1139:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1151:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1136:2:15"},"nodeType":"YulFunctionCall","src":"1136:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1113:2:15"},"nodeType":"YulFunctionCall","src":"1113:46:15"},"nodeType":"YulIf","src":"1110:72:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1198:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1202:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1191:6:15"},"nodeType":"YulFunctionCall","src":"1191:22:15"},"nodeType":"YulExpressionStatement","src":"1191:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1229:6:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1237:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1222:6:15"},"nodeType":"YulFunctionCall","src":"1222:18:15"},"nodeType":"YulExpressionStatement","src":"1222:18:15"},{"body":{"nodeType":"YulBlock","src":"1288:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1297:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1300:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1290:6:15"},"nodeType":"YulFunctionCall","src":"1290:12:15"},"nodeType":"YulExpressionStatement","src":"1290:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1263:2:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1267:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1259:3:15"},"nodeType":"YulFunctionCall","src":"1259:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"1272:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1255:3:15"},"nodeType":"YulFunctionCall","src":"1255:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1279:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1252:2:15"},"nodeType":"YulFunctionCall","src":"1252:35:15"},"nodeType":"YulIf","src":"1249:55:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1330:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1338:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1326:3:15"},"nodeType":"YulFunctionCall","src":"1326:17:15"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1349:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1353:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1345:3:15"},"nodeType":"YulFunctionCall","src":"1345:13:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1360:2:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1313:12:15"},"nodeType":"YulFunctionCall","src":"1313:50:15"},"nodeType":"YulExpressionStatement","src":"1313:50:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1387:6:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1395:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:15"},"nodeType":"YulFunctionCall","src":"1383:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1400:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1379:3:15"},"nodeType":"YulFunctionCall","src":"1379:26:15"},{"kind":"number","nodeType":"YulLiteral","src":"1407:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1372:6:15"},"nodeType":"YulFunctionCall","src":"1372:37:15"},"nodeType":"YulExpressionStatement","src":"1372:37:15"},{"nodeType":"YulAssignment","src":"1418:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1428:6:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1418:6:15"}]},{"nodeType":"YulAssignment","src":"1443:44:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1470:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1481:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:15"},"nodeType":"YulFunctionCall","src":"1466:20:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1453:12:15"},"nodeType":"YulFunctionCall","src":"1453:34:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1443:6:15"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"489:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"500:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"512:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"520:6:15","type":""}],"src":"434:1059:15"},{"body":{"nodeType":"YulBlock","src":"1588:502:15","statements":[{"body":{"nodeType":"YulBlock","src":"1634:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1643:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1646:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1636:6:15"},"nodeType":"YulFunctionCall","src":"1636:12:15"},"nodeType":"YulExpressionStatement","src":"1636:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1609:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1618:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1605:3:15"},"nodeType":"YulFunctionCall","src":"1605:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1630:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1601:3:15"},"nodeType":"YulFunctionCall","src":"1601:32:15"},"nodeType":"YulIf","src":"1598:52:15"},{"nodeType":"YulVariableDeclaration","src":"1659:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1673:12:15"},"nodeType":"YulFunctionCall","src":"1673:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1663:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1705:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1715:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1709:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1760:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1769:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1772:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1762:6:15"},"nodeType":"YulFunctionCall","src":"1762:12:15"},"nodeType":"YulExpressionStatement","src":"1762:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1748:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1756:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1745:2:15"},"nodeType":"YulFunctionCall","src":"1745:14:15"},"nodeType":"YulIf","src":"1742:34:15"},{"nodeType":"YulVariableDeclaration","src":"1785:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1799:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1810:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1795:3:15"},"nodeType":"YulFunctionCall","src":"1795:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1789:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1865:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1874:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1877:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1867:6:15"},"nodeType":"YulFunctionCall","src":"1867:12:15"},"nodeType":"YulExpressionStatement","src":"1867:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1844:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1848:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1840:3:15"},"nodeType":"YulFunctionCall","src":"1840:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1855:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1836:3:15"},"nodeType":"YulFunctionCall","src":"1836:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1829:6:15"},"nodeType":"YulFunctionCall","src":"1829:35:15"},"nodeType":"YulIf","src":"1826:55:15"},{"nodeType":"YulVariableDeclaration","src":"1890:30:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1917:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1904:12:15"},"nodeType":"YulFunctionCall","src":"1904:16:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1894:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1947:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1949:6:15"},"nodeType":"YulFunctionCall","src":"1949:12:15"},"nodeType":"YulExpressionStatement","src":"1949:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1935:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1943:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1932:2:15"},"nodeType":"YulFunctionCall","src":"1932:14:15"},"nodeType":"YulIf","src":"1929:34:15"},{"body":{"nodeType":"YulBlock","src":"2013:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2022:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2015:6:15"},"nodeType":"YulFunctionCall","src":"2015:12:15"},"nodeType":"YulExpressionStatement","src":"2015:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1986:2:15"},{"name":"length","nodeType":"YulIdentifier","src":"1990:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:15"},"nodeType":"YulFunctionCall","src":"1982:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1999:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1978:3:15"},"nodeType":"YulFunctionCall","src":"1978:24:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2004:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1975:2:15"},"nodeType":"YulFunctionCall","src":"1975:37:15"},"nodeType":"YulIf","src":"1972:57:15"},{"nodeType":"YulAssignment","src":"2038:21:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2052:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"2056:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2048:3:15"},"nodeType":"YulFunctionCall","src":"2048:11:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2038:6:15"}]},{"nodeType":"YulAssignment","src":"2068:16:15","value":{"name":"length","nodeType":"YulIdentifier","src":"2078:6:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2068:6:15"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1546:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1557:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1569:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1577:6:15","type":""}],"src":"1498:592:15"},{"body":{"nodeType":"YulBlock","src":"2196:76:15","statements":[{"nodeType":"YulAssignment","src":"2206:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2218:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2229:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2214:3:15"},"nodeType":"YulFunctionCall","src":"2214:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2206:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2248:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"2259:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2241:6:15"},"nodeType":"YulFunctionCall","src":"2241:25:15"},"nodeType":"YulExpressionStatement","src":"2241:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2165:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2176:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2187:4:15","type":""}],"src":"2095:177:15"},{"body":{"nodeType":"YulBlock","src":"2398:486:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2408:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2418:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2412:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2436:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2447:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2429:6:15"},"nodeType":"YulFunctionCall","src":"2429:21:15"},"nodeType":"YulExpressionStatement","src":"2429:21:15"},{"nodeType":"YulVariableDeclaration","src":"2459:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2479:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2473:5:15"},"nodeType":"YulFunctionCall","src":"2473:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2463:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2517:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2502:3:15"},"nodeType":"YulFunctionCall","src":"2502:18:15"},{"name":"length","nodeType":"YulIdentifier","src":"2522:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2495:6:15"},"nodeType":"YulFunctionCall","src":"2495:34:15"},"nodeType":"YulExpressionStatement","src":"2495:34:15"},{"nodeType":"YulVariableDeclaration","src":"2538:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2547:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2542:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2607:90:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2636:9:15"},{"name":"i","nodeType":"YulIdentifier","src":"2647:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2632:3:15"},"nodeType":"YulFunctionCall","src":"2632:17:15"},{"kind":"number","nodeType":"YulLiteral","src":"2651:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:15"},"nodeType":"YulFunctionCall","src":"2628:26:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2670:6:15"},{"name":"i","nodeType":"YulIdentifier","src":"2678:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2666:3:15"},"nodeType":"YulFunctionCall","src":"2666:14:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2682:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2662:3:15"},"nodeType":"YulFunctionCall","src":"2662:23:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2656:5:15"},"nodeType":"YulFunctionCall","src":"2656:30:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2621:6:15"},"nodeType":"YulFunctionCall","src":"2621:66:15"},"nodeType":"YulExpressionStatement","src":"2621:66:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2568:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2571:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2565:2:15"},"nodeType":"YulFunctionCall","src":"2565:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2579:19:15","statements":[{"nodeType":"YulAssignment","src":"2581:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2590:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:15"},"nodeType":"YulFunctionCall","src":"2586:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2581:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2561:3:15","statements":[]},"src":"2557:140:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2721:9:15"},{"name":"length","nodeType":"YulIdentifier","src":"2732:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2717:3:15"},"nodeType":"YulFunctionCall","src":"2717:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"2741:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:15"},"nodeType":"YulFunctionCall","src":"2713:31:15"},{"kind":"number","nodeType":"YulLiteral","src":"2746:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2706:6:15"},"nodeType":"YulFunctionCall","src":"2706:42:15"},"nodeType":"YulExpressionStatement","src":"2706:42:15"},{"nodeType":"YulAssignment","src":"2757:121:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2773:9:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2792:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2800:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:15"},"nodeType":"YulFunctionCall","src":"2788:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"2805:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2784:3:15"},"nodeType":"YulFunctionCall","src":"2784:88:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2769:3:15"},"nodeType":"YulFunctionCall","src":"2769:104:15"},{"kind":"number","nodeType":"YulLiteral","src":"2875:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2765:3:15"},"nodeType":"YulFunctionCall","src":"2765:113:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2757:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2367:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2378:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2389:4:15","type":""}],"src":"2277:607:15"},{"body":{"nodeType":"YulBlock","src":"2959:110:15","statements":[{"body":{"nodeType":"YulBlock","src":"3005:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3014:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3017:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3007:6:15"},"nodeType":"YulFunctionCall","src":"3007:12:15"},"nodeType":"YulExpressionStatement","src":"3007:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2980:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2989:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2976:3:15"},"nodeType":"YulFunctionCall","src":"2976:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3001:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2972:3:15"},"nodeType":"YulFunctionCall","src":"2972:32:15"},"nodeType":"YulIf","src":"2969:52:15"},{"nodeType":"YulAssignment","src":"3030:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3053:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3040:12:15"},"nodeType":"YulFunctionCall","src":"3040:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3030:6:15"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2925:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2936:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2948:6:15","type":""}],"src":"2889:180:15"},{"body":{"nodeType":"YulBlock","src":"3129:382:15","statements":[{"nodeType":"YulAssignment","src":"3139:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3153:1:15","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3156:4:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3149:3:15"},"nodeType":"YulFunctionCall","src":"3149:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3139:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3170:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3200:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"3206:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3196:3:15"},"nodeType":"YulFunctionCall","src":"3196:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3174:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3247:31:15","statements":[{"nodeType":"YulAssignment","src":"3249:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3263:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3271:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3259:3:15"},"nodeType":"YulFunctionCall","src":"3259:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3249:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3227:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3220:6:15"},"nodeType":"YulFunctionCall","src":"3220:26:15"},"nodeType":"YulIf","src":"3217:61:15"},{"body":{"nodeType":"YulBlock","src":"3337:168:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3358:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3361:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3351:6:15"},"nodeType":"YulFunctionCall","src":"3351:88:15"},"nodeType":"YulExpressionStatement","src":"3351:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3459:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3462:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:15"},"nodeType":"YulFunctionCall","src":"3452:15:15"},"nodeType":"YulExpressionStatement","src":"3452:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3487:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3490:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3480:6:15"},"nodeType":"YulFunctionCall","src":"3480:15:15"},"nodeType":"YulExpressionStatement","src":"3480:15:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3293:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3316:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3313:2:15"},"nodeType":"YulFunctionCall","src":"3313:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3290:2:15"},"nodeType":"YulFunctionCall","src":"3290:38:15"},"nodeType":"YulIf","src":"3287:218:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3109:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3118:6:15","type":""}],"src":"3074:437:15"},{"body":{"nodeType":"YulBlock","src":"3572:65:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3589:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3592:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3582:6:15"},"nodeType":"YulFunctionCall","src":"3582:14:15"},"nodeType":"YulExpressionStatement","src":"3582:14:15"},{"nodeType":"YulAssignment","src":"3605:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3623:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3626:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3613:9:15"},"nodeType":"YulFunctionCall","src":"3613:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3605:4:15"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3555:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3563:4:15","type":""}],"src":"3516:121:15"},{"body":{"nodeType":"YulBlock","src":"3723:464:15","statements":[{"body":{"nodeType":"YulBlock","src":"3756:425:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3770:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3780:1:15","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3774:2:15","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3801:2:15"},{"name":"array","nodeType":"YulIdentifier","src":"3805:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3794:6:15"},"nodeType":"YulFunctionCall","src":"3794:17:15"},"nodeType":"YulExpressionStatement","src":"3794:17:15"},{"nodeType":"YulVariableDeclaration","src":"3824:31:15","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3846:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"3850:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3836:9:15"},"nodeType":"YulFunctionCall","src":"3836:19:15"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"3828:4:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3868:57:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3891:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3901:1:15","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3908:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"3920:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3904:3:15"},"nodeType":"YulFunctionCall","src":"3904:19:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3897:3:15"},"nodeType":"YulFunctionCall","src":"3897:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3887:3:15"},"nodeType":"YulFunctionCall","src":"3887:38:15"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3872:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3962:23:15","statements":[{"nodeType":"YulAssignment","src":"3964:19:15","value":{"name":"data","nodeType":"YulIdentifier","src":"3979:4:15"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3964:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3944:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"3956:4:15","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3941:2:15"},"nodeType":"YulFunctionCall","src":"3941:20:15"},"nodeType":"YulIf","src":"3938:47:15"},{"nodeType":"YulVariableDeclaration","src":"3998:41:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4012:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4022:1:15","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4029:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4034:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:15"},"nodeType":"YulFunctionCall","src":"4025:12:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4018:3:15"},"nodeType":"YulFunctionCall","src":"4018:20:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4008:3:15"},"nodeType":"YulFunctionCall","src":"4008:31:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4002:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4052:24:15","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"4065:11:15"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4056:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4150:21:15","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4159:5:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4166:2:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4152:6:15"},"nodeType":"YulFunctionCall","src":"4152:17:15"},"nodeType":"YulExpressionStatement","src":"4152:17:15"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4100:5:15"},{"name":"_2","nodeType":"YulIdentifier","src":"4107:2:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4097:2:15"},"nodeType":"YulFunctionCall","src":"4097:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4111:26:15","statements":[{"nodeType":"YulAssignment","src":"4113:22:15","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4126:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4133:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:15"},"nodeType":"YulFunctionCall","src":"4122:13:15"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4113:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"4093:3:15","statements":[]},"src":"4089:82:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3739:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3744:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3736:2:15"},"nodeType":"YulFunctionCall","src":"3736:11:15"},"nodeType":"YulIf","src":"3733:448:15"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3695:5:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"3702:3:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3707:10:15","type":""}],"src":"3642:545:15"},{"body":{"nodeType":"YulBlock","src":"4277:141:15","statements":[{"nodeType":"YulAssignment","src":"4287:125:15","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4302:4:15"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4320:1:15","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"4323:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4316:3:15"},"nodeType":"YulFunctionCall","src":"4316:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"4329:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4312:3:15"},"nodeType":"YulFunctionCall","src":"4312:84:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4308:3:15"},"nodeType":"YulFunctionCall","src":"4308:89:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4298:3:15"},"nodeType":"YulFunctionCall","src":"4298:100:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4404:1:15","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"4407:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4400:3:15"},"nodeType":"YulFunctionCall","src":"4400:11:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4295:2:15"},"nodeType":"YulFunctionCall","src":"4295:117:15"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4287:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4254:4:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"4260:3:15","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4268:4:15","type":""}],"src":"4192:226:15"},{"body":{"nodeType":"YulBlock","src":"4519:1375:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4529:24:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4549:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4543:5:15"},"nodeType":"YulFunctionCall","src":"4543:10:15"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4533:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4596:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4598:16:15"},"nodeType":"YulFunctionCall","src":"4598:18:15"},"nodeType":"YulExpressionStatement","src":"4598:18:15"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4568:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4576:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4565:2:15"},"nodeType":"YulFunctionCall","src":"4565:30:15"},"nodeType":"YulIf","src":"4562:56:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4671:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4709:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4703:5:15"},"nodeType":"YulFunctionCall","src":"4703:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4677:25:15"},"nodeType":"YulFunctionCall","src":"4677:38:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"4717:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"4627:43:15"},"nodeType":"YulFunctionCall","src":"4627:97:15"},"nodeType":"YulExpressionStatement","src":"4627:97:15"},{"nodeType":"YulVariableDeclaration","src":"4733:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4750:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4737:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4760:23:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4779:4:15","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"4764:11:15","type":""}]},{"nodeType":"YulAssignment","src":"4792:24:15","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4805:11:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4792:9:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4862:775:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4876:94:15","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4903:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:15"},"nodeType":"YulFunctionCall","src":"4891:79:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4880:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4983:49:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5027:4:15"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"4997:29:15"},"nodeType":"YulFunctionCall","src":"4997:35:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4987:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5045:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5054:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5049:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5132:172:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5157:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5175:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5180:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:15"},"nodeType":"YulFunctionCall","src":"5171:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5165:5:15"},"nodeType":"YulFunctionCall","src":"5165:26:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5150:6:15"},"nodeType":"YulFunctionCall","src":"5150:42:15"},"nodeType":"YulExpressionStatement","src":"5150:42:15"},{"nodeType":"YulAssignment","src":"5209:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5223:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5231:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:15"},"nodeType":"YulFunctionCall","src":"5219:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5209:6:15"}]},{"nodeType":"YulAssignment","src":"5250:40:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5267:9:15"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"5278:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5263:3:15"},"nodeType":"YulFunctionCall","src":"5263:27:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5250:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5079:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5082:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5076:2:15"},"nodeType":"YulFunctionCall","src":"5076:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5091:28:15","statements":[{"nodeType":"YulAssignment","src":"5093:24:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5102:1:15"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"5105:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5098:3:15"},"nodeType":"YulFunctionCall","src":"5098:19:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5093:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"5072:3:15","statements":[]},"src":"5068:236:15"},{"body":{"nodeType":"YulBlock","src":"5352:226:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5370:43:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5397:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5402:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5393:3:15"},"nodeType":"YulFunctionCall","src":"5393:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5387:5:15"},"nodeType":"YulFunctionCall","src":"5387:26:15"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5374:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5437:6:15"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5449:9:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5476:1:15","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"5479:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5472:3:15"},"nodeType":"YulFunctionCall","src":"5472:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"5488:3:15","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5468:3:15"},"nodeType":"YulFunctionCall","src":"5468:24:15"},{"kind":"number","nodeType":"YulLiteral","src":"5494:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5464:3:15"},"nodeType":"YulFunctionCall","src":"5464:97:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5460:3:15"},"nodeType":"YulFunctionCall","src":"5460:102:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5445:3:15"},"nodeType":"YulFunctionCall","src":"5445:118:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5430:6:15"},"nodeType":"YulFunctionCall","src":"5430:134:15"},"nodeType":"YulExpressionStatement","src":"5430:134:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5323:7:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"5332:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5320:2:15"},"nodeType":"YulFunctionCall","src":"5320:19:15"},"nodeType":"YulIf","src":"5317:261:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5598:4:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:1:15","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"5615:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5608:3:15"},"nodeType":"YulFunctionCall","src":"5608:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"5624:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5604:3:15"},"nodeType":"YulFunctionCall","src":"5604:22:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5591:6:15"},"nodeType":"YulFunctionCall","src":"5591:36:15"},"nodeType":"YulExpressionStatement","src":"5591:36:15"}]},"nodeType":"YulCase","src":"4855:782:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4860:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5654:234:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5668:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5681:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5672:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5717:67:15","statements":[{"nodeType":"YulAssignment","src":"5735:35:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5754:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5759:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:15"},"nodeType":"YulFunctionCall","src":"5750:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5744:5:15"},"nodeType":"YulFunctionCall","src":"5744:26:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5735:5:15"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5698:6:15"},"nodeType":"YulIf","src":"5695:89:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5804:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5863:5:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"5870:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5810:52:15"},"nodeType":"YulFunctionCall","src":"5810:67:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5797:6:15"},"nodeType":"YulFunctionCall","src":"5797:81:15"},"nodeType":"YulExpressionStatement","src":"5797:81:15"}]},"nodeType":"YulCase","src":"5646:242:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4835:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4843:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4832:2:15"},"nodeType":"YulFunctionCall","src":"4832:14:15"},"nodeType":"YulSwitch","src":"4825:1063:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4504:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"4510:3:15","type":""}],"src":"4423:1471:15"},{"body":{"nodeType":"YulBlock","src":"6002:1222:15","statements":[{"body":{"nodeType":"YulBlock","src":"6043:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6045:16:15"},"nodeType":"YulFunctionCall","src":"6045:18:15"},"nodeType":"YulExpressionStatement","src":"6045:18:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6018:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6023:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6015:2:15"},"nodeType":"YulFunctionCall","src":"6015:27:15"},"nodeType":"YulIf","src":"6012:53:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6118:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6156:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6150:5:15"},"nodeType":"YulFunctionCall","src":"6150:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6124:25:15"},"nodeType":"YulFunctionCall","src":"6124:38:15"},{"name":"len","nodeType":"YulIdentifier","src":"6164:3:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"6074:43:15"},"nodeType":"YulFunctionCall","src":"6074:94:15"},"nodeType":"YulExpressionStatement","src":"6074:94:15"},{"nodeType":"YulVariableDeclaration","src":"6177:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6194:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"6181:9:15","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6238:728:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6252:91:15","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6271:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6276:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6267:3:15"},"nodeType":"YulFunctionCall","src":"6267:76:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6256:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6356:49:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6400:4:15"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"6370:29:15"},"nodeType":"YulFunctionCall","src":"6370:35:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6360:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6418:18:15","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"6427:9:15"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6422:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6506:172:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6531:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6556:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6561:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6552:3:15"},"nodeType":"YulFunctionCall","src":"6552:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6539:12:15"},"nodeType":"YulFunctionCall","src":"6539:33:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6524:6:15"},"nodeType":"YulFunctionCall","src":"6524:49:15"},"nodeType":"YulExpressionStatement","src":"6524:49:15"},{"nodeType":"YulAssignment","src":"6590:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6604:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6612:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6600:3:15"},"nodeType":"YulFunctionCall","src":"6600:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6590:6:15"}]},{"nodeType":"YulAssignment","src":"6631:33:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6648:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6659:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6644:3:15"},"nodeType":"YulFunctionCall","src":"6644:20:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6631:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6460:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6463:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6457:2:15"},"nodeType":"YulFunctionCall","src":"6457:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6472:21:15","statements":[{"nodeType":"YulAssignment","src":"6474:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6483:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"6486:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6479:3:15"},"nodeType":"YulFunctionCall","src":"6479:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6474:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6453:3:15","statements":[]},"src":"6449:229:15"},{"body":{"nodeType":"YulBlock","src":"6723:187:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6748:6:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6777:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6782:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6773:3:15"},"nodeType":"YulFunctionCall","src":"6773:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6760:12:15"},"nodeType":"YulFunctionCall","src":"6760:33:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6811:1:15","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"6814:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6807:3:15"},"nodeType":"YulFunctionCall","src":"6807:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"6820:3:15","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6803:3:15"},"nodeType":"YulFunctionCall","src":"6803:21:15"},{"kind":"number","nodeType":"YulLiteral","src":"6826:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6799:3:15"},"nodeType":"YulFunctionCall","src":"6799:94:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6795:3:15"},"nodeType":"YulFunctionCall","src":"6795:99:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6756:3:15"},"nodeType":"YulFunctionCall","src":"6756:139:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6741:6:15"},"nodeType":"YulFunctionCall","src":"6741:155:15"},"nodeType":"YulExpressionStatement","src":"6741:155:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6697:7:15"},{"name":"len","nodeType":"YulIdentifier","src":"6706:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6694:2:15"},"nodeType":"YulFunctionCall","src":"6694:16:15"},"nodeType":"YulIf","src":"6691:219:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6930:4:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6944:1:15","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"6947:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6940:3:15"},"nodeType":"YulFunctionCall","src":"6940:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"6953:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6936:3:15"},"nodeType":"YulFunctionCall","src":"6936:19:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6923:6:15"},"nodeType":"YulFunctionCall","src":"6923:33:15"},"nodeType":"YulExpressionStatement","src":"6923:33:15"}]},"nodeType":"YulCase","src":"6231:735:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6236:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6983:235:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6997:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7010:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7001:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7043:74:15","statements":[{"nodeType":"YulAssignment","src":"7061:42:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7087:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7092:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7083:3:15"},"nodeType":"YulFunctionCall","src":"7083:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7070:12:15"},"nodeType":"YulFunctionCall","src":"7070:33:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7061:5:15"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"7027:3:15"},"nodeType":"YulIf","src":"7024:93:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7137:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7196:5:15"},{"name":"len","nodeType":"YulIdentifier","src":"7203:3:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"7143:52:15"},"nodeType":"YulFunctionCall","src":"7143:64:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7130:6:15"},"nodeType":"YulFunctionCall","src":"7130:78:15"},"nodeType":"YulExpressionStatement","src":"7130:78:15"}]},"nodeType":"YulCase","src":"6975:243:15","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6214:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6219:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6211:2:15"},"nodeType":"YulFunctionCall","src":"6211:11:15"},"nodeType":"YulSwitch","src":"6204:1014:15"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5982:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"5988:3:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"5993:3:15","type":""}],"src":"5899:1325:15"},{"body":{"nodeType":"YulBlock","src":"7403:182:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7420:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7431:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7413:6:15"},"nodeType":"YulFunctionCall","src":"7413:21:15"},"nodeType":"YulExpressionStatement","src":"7413:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7454:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7465:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7450:3:15"},"nodeType":"YulFunctionCall","src":"7450:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"7470:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7443:6:15"},"nodeType":"YulFunctionCall","src":"7443:30:15"},"nodeType":"YulExpressionStatement","src":"7443:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7493:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7504:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7489:3:15"},"nodeType":"YulFunctionCall","src":"7489:18:15"},{"hexValue":"4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"7509:34:15","type":"","value":"ChildProxy: only factory allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7482:6:15"},"nodeType":"YulFunctionCall","src":"7482:62:15"},"nodeType":"YulExpressionStatement","src":"7482:62:15"},{"nodeType":"YulAssignment","src":"7553:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:15"},"nodeType":"YulFunctionCall","src":"7561:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7553:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7380:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7394:4:15","type":""}],"src":"7229:356:15"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_2, 0x20), _3)\n        mstore(add(add(memPtr, _3), 0x20), 0)\n        value0 := memPtr\n        value1 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ChildProxy: only factory allowed\")\n        tail := add(headStart, 96)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"387":[{"length":32,"start":145},{"length":32,"start":506}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c8063ced7b2e311610050578063ced7b2e3146100e8578063d28d8852146100ff578063ee919d501461011457600080fd5b806388cc58e4146100775780638beaf7d7146100c0578063c4784fd4146100d5575b600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b6100d36100ce3660046102b6565b610127565b005b6100d36100e3366004610389565b610142565b6100f160025481565b6040519081526020016100b7565b610107610154565b6040516100b791906103fb565b6100d3610122366004610467565b600255565b61012f6101e2565b600161013b8382610521565b5060025550565b600161014f82848361063b565b505050565b6001805461016190610480565b80601f016020809104026020016040519081016040528092919081815260200182805461018d90610480565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564604482015260640160405180910390fd5b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156102c957600080fd5b823567ffffffffffffffff808211156102e157600080fd5b818501915085601f8301126102f557600080fd5b81358181111561030757610307610287565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561034d5761034d610287565b8160405282815288602084870101111561036657600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000806020838503121561039c57600080fd5b823567ffffffffffffffff808211156103b457600080fd5b818501915085601f8301126103c857600080fd5b8135818111156103d757600080fd5b8660208285010111156103e957600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156104285785810183015185820160400152820161040c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561047957600080fd5b5035919050565b600181811c9082168061049457607f821691505b6020821081036104cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561014f57600081815260208120601f850160051c810160208610156104fa5750805b601f850160051c820191505b8181101561051957828155600101610506565b505050505050565b815167ffffffffffffffff81111561053b5761053b610287565b61054f816105498454610480565b846104d3565b602080601f8311600181146105a2576000841561056c5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610519565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156105ef578886015182559484019460019091019084016105d0565b508582101561062b57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff83111561065357610653610287565b610667836106618354610480565b836104d3565b6000601f8411600181146106b957600085156106835750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561074f565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561070857868501358255602094850194600190920191016106e8565b5086821015610743577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea264697066735822122053ed17a79092a9ba102f94b054ac3a65278e082ce7acdc44dd78b85007fd0f7464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCED7B2E3 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xCED7B2E3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xEE919D50 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88CC58E4 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8BEAF7D7 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC4784FD4 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x389 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x12F PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x13B DUP4 DUP3 PUSH2 0x521 JUMP JUMPDEST POP PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14F DUP3 DUP5 DUP4 PUSH2 0x63B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x161 SWAP1 PUSH2 0x480 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18D SWAP1 PUSH2 0x480 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368696C6450726F78793A206F6E6C7920666163746F727920616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x307 JUMPI PUSH2 0x307 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x34D JUMPI PUSH2 0x34D PUSH2 0x287 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x428 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x40C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x494 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4CD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x519 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x506 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53B JUMPI PUSH2 0x53B PUSH2 0x287 JUMP JUMPDEST PUSH2 0x54F DUP2 PUSH2 0x549 DUP5 SLOAD PUSH2 0x480 JUMP JUMPDEST DUP5 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x56C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5EF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x5D0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x62B JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x667 DUP4 PUSH2 0x661 DUP4 SLOAD PUSH2 0x480 JUMP JUMPDEST DUP4 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x683 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x6E8 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x743 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xED OR 0xA7 SWAP1 SWAP3 0xA9 0xBA LT 0x2F SWAP5 0xB0 SLOAD 0xAC GASPRICE PUSH6 0x278E082CE7AC 0xDC DIFFICULTY 0xDD PUSH25 0xB85007FD0F7464736F6C634300081100330000000000000000 ","sourceMap":"200:672:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:84:3;;;190:42:15;731:8:3;178:55:15;160:74;;148:2;133:18;662:84:3;;;;;;;;606:119:6;;;;;;:::i;:::-;;:::i;:::-;;794:76;;;;;;:::i;:::-;;:::i;371:17::-;;;;;;;;;2241:25:15;;;2229:2;2214:18;371:17:6;2095:177:15;346:19:6;;;:::i;:::-;;;;;;;:::i;731:57::-;;;;;;:::i;:::-;774:2;:7;731:57;606:119;278:17:3;:15;:17::i;:::-;688:5:6::1;:13;696:5:::0;688;:13:::1;:::i;:::-;-1:-1:-1::0;711:2:6::1;:7:::0;-1:-1:-1;606:119:6:o;794:76::-;850:5;:13;858:5;;850;:13;:::i;:::-;;794:76;;:::o;346:19::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;531:125:3:-;590:10;:22;604:8;590:22;;582:67;;;;;;;7431:2:15;582:67:3;;;7413:21:15;;;7450:18;;;7443:30;7509:34;7489:18;;;7482:62;7561:18;;582:67:3;;;;;;;;531:125::o;245:184:15:-;297:77;294:1;287:88;394:4;391:1;384:15;418:4;415:1;408:15;434:1059;512:6;520;573:2;561:9;552:7;548:23;544:32;541:52;;;589:1;586;579:12;541:52;629:9;616:23;658:18;699:2;691:6;688:14;685:34;;;715:1;712;705:12;685:34;753:6;742:9;738:22;728:32;;798:7;791:4;787:2;783:13;779:27;769:55;;820:1;817;810:12;769:55;856:2;843:16;878:2;874;871:10;868:36;;;884:18;;:::i;:::-;1018:2;1012:9;1080:4;1072:13;;923:66;1068:22;;;1092:2;1064:31;1060:40;1048:53;;;1116:18;;;1136:22;;;1113:46;1110:72;;;1162:18;;:::i;:::-;1202:10;1198:2;1191:22;1237:2;1229:6;1222:18;1279:7;1272:4;1267:2;1263;1259:11;1255:22;1252:35;1249:55;;;1300:1;1297;1290:12;1249:55;1360:2;1353:4;1349:2;1345:13;1338:4;1330:6;1326:17;1313:50;1407:1;1400:4;1383:15;;;1379:26;;1372:37;1383:15;1466:20;;;;1453:34;;-1:-1:-1;;;;;;434:1059:15:o;1498:592::-;1569:6;1577;1630:2;1618:9;1609:7;1605:23;1601:32;1598:52;;;1646:1;1643;1636:12;1598:52;1686:9;1673:23;1715:18;1756:2;1748:6;1745:14;1742:34;;;1772:1;1769;1762:12;1742:34;1810:6;1799:9;1795:22;1785:32;;1855:7;1848:4;1844:2;1840:13;1836:27;1826:55;;1877:1;1874;1867:12;1826:55;1917:2;1904:16;1943:2;1935:6;1932:14;1929:34;;;1959:1;1956;1949:12;1929:34;2004:7;1999:2;1990:6;1986:2;1982:15;1978:24;1975:37;1972:57;;;2025:1;2022;2015:12;1972:57;2056:2;2048:11;;;;;2078:6;;-1:-1:-1;1498:592:15;;-1:-1:-1;;;;1498:592:15:o;2277:607::-;2389:4;2418:2;2447;2436:9;2429:21;2479:6;2473:13;2522:6;2517:2;2506:9;2502:18;2495:34;2547:1;2557:140;2571:6;2568:1;2565:13;2557:140;;;2666:14;;;2662:23;;2656:30;2632:17;;;2651:2;2628:26;2621:66;2586:10;;2557:140;;;2561:3;2746:1;2741:2;2732:6;2721:9;2717:22;2713:31;2706:42;2875:2;2805:66;2800:2;2792:6;2788:15;2784:88;2773:9;2769:104;2765:113;2757:121;;;;2277:607;;;;:::o;2889:180::-;2948:6;3001:2;2989:9;2980:7;2976:23;2972:32;2969:52;;;3017:1;3014;3007:12;2969:52;-1:-1:-1;3040:23:15;;2889:180;-1:-1:-1;2889:180:15:o;3074:437::-;3153:1;3149:12;;;;3196;;;3217:61;;3271:4;3263:6;3259:17;3249:27;;3217:61;3324:2;3316:6;3313:14;3293:18;3290:38;3287:218;;3361:77;3358:1;3351:88;3462:4;3459:1;3452:15;3490:4;3487:1;3480:15;3287:218;;3074:437;;;:::o;3642:545::-;3744:2;3739:3;3736:11;3733:448;;;3780:1;3805:5;3801:2;3794:17;3850:4;3846:2;3836:19;3920:2;3908:10;3904:19;3901:1;3897:27;3891:4;3887:38;3956:4;3944:10;3941:20;3938:47;;;-1:-1:-1;3979:4:15;3938:47;4034:2;4029:3;4025:12;4022:1;4018:20;4012:4;4008:31;3998:41;;4089:82;4107:2;4100:5;4097:13;4089:82;;;4152:17;;;4133:1;4122:13;4089:82;;;4093:3;;;3642:545;;;:::o;4423:1471::-;4549:3;4543:10;4576:18;4568:6;4565:30;4562:56;;;4598:18;;:::i;:::-;4627:97;4717:6;4677:38;4709:4;4703:11;4677:38;:::i;:::-;4671:4;4627:97;:::i;:::-;4779:4;;4843:2;4832:14;;4860:1;4855:782;;;;5681:1;5698:6;5695:89;;;-1:-1:-1;5750:19:15;;;5744:26;5695:89;4329:66;4320:1;4316:11;;;4312:84;4308:89;4298:100;4404:1;4400:11;;;4295:117;5797:81;;4825:1063;;4855:782;3589:1;3582:14;;;3626:4;3613:18;;4903:66;4891:79;;;5068:236;5082:7;5079:1;5076:14;5068:236;;;5171:19;;;5165:26;5150:42;;5263:27;;;;5231:1;5219:14;;;;5098:19;;5068:236;;;5072:3;5332:6;5323:7;5320:19;5317:261;;;5393:19;;;5387:26;5494:66;5476:1;5472:14;;;5488:3;5468:24;5464:97;5460:102;5445:118;5430:134;;5317:261;-1:-1:-1;;;;;5624:1:15;5608:14;;;5604:22;5591:36;;-1:-1:-1;4423:1471:15:o;5899:1325::-;6023:18;6018:3;6015:27;6012:53;;;6045:18;;:::i;:::-;6074:94;6164:3;6124:38;6156:4;6150:11;6124:38;:::i;:::-;6118:4;6074:94;:::i;:::-;6194:1;6219:2;6214:3;6211:11;6236:1;6231:735;;;;7010:1;7027:3;7024:93;;;-1:-1:-1;7083:19:15;;;7070:33;7024:93;4329:66;4320:1;4316:11;;;4312:84;4308:89;4298:100;4404:1;4400:11;;;4295:117;7130:78;;6204:1014;;6231:735;3589:1;3582:14;;;3626:4;3613:18;;6276:66;6267:76;;;6427:9;6449:229;6463:7;6460:1;6457:14;6449:229;;;6552:19;;;6539:33;6524:49;;6659:4;6644:20;;;;6612:1;6600:14;;;;6479:12;6449:229;;;6453:3;6706;6697:7;6694:16;6691:219;;;6826:66;6820:3;6814;6811:1;6807:11;6803:21;6799:94;6795:99;6782:9;6777:3;6773:19;6760:33;6756:139;6748:6;6741:155;6691:219;;;6953:1;6947:3;6944:1;6940:11;6936:19;6930:4;6923:33;6204:1014;;;5899:1325;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"386400","executionCost":"infinite","totalCost":"infinite"},"external":{"_a()":"2295","_name()":"infinite","getFactory()":"infinite","initialize(string,uint256)":"infinite","setA(uint256)":"22356","setMsg(string)":"infinite"}},"methodIdentifiers":{"_a()":"ced7b2e3","_name()":"d28d8852","getFactory()":"88cc58e4","initialize(string,uint256)":"8beaf7d7","setA(uint256)":"ee919d50","setMsg(string)":"c4784fd4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"anotherMock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anotherAnotherMock_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"a_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a_\",\"type\":\"uint256\"}],\"name\":\"setA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"name\":\"setMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This mock inheirts the ProxyChild contract to simplify constructor / initialization logic\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockContract.sol\":\"Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/ProxyChild.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title ProxyChild\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\ncontract ProxyChild {\\n    address immutable _factory;\\n    bool _locked;\\n\\n    modifier onlyFactory() {\\n        senderIsFactory();\\n        _;\\n    }\\n\\n    modifier onlyFactoryOnce() {\\n        senderIsFactory();\\n        require(!_locked, \\\"Initialized is locked\\\");\\n        _;\\n        _locked = true;\\n    }\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    function senderIsFactory() internal view {\\n        require(msg.sender == _factory, \\\"ChildProxy: only factory allowed\\\");\\n    }\\n\\n    function getFactory() public view returns (address) {\\n        return _factory;\\n    }\\n}\",\"keccak256\":\"0x569c0466eedbd7adc06b85556c553d3c16ea7b4ba773253c5e632628f5dcc9c3\",\"license\":\"MIT-open-group\"},\"contracts/mocks/MockContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\nimport \\\"../ProxyChild.sol\\\";\\n\\n/**\\n@dev This mock inheirts the ProxyChild contract to simplify constructor / initialization logic\\n*/\\ncontract Mock is ProxyChild {\\n    uint256 immutable _version;\\n    address immutable _anotherAnotherMock;\\n    address immutable _anotherMock;\\n\\n    string public _name;\\n    uint256 public _a;\\n\\n    constructor(uint256 version_, address anotherMock_, address anotherAnotherMock_) {\\n        _version = version_;\\n        _anotherMock = anotherMock_;\\n        _anotherAnotherMock = anotherAnotherMock_;\\n    }\\n\\n    function initialize(string memory name_, uint256 a_) public onlyFactory {\\n        _name = name_;\\n        _a = a_;\\n    }\\n\\n    function setA(uint256 a_) public {\\n        _a = a_;\\n    }\\n\\n    function setMsg(string calldata name_) public {\\n        _name = name_;\\n    }\\n}\\n\",\"keccak256\":\"0x17f2a0b7261151f66f81a8bf3f1ee9c791822df3525f673dab6a27bf50acb998\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[{"astId":389,"contract":"contracts/mocks/MockContract.sol:Mock","label":"_locked","offset":0,"slot":"0","type":"t_bool"},{"astId":1169,"contract":"contracts/mocks/MockContract.sol:Mock","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1171,"contract":"contracts/mocks/MockContract.sol:Mock","label":"_a","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/MockContract2.sol":{"Mock2":{"abi":[{"inputs":[{"internalType":"address","name":"factory_","type":"address"},{"internalType":"uint256","name":"version_","type":"uint256"},{"internalType":"address","name":"anotherMock_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"_a","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"uint256","name":"a_","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"a_","type":"uint256"}],"name":"setA","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"name":"setMsg","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This mock does not inheirt the ProxyChild contract and implements the logic itself","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1279":{"entryPoint":null,"id":1279,"parameterSlots":3,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":76,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_address_fromMemory":{"entryPoint":104,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:552:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:15","statements":[{"nodeType":"YulAssignment","src":"84:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:15"},"nodeType":"YulFunctionCall","src":"93:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:15"}]},{"body":{"nodeType":"YulBlock","src":"169:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:15"},"nodeType":"YulFunctionCall","src":"171:12:15"},"nodeType":"YulExpressionStatement","src":"171:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:15"},"nodeType":"YulFunctionCall","src":"150:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:15"},"nodeType":"YulFunctionCall","src":"146:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:15"},"nodeType":"YulFunctionCall","src":"135:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:15"},"nodeType":"YulFunctionCall","src":"125:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:15"},"nodeType":"YulFunctionCall","src":"118:50:15"},"nodeType":"YulIf","src":"115:70:15"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"14:177:15"},{"body":{"nodeType":"YulBlock","src":"311:239:15","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:15"},"nodeType":"YulFunctionCall","src":"359:12:15"},"nodeType":"YulExpressionStatement","src":"359:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:15"},"nodeType":"YulFunctionCall","src":"328:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:15"},"nodeType":"YulFunctionCall","src":"324:32:15"},"nodeType":"YulIf","src":"321:52:15"},{"nodeType":"YulAssignment","src":"382:50:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:15"},"nodeType":"YulFunctionCall","src":"392:40:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:15"}]},{"nodeType":"YulAssignment","src":"441:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"461:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"472:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"457:3:15"},"nodeType":"YulFunctionCall","src":"457:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"451:5:15"},"nodeType":"YulFunctionCall","src":"451:25:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:15"}]},{"nodeType":"YulAssignment","src":"485:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"529:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:18:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"495:29:15"},"nodeType":"YulFunctionCall","src":"495:49:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"485:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:15","type":""}],"src":"196:354:15"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405234801561001057600080fd5b506040516107ff3803806107ff83398101604081905261002f91610068565b6001600160a01b0392831660c0526080919091521660a0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c0516107336100cc600039600060f0015260005050600050506107336000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063ced7b2e311610050578063ced7b2e314610094578063d28d8852146100b0578063ee919d50146100c557600080fd5b80638beaf7d71461006c578063c4784fd414610081575b600080fd5b61007f61007a36600461025d565b6100d8565b005b61007f61008f366004610330565b61018e565b61009d60015481565b6040519081526020015b60405180910390f35b6100b86101a0565b6040516100a791906103a2565b61007f6100d336600461040e565b600155565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564604482015260640160405180910390fd5b600061018783826104c8565b5060015550565b600061019b8284836105e2565b505050565b600080546101ad90610427565b80601f01602080910402602001604051908101604052809291908181526020018280546101d990610427565b80156102265780601f106101fb57610100808354040283529160200191610226565b820191906000526020600020905b81548152906001019060200180831161020957829003601f168201915b505050505081565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561027057600080fd5b823567ffffffffffffffff8082111561028857600080fd5b818501915085601f83011261029c57600080fd5b8135818111156102ae576102ae61022e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156102f4576102f461022e565b8160405282815288602084870101111561030d57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000806020838503121561034357600080fd5b823567ffffffffffffffff8082111561035b57600080fd5b818501915085601f83011261036f57600080fd5b81358181111561037e57600080fd5b86602082850101111561039057600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156103cf578581018301518582016040015282016103b3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561042057600080fd5b5035919050565b600181811c9082168061043b57607f821691505b602082108103610474577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561019b57600081815260208120601f850160051c810160208610156104a15750805b601f850160051c820191505b818110156104c0578281556001016104ad565b505050505050565b815167ffffffffffffffff8111156104e2576104e261022e565b6104f6816104f08454610427565b8461047a565b602080601f83116001811461054957600084156105135750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556104c0565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561059657888601518255948401946001909101908401610577565b50858210156105d257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8311156105fa576105fa61022e565b61060e836106088354610427565b8361047a565b6000601f841160018114610660576000851561062a5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556106f6565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156106af578685013582556020948501946001909201910161068f565b50868210156106ea577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea2646970667358221220e85fde44e55d99cf1f53ac86f977224857d8ce17847c0d700d6659c9c64ca60664736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7FF CODESIZE SUB DUP1 PUSH2 0x7FF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0xC0 MSTORE PUSH1 0x80 SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xA4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86 DUP5 PUSH2 0x4C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH2 0x9B PUSH1 0x40 DUP6 ADD PUSH2 0x4C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x733 PUSH2 0xCC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xF0 ADD MSTORE PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH2 0x733 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCED7B2E3 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xCED7B2E3 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xEE919D50 EQ PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BEAF7D7 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC4784FD4 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x25D JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x330 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0x9D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x7F PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368696C6450726F78793A206F6E6C7920666163746F727920616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x187 DUP4 DUP3 PUSH2 0x4C8 JUMP JUMPDEST POP PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 DUP5 DUP4 PUSH2 0x5E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1AD SWAP1 PUSH2 0x427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D9 SWAP1 PUSH2 0x427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x226 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x226 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x209 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AE PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2F4 JUMPI PUSH2 0x2F4 PUSH2 0x22E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3B3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x43B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x474 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4A1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4AD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4E2 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x4F6 DUP2 PUSH2 0x4F0 DUP5 SLOAD PUSH2 0x427 JUMP JUMPDEST DUP5 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x513 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x596 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x577 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5D2 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x5FA JUMPI PUSH2 0x5FA PUSH2 0x22E JUMP JUMPDEST PUSH2 0x60E DUP4 PUSH2 0x608 DUP4 SLOAD PUSH2 0x427 JUMP JUMPDEST DUP4 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x660 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x62A JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6AF JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x68F JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x6EA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x5F 0xDE DIFFICULTY 0xE5 0x5D SWAP10 0xCF 0x1F MSTORE8 0xAC DUP7 0xF9 PUSH24 0x224857D8CE17847C0D700D6659C9C64CA60664736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"164:739:7:-:0;;;459:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;539:19:7;;;;;568;;;;;597:27;;;164:739;;14:177:15;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;:::-;164:739:7;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_a_1245":{"entryPoint":null,"id":1245,"parameterSlots":0,"returnSlots":0},"@_name_1243":{"entryPoint":416,"id":1243,"parameterSlots":0,"returnSlots":0},"@initialize_1297":{"entryPoint":216,"id":1297,"parameterSlots":2,"returnSlots":0},"@setA_1307":{"entryPoint":null,"id":1307,"parameterSlots":1,"returnSlots":0},"@setMsg_1317":{"entryPoint":398,"id":1317,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":816,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1146,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":1506,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1224,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1063,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":558,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7356:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"66:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:15"},"nodeType":"YulFunctionCall","src":"56:88:15"},"nodeType":"YulExpressionStatement","src":"56:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"160:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"163:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"153:6:15"},"nodeType":"YulFunctionCall","src":"153:15:15"},"nodeType":"YulExpressionStatement","src":"153:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"184:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"187:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"177:6:15"},"nodeType":"YulFunctionCall","src":"177:15:15"},"nodeType":"YulExpressionStatement","src":"177:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:184:15"},{"body":{"nodeType":"YulBlock","src":"300:962:15","statements":[{"body":{"nodeType":"YulBlock","src":"346:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"355:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"358:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"348:6:15"},"nodeType":"YulFunctionCall","src":"348:12:15"},"nodeType":"YulExpressionStatement","src":"348:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"321:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"330:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"317:3:15"},"nodeType":"YulFunctionCall","src":"317:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"342:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"313:3:15"},"nodeType":"YulFunctionCall","src":"313:32:15"},"nodeType":"YulIf","src":"310:52:15"},{"nodeType":"YulVariableDeclaration","src":"371:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"398:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"385:12:15"},"nodeType":"YulFunctionCall","src":"385:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"375:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"417:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"427:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"421:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"472:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"481:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"484:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"474:6:15"},"nodeType":"YulFunctionCall","src":"474:12:15"},"nodeType":"YulExpressionStatement","src":"474:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"460:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"468:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"457:2:15"},"nodeType":"YulFunctionCall","src":"457:14:15"},"nodeType":"YulIf","src":"454:34:15"},{"nodeType":"YulVariableDeclaration","src":"497:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"511:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"522:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:15"},"nodeType":"YulFunctionCall","src":"507:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"501:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"577:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"586:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"589:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"579:6:15"},"nodeType":"YulFunctionCall","src":"579:12:15"},"nodeType":"YulExpressionStatement","src":"579:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"556:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"560:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:15"},"nodeType":"YulFunctionCall","src":"552:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"567:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"548:3:15"},"nodeType":"YulFunctionCall","src":"548:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"541:6:15"},"nodeType":"YulFunctionCall","src":"541:35:15"},"nodeType":"YulIf","src":"538:55:15"},{"nodeType":"YulVariableDeclaration","src":"602:26:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"625:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"612:12:15"},"nodeType":"YulFunctionCall","src":"612:16:15"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"606:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"651:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"653:16:15"},"nodeType":"YulFunctionCall","src":"653:18:15"},"nodeType":"YulExpressionStatement","src":"653:18:15"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"643:2:15"},{"name":"_1","nodeType":"YulIdentifier","src":"647:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"640:2:15"},"nodeType":"YulFunctionCall","src":"640:10:15"},"nodeType":"YulIf","src":"637:36:15"},{"nodeType":"YulVariableDeclaration","src":"682:76:15","value":{"kind":"number","nodeType":"YulLiteral","src":"692:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"686:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"767:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"787:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"781:5:15"},"nodeType":"YulFunctionCall","src":"781:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"771:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"799:71:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"821:6:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"845:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"849:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"841:3:15"},"nodeType":"YulFunctionCall","src":"841:13:15"},{"name":"_4","nodeType":"YulIdentifier","src":"856:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"837:3:15"},"nodeType":"YulFunctionCall","src":"837:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"861:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"833:3:15"},"nodeType":"YulFunctionCall","src":"833:31:15"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"829:3:15"},"nodeType":"YulFunctionCall","src":"829:40:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:15"},"nodeType":"YulFunctionCall","src":"817:53:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"803:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"929:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"931:16:15"},"nodeType":"YulFunctionCall","src":"931:18:15"},"nodeType":"YulExpressionStatement","src":"931:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"888:10:15"},{"name":"_1","nodeType":"YulIdentifier","src":"900:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"885:2:15"},"nodeType":"YulFunctionCall","src":"885:18:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"908:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"920:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"905:2:15"},"nodeType":"YulFunctionCall","src":"905:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"882:2:15"},"nodeType":"YulFunctionCall","src":"882:46:15"},"nodeType":"YulIf","src":"879:72:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"967:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"971:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"960:6:15"},"nodeType":"YulFunctionCall","src":"960:22:15"},"nodeType":"YulExpressionStatement","src":"960:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"998:6:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1006:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"991:6:15"},"nodeType":"YulFunctionCall","src":"991:18:15"},"nodeType":"YulExpressionStatement","src":"991:18:15"},{"body":{"nodeType":"YulBlock","src":"1057:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1066:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1069:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1059:6:15"},"nodeType":"YulFunctionCall","src":"1059:12:15"},"nodeType":"YulExpressionStatement","src":"1059:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1032:2:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1036:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:15"},"nodeType":"YulFunctionCall","src":"1028:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"1041:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1024:3:15"},"nodeType":"YulFunctionCall","src":"1024:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1048:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1021:2:15"},"nodeType":"YulFunctionCall","src":"1021:35:15"},"nodeType":"YulIf","src":"1018:55:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1099:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:15"},"nodeType":"YulFunctionCall","src":"1095:17:15"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1118:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1122:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1114:3:15"},"nodeType":"YulFunctionCall","src":"1114:13:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1129:2:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1082:12:15"},"nodeType":"YulFunctionCall","src":"1082:50:15"},"nodeType":"YulExpressionStatement","src":"1082:50:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1156:6:15"},{"name":"_3","nodeType":"YulIdentifier","src":"1164:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1152:3:15"},"nodeType":"YulFunctionCall","src":"1152:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1169:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1148:3:15"},"nodeType":"YulFunctionCall","src":"1148:26:15"},{"kind":"number","nodeType":"YulLiteral","src":"1176:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1141:6:15"},"nodeType":"YulFunctionCall","src":"1141:37:15"},"nodeType":"YulExpressionStatement","src":"1141:37:15"},{"nodeType":"YulAssignment","src":"1187:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1197:6:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1187:6:15"}]},{"nodeType":"YulAssignment","src":"1212:44:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1239:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1250:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1235:3:15"},"nodeType":"YulFunctionCall","src":"1235:20:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1222:12:15"},"nodeType":"YulFunctionCall","src":"1222:34:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1212:6:15"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"289:6:15","type":""}],"src":"203:1059:15"},{"body":{"nodeType":"YulBlock","src":"1357:502:15","statements":[{"body":{"nodeType":"YulBlock","src":"1403:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1412:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1415:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1405:6:15"},"nodeType":"YulFunctionCall","src":"1405:12:15"},"nodeType":"YulExpressionStatement","src":"1405:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1378:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1374:3:15"},"nodeType":"YulFunctionCall","src":"1374:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1399:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1370:3:15"},"nodeType":"YulFunctionCall","src":"1370:32:15"},"nodeType":"YulIf","src":"1367:52:15"},{"nodeType":"YulVariableDeclaration","src":"1428:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1455:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1442:12:15"},"nodeType":"YulFunctionCall","src":"1442:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1432:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1474:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1484:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1478:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1529:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1531:6:15"},"nodeType":"YulFunctionCall","src":"1531:12:15"},"nodeType":"YulExpressionStatement","src":"1531:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1517:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1525:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1514:2:15"},"nodeType":"YulFunctionCall","src":"1514:14:15"},"nodeType":"YulIf","src":"1511:34:15"},{"nodeType":"YulVariableDeclaration","src":"1554:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1568:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1579:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:15"},"nodeType":"YulFunctionCall","src":"1564:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1558:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1634:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1643:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1646:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1636:6:15"},"nodeType":"YulFunctionCall","src":"1636:12:15"},"nodeType":"YulExpressionStatement","src":"1636:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1613:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1617:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1609:3:15"},"nodeType":"YulFunctionCall","src":"1609:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1624:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1605:3:15"},"nodeType":"YulFunctionCall","src":"1605:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1598:6:15"},"nodeType":"YulFunctionCall","src":"1598:35:15"},"nodeType":"YulIf","src":"1595:55:15"},{"nodeType":"YulVariableDeclaration","src":"1659:30:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1686:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1673:12:15"},"nodeType":"YulFunctionCall","src":"1673:16:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1663:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1716:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1725:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1728:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1718:6:15"},"nodeType":"YulFunctionCall","src":"1718:12:15"},"nodeType":"YulExpressionStatement","src":"1718:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1704:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1712:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1701:2:15"},"nodeType":"YulFunctionCall","src":"1701:14:15"},"nodeType":"YulIf","src":"1698:34:15"},{"body":{"nodeType":"YulBlock","src":"1782:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:15"},"nodeType":"YulFunctionCall","src":"1784:12:15"},"nodeType":"YulExpressionStatement","src":"1784:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1755:2:15"},{"name":"length","nodeType":"YulIdentifier","src":"1759:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1751:3:15"},"nodeType":"YulFunctionCall","src":"1751:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1768:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1747:3:15"},"nodeType":"YulFunctionCall","src":"1747:24:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1773:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1744:2:15"},"nodeType":"YulFunctionCall","src":"1744:37:15"},"nodeType":"YulIf","src":"1741:57:15"},{"nodeType":"YulAssignment","src":"1807:21:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1821:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1825:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:15"},"nodeType":"YulFunctionCall","src":"1817:11:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1807:6:15"}]},{"nodeType":"YulAssignment","src":"1837:16:15","value":{"name":"length","nodeType":"YulIdentifier","src":"1847:6:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1837:6:15"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1326:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1338:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1346:6:15","type":""}],"src":"1267:592:15"},{"body":{"nodeType":"YulBlock","src":"1965:76:15","statements":[{"nodeType":"YulAssignment","src":"1975:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1987:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1998:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1983:3:15"},"nodeType":"YulFunctionCall","src":"1983:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1975:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"2028:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2010:6:15"},"nodeType":"YulFunctionCall","src":"2010:25:15"},"nodeType":"YulExpressionStatement","src":"2010:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1934:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1945:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1956:4:15","type":""}],"src":"1864:177:15"},{"body":{"nodeType":"YulBlock","src":"2167:486:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2177:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2187:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2181:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2205:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2216:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2198:6:15"},"nodeType":"YulFunctionCall","src":"2198:21:15"},"nodeType":"YulExpressionStatement","src":"2198:21:15"},{"nodeType":"YulVariableDeclaration","src":"2228:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2248:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2242:5:15"},"nodeType":"YulFunctionCall","src":"2242:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2232:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2275:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2286:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2271:3:15"},"nodeType":"YulFunctionCall","src":"2271:18:15"},{"name":"length","nodeType":"YulIdentifier","src":"2291:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2264:6:15"},"nodeType":"YulFunctionCall","src":"2264:34:15"},"nodeType":"YulExpressionStatement","src":"2264:34:15"},{"nodeType":"YulVariableDeclaration","src":"2307:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2316:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2311:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2376:90:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2405:9:15"},{"name":"i","nodeType":"YulIdentifier","src":"2416:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2401:3:15"},"nodeType":"YulFunctionCall","src":"2401:17:15"},{"kind":"number","nodeType":"YulLiteral","src":"2420:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2397:3:15"},"nodeType":"YulFunctionCall","src":"2397:26:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2439:6:15"},{"name":"i","nodeType":"YulIdentifier","src":"2447:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:15"},"nodeType":"YulFunctionCall","src":"2435:14:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2451:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2431:3:15"},"nodeType":"YulFunctionCall","src":"2431:23:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2425:5:15"},"nodeType":"YulFunctionCall","src":"2425:30:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2390:6:15"},"nodeType":"YulFunctionCall","src":"2390:66:15"},"nodeType":"YulExpressionStatement","src":"2390:66:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2337:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2340:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2334:2:15"},"nodeType":"YulFunctionCall","src":"2334:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2348:19:15","statements":[{"nodeType":"YulAssignment","src":"2350:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2359:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2362:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2355:3:15"},"nodeType":"YulFunctionCall","src":"2355:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2350:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2330:3:15","statements":[]},"src":"2326:140:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:15"},{"name":"length","nodeType":"YulIdentifier","src":"2501:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2486:3:15"},"nodeType":"YulFunctionCall","src":"2486:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2482:3:15"},"nodeType":"YulFunctionCall","src":"2482:31:15"},{"kind":"number","nodeType":"YulLiteral","src":"2515:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2475:6:15"},"nodeType":"YulFunctionCall","src":"2475:42:15"},"nodeType":"YulExpressionStatement","src":"2475:42:15"},{"nodeType":"YulAssignment","src":"2526:121:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2542:9:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2561:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2569:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2557:3:15"},"nodeType":"YulFunctionCall","src":"2557:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"2574:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2553:3:15"},"nodeType":"YulFunctionCall","src":"2553:88:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:15"},"nodeType":"YulFunctionCall","src":"2538:104:15"},{"kind":"number","nodeType":"YulLiteral","src":"2644:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2534:3:15"},"nodeType":"YulFunctionCall","src":"2534:113:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2147:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2158:4:15","type":""}],"src":"2046:607:15"},{"body":{"nodeType":"YulBlock","src":"2728:110:15","statements":[{"body":{"nodeType":"YulBlock","src":"2774:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2783:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2786:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2776:6:15"},"nodeType":"YulFunctionCall","src":"2776:12:15"},"nodeType":"YulExpressionStatement","src":"2776:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2749:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2758:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2745:3:15"},"nodeType":"YulFunctionCall","src":"2745:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2770:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2741:3:15"},"nodeType":"YulFunctionCall","src":"2741:32:15"},"nodeType":"YulIf","src":"2738:52:15"},{"nodeType":"YulAssignment","src":"2799:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2822:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2809:12:15"},"nodeType":"YulFunctionCall","src":"2809:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2799:6:15"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2705:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2717:6:15","type":""}],"src":"2658:180:15"},{"body":{"nodeType":"YulBlock","src":"3017:182:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3034:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3045:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3027:6:15"},"nodeType":"YulFunctionCall","src":"3027:21:15"},"nodeType":"YulExpressionStatement","src":"3027:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3079:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3064:3:15"},"nodeType":"YulFunctionCall","src":"3064:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"3084:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3057:6:15"},"nodeType":"YulFunctionCall","src":"3057:30:15"},"nodeType":"YulExpressionStatement","src":"3057:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3107:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3118:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3103:3:15"},"nodeType":"YulFunctionCall","src":"3103:18:15"},{"hexValue":"4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"3123:34:15","type":"","value":"ChildProxy: only factory allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3096:6:15"},"nodeType":"YulFunctionCall","src":"3096:62:15"},"nodeType":"YulExpressionStatement","src":"3096:62:15"},{"nodeType":"YulAssignment","src":"3167:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3179:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3190:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:15"},"nodeType":"YulFunctionCall","src":"3175:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3167:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2994:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3008:4:15","type":""}],"src":"2843:356:15"},{"body":{"nodeType":"YulBlock","src":"3259:382:15","statements":[{"nodeType":"YulAssignment","src":"3269:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3283:1:15","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3286:4:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3279:3:15"},"nodeType":"YulFunctionCall","src":"3279:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3269:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3300:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3330:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"3336:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3326:3:15"},"nodeType":"YulFunctionCall","src":"3326:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3304:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3377:31:15","statements":[{"nodeType":"YulAssignment","src":"3379:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3393:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3401:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3389:3:15"},"nodeType":"YulFunctionCall","src":"3389:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3379:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3357:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3350:6:15"},"nodeType":"YulFunctionCall","src":"3350:26:15"},"nodeType":"YulIf","src":"3347:61:15"},{"body":{"nodeType":"YulBlock","src":"3467:168:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3488:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3491:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:15"},"nodeType":"YulFunctionCall","src":"3481:88:15"},"nodeType":"YulExpressionStatement","src":"3481:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3589:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3592:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3582:6:15"},"nodeType":"YulFunctionCall","src":"3582:15:15"},"nodeType":"YulExpressionStatement","src":"3582:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3617:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3620:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3610:6:15"},"nodeType":"YulFunctionCall","src":"3610:15:15"},"nodeType":"YulExpressionStatement","src":"3610:15:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3423:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3446:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3454:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3443:2:15"},"nodeType":"YulFunctionCall","src":"3443:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3420:2:15"},"nodeType":"YulFunctionCall","src":"3420:38:15"},"nodeType":"YulIf","src":"3417:218:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3239:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3248:6:15","type":""}],"src":"3204:437:15"},{"body":{"nodeType":"YulBlock","src":"3702:65:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3719:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3722:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3712:6:15"},"nodeType":"YulFunctionCall","src":"3712:14:15"},"nodeType":"YulExpressionStatement","src":"3712:14:15"},{"nodeType":"YulAssignment","src":"3735:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3753:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3756:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3743:9:15"},"nodeType":"YulFunctionCall","src":"3743:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3735:4:15"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3685:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3693:4:15","type":""}],"src":"3646:121:15"},{"body":{"nodeType":"YulBlock","src":"3853:464:15","statements":[{"body":{"nodeType":"YulBlock","src":"3886:425:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3910:1:15","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3904:2:15","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3931:2:15"},{"name":"array","nodeType":"YulIdentifier","src":"3935:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3924:6:15"},"nodeType":"YulFunctionCall","src":"3924:17:15"},"nodeType":"YulExpressionStatement","src":"3924:17:15"},{"nodeType":"YulVariableDeclaration","src":"3954:31:15","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3976:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"3980:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3966:9:15"},"nodeType":"YulFunctionCall","src":"3966:19:15"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"3958:4:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3998:57:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4021:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4031:1:15","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4038:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4034:3:15"},"nodeType":"YulFunctionCall","src":"4034:19:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4027:3:15"},"nodeType":"YulFunctionCall","src":"4027:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4017:3:15"},"nodeType":"YulFunctionCall","src":"4017:38:15"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4002:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4092:23:15","statements":[{"nodeType":"YulAssignment","src":"4094:19:15","value":{"name":"data","nodeType":"YulIdentifier","src":"4109:4:15"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4094:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4074:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"4086:4:15","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4071:2:15"},"nodeType":"YulFunctionCall","src":"4071:20:15"},"nodeType":"YulIf","src":"4068:47:15"},{"nodeType":"YulVariableDeclaration","src":"4128:41:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4142:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4152:1:15","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4159:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4164:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4155:3:15"},"nodeType":"YulFunctionCall","src":"4155:12:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4148:3:15"},"nodeType":"YulFunctionCall","src":"4148:20:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:15"},"nodeType":"YulFunctionCall","src":"4138:31:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4132:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4182:24:15","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"4195:11:15"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4186:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4280:21:15","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4289:5:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4296:2:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4282:6:15"},"nodeType":"YulFunctionCall","src":"4282:17:15"},"nodeType":"YulExpressionStatement","src":"4282:17:15"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4230:5:15"},{"name":"_2","nodeType":"YulIdentifier","src":"4237:2:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4227:2:15"},"nodeType":"YulFunctionCall","src":"4227:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4241:26:15","statements":[{"nodeType":"YulAssignment","src":"4243:22:15","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4256:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4263:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4252:3:15"},"nodeType":"YulFunctionCall","src":"4252:13:15"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4243:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"4223:3:15","statements":[]},"src":"4219:82:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3869:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3874:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3866:2:15"},"nodeType":"YulFunctionCall","src":"3866:11:15"},"nodeType":"YulIf","src":"3863:448:15"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3825:5:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"3832:3:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3837:10:15","type":""}],"src":"3772:545:15"},{"body":{"nodeType":"YulBlock","src":"4407:141:15","statements":[{"nodeType":"YulAssignment","src":"4417:125:15","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4432:4:15"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4450:1:15","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"4453:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4446:3:15"},"nodeType":"YulFunctionCall","src":"4446:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"4459:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4442:3:15"},"nodeType":"YulFunctionCall","src":"4442:84:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4438:3:15"},"nodeType":"YulFunctionCall","src":"4438:89:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4428:3:15"},"nodeType":"YulFunctionCall","src":"4428:100:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4534:1:15","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"4537:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4530:3:15"},"nodeType":"YulFunctionCall","src":"4530:11:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4425:2:15"},"nodeType":"YulFunctionCall","src":"4425:117:15"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4417:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4384:4:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"4390:3:15","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4398:4:15","type":""}],"src":"4322:226:15"},{"body":{"nodeType":"YulBlock","src":"4649:1375:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4659:24:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4679:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4673:5:15"},"nodeType":"YulFunctionCall","src":"4673:10:15"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4663:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4726:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4728:16:15"},"nodeType":"YulFunctionCall","src":"4728:18:15"},"nodeType":"YulExpressionStatement","src":"4728:18:15"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4698:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4706:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4695:2:15"},"nodeType":"YulFunctionCall","src":"4695:30:15"},"nodeType":"YulIf","src":"4692:56:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4801:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4839:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4833:5:15"},"nodeType":"YulFunctionCall","src":"4833:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4807:25:15"},"nodeType":"YulFunctionCall","src":"4807:38:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"4847:6:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"4757:43:15"},"nodeType":"YulFunctionCall","src":"4757:97:15"},"nodeType":"YulExpressionStatement","src":"4757:97:15"},{"nodeType":"YulVariableDeclaration","src":"4863:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4880:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4867:9:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4890:23:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4909:4:15","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"4894:11:15","type":""}]},{"nodeType":"YulAssignment","src":"4922:24:15","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4935:11:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4922:9:15"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4992:775:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5006:94:15","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5025:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5033:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5021:3:15"},"nodeType":"YulFunctionCall","src":"5021:79:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5010:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5113:49:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5157:4:15"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"5127:29:15"},"nodeType":"YulFunctionCall","src":"5127:35:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5117:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5175:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5184:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5179:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5262:172:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5287:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5305:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5310:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:15"},"nodeType":"YulFunctionCall","src":"5301:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5295:5:15"},"nodeType":"YulFunctionCall","src":"5295:26:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5280:6:15"},"nodeType":"YulFunctionCall","src":"5280:42:15"},"nodeType":"YulExpressionStatement","src":"5280:42:15"},{"nodeType":"YulAssignment","src":"5339:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5353:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5361:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5349:3:15"},"nodeType":"YulFunctionCall","src":"5349:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5339:6:15"}]},{"nodeType":"YulAssignment","src":"5380:40:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5397:9:15"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"5408:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5393:3:15"},"nodeType":"YulFunctionCall","src":"5393:27:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5380:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5209:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5212:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5206:2:15"},"nodeType":"YulFunctionCall","src":"5206:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5221:28:15","statements":[{"nodeType":"YulAssignment","src":"5223:24:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5232:1:15"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"5235:11:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5228:3:15"},"nodeType":"YulFunctionCall","src":"5228:19:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5223:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"5202:3:15","statements":[]},"src":"5198:236:15"},{"body":{"nodeType":"YulBlock","src":"5482:226:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5500:43:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5527:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5532:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5523:3:15"},"nodeType":"YulFunctionCall","src":"5523:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5517:5:15"},"nodeType":"YulFunctionCall","src":"5517:26:15"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5504:9:15","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5567:6:15"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5579:9:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5606:1:15","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"5609:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5602:3:15"},"nodeType":"YulFunctionCall","src":"5602:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"5618:3:15","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5598:3:15"},"nodeType":"YulFunctionCall","src":"5598:24:15"},{"kind":"number","nodeType":"YulLiteral","src":"5624:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5594:3:15"},"nodeType":"YulFunctionCall","src":"5594:97:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5590:3:15"},"nodeType":"YulFunctionCall","src":"5590:102:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5575:3:15"},"nodeType":"YulFunctionCall","src":"5575:118:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5560:6:15"},"nodeType":"YulFunctionCall","src":"5560:134:15"},"nodeType":"YulExpressionStatement","src":"5560:134:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5453:7:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"5462:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5450:2:15"},"nodeType":"YulFunctionCall","src":"5450:19:15"},"nodeType":"YulIf","src":"5447:261:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5728:4:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5742:1:15","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"5745:6:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5738:3:15"},"nodeType":"YulFunctionCall","src":"5738:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"5754:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5734:3:15"},"nodeType":"YulFunctionCall","src":"5734:22:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5721:6:15"},"nodeType":"YulFunctionCall","src":"5721:36:15"},"nodeType":"YulExpressionStatement","src":"5721:36:15"}]},"nodeType":"YulCase","src":"4985:782:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4990:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5784:234:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5798:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5811:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5802:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5847:67:15","statements":[{"nodeType":"YulAssignment","src":"5865:35:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5884:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5889:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5880:3:15"},"nodeType":"YulFunctionCall","src":"5880:19:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5874:5:15"},"nodeType":"YulFunctionCall","src":"5874:26:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5865:5:15"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5828:6:15"},"nodeType":"YulIf","src":"5825:89:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5934:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5993:5:15"},{"name":"newLen","nodeType":"YulIdentifier","src":"6000:6:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5940:52:15"},"nodeType":"YulFunctionCall","src":"5940:67:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5927:6:15"},"nodeType":"YulFunctionCall","src":"5927:81:15"},"nodeType":"YulExpressionStatement","src":"5927:81:15"}]},"nodeType":"YulCase","src":"5776:242:15","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4965:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4973:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4962:2:15"},"nodeType":"YulFunctionCall","src":"4962:14:15"},"nodeType":"YulSwitch","src":"4955:1063:15"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4634:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"4640:3:15","type":""}],"src":"4553:1471:15"},{"body":{"nodeType":"YulBlock","src":"6132:1222:15","statements":[{"body":{"nodeType":"YulBlock","src":"6173:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6175:16:15"},"nodeType":"YulFunctionCall","src":"6175:18:15"},"nodeType":"YulExpressionStatement","src":"6175:18:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6148:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6153:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6145:2:15"},"nodeType":"YulFunctionCall","src":"6145:27:15"},"nodeType":"YulIf","src":"6142:53:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6248:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6286:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6280:5:15"},"nodeType":"YulFunctionCall","src":"6280:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6254:25:15"},"nodeType":"YulFunctionCall","src":"6254:38:15"},{"name":"len","nodeType":"YulIdentifier","src":"6294:3:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"6204:43:15"},"nodeType":"YulFunctionCall","src":"6204:94:15"},"nodeType":"YulExpressionStatement","src":"6204:94:15"},{"nodeType":"YulVariableDeclaration","src":"6307:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6324:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"6311:9:15","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6368:728:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6382:91:15","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6401:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6406:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6397:3:15"},"nodeType":"YulFunctionCall","src":"6397:76:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6386:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6486:49:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6530:4:15"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"6500:29:15"},"nodeType":"YulFunctionCall","src":"6500:35:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6490:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6548:18:15","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"6557:9:15"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6552:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6636:172:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6661:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6686:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6691:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6682:3:15"},"nodeType":"YulFunctionCall","src":"6682:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6669:12:15"},"nodeType":"YulFunctionCall","src":"6669:33:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6654:6:15"},"nodeType":"YulFunctionCall","src":"6654:49:15"},"nodeType":"YulExpressionStatement","src":"6654:49:15"},{"nodeType":"YulAssignment","src":"6720:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6734:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6742:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6730:3:15"},"nodeType":"YulFunctionCall","src":"6730:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6720:6:15"}]},{"nodeType":"YulAssignment","src":"6761:33:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6778:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6789:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6774:3:15"},"nodeType":"YulFunctionCall","src":"6774:20:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6761:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6590:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6593:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6587:2:15"},"nodeType":"YulFunctionCall","src":"6587:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6602:21:15","statements":[{"nodeType":"YulAssignment","src":"6604:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6613:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"6616:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6609:3:15"},"nodeType":"YulFunctionCall","src":"6609:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6604:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6583:3:15","statements":[]},"src":"6579:229:15"},{"body":{"nodeType":"YulBlock","src":"6853:187:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6878:6:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6907:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6912:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6903:3:15"},"nodeType":"YulFunctionCall","src":"6903:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6890:12:15"},"nodeType":"YulFunctionCall","src":"6890:33:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6941:1:15","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"6944:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6937:3:15"},"nodeType":"YulFunctionCall","src":"6937:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"6950:3:15","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6933:3:15"},"nodeType":"YulFunctionCall","src":"6933:21:15"},{"kind":"number","nodeType":"YulLiteral","src":"6956:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6929:3:15"},"nodeType":"YulFunctionCall","src":"6929:94:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6925:3:15"},"nodeType":"YulFunctionCall","src":"6925:99:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6886:3:15"},"nodeType":"YulFunctionCall","src":"6886:139:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6871:6:15"},"nodeType":"YulFunctionCall","src":"6871:155:15"},"nodeType":"YulExpressionStatement","src":"6871:155:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6827:7:15"},{"name":"len","nodeType":"YulIdentifier","src":"6836:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6824:2:15"},"nodeType":"YulFunctionCall","src":"6824:16:15"},"nodeType":"YulIf","src":"6821:219:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7060:4:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7074:1:15","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"7077:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7070:3:15"},"nodeType":"YulFunctionCall","src":"7070:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"7083:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7066:3:15"},"nodeType":"YulFunctionCall","src":"7066:19:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7053:6:15"},"nodeType":"YulFunctionCall","src":"7053:33:15"},"nodeType":"YulExpressionStatement","src":"7053:33:15"}]},"nodeType":"YulCase","src":"6361:735:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6366:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7113:235:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7127:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"7140:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7131:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7173:74:15","statements":[{"nodeType":"YulAssignment","src":"7191:42:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7217:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7222:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:15"},"nodeType":"YulFunctionCall","src":"7213:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7200:12:15"},"nodeType":"YulFunctionCall","src":"7200:33:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7191:5:15"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"7157:3:15"},"nodeType":"YulIf","src":"7154:93:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7267:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7326:5:15"},{"name":"len","nodeType":"YulIdentifier","src":"7333:3:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"7273:52:15"},"nodeType":"YulFunctionCall","src":"7273:64:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7260:6:15"},"nodeType":"YulFunctionCall","src":"7260:78:15"},"nodeType":"YulExpressionStatement","src":"7260:78:15"}]},"nodeType":"YulCase","src":"7105:243:15","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6344:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6349:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6341:2:15"},"nodeType":"YulFunctionCall","src":"6341:11:15"},"nodeType":"YulSwitch","src":"6334:1014:15"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6112:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"6118:3:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"6123:3:15","type":""}],"src":"6029:1325:15"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_2, 0x20), _3)\n        mstore(add(add(memPtr, _3), 0x20), 0)\n        value0 := memPtr\n        value1 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_dc832c4be36db9733000b62615de32aec4c0c6f8787c7cf5dd229b7db7110b07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ChildProxy: only factory allowed\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1241":[{"length":32,"start":240}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100675760003560e01c8063ced7b2e311610050578063ced7b2e314610094578063d28d8852146100b0578063ee919d50146100c557600080fd5b80638beaf7d71461006c578063c4784fd414610081575b600080fd5b61007f61007a36600461025d565b6100d8565b005b61007f61008f366004610330565b61018e565b61009d60015481565b6040519081526020015b60405180910390f35b6100b86101a0565b6040516100a791906103a2565b61007f6100d336600461040e565b600155565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4368696c6450726f78793a206f6e6c7920666163746f727920616c6c6f776564604482015260640160405180910390fd5b600061018783826104c8565b5060015550565b600061019b8284836105e2565b505050565b600080546101ad90610427565b80601f01602080910402602001604051908101604052809291908181526020018280546101d990610427565b80156102265780601f106101fb57610100808354040283529160200191610226565b820191906000526020600020905b81548152906001019060200180831161020957829003601f168201915b505050505081565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561027057600080fd5b823567ffffffffffffffff8082111561028857600080fd5b818501915085601f83011261029c57600080fd5b8135818111156102ae576102ae61022e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156102f4576102f461022e565b8160405282815288602084870101111561030d57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000806020838503121561034357600080fd5b823567ffffffffffffffff8082111561035b57600080fd5b818501915085601f83011261036f57600080fd5b81358181111561037e57600080fd5b86602082850101111561039057600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156103cf578581018301518582016040015282016103b3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561042057600080fd5b5035919050565b600181811c9082168061043b57607f821691505b602082108103610474577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561019b57600081815260208120601f850160051c810160208610156104a15750805b601f850160051c820191505b818110156104c0578281556001016104ad565b505050505050565b815167ffffffffffffffff8111156104e2576104e261022e565b6104f6816104f08454610427565b8461047a565b602080601f83116001811461054957600084156105135750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556104c0565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561059657888601518255948401946001909101908401610577565b50858210156105d257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8311156105fa576105fa61022e565b61060e836106088354610427565b8361047a565b6000601f841160018114610660576000851561062a5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556106f6565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156106af578685013582556020948501946001909201910161068f565b50868210156106ea577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea2646970667358221220e85fde44e55d99cf1f53ac86f977224857d8ce17847c0d700d6659c9c64ca60664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCED7B2E3 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xCED7B2E3 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xEE919D50 EQ PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BEAF7D7 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC4784FD4 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x25D JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x330 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0x9D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x7F PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368696C6450726F78793A206F6E6C7920666163746F727920616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x187 DUP4 DUP3 PUSH2 0x4C8 JUMP JUMPDEST POP PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B DUP3 DUP5 DUP4 PUSH2 0x5E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1AD SWAP1 PUSH2 0x427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D9 SWAP1 PUSH2 0x427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x226 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x226 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x209 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AE PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2F4 JUMPI PUSH2 0x2F4 PUSH2 0x22E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3B3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x43B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x474 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4A1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4AD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4E2 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x4F6 DUP2 PUSH2 0x4F0 DUP5 SLOAD PUSH2 0x427 JUMP JUMPDEST DUP5 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x513 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x596 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x577 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5D2 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x5FA JUMPI PUSH2 0x5FA PUSH2 0x22E JUMP JUMPDEST PUSH2 0x60E DUP4 PUSH2 0x608 DUP4 SLOAD PUSH2 0x427 JUMP JUMPDEST DUP4 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x660 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x62A JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6AF JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x68F JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x6EA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x5F 0xDE DIFFICULTY 0xE5 0x5D SWAP10 0xCF 0x1F MSTORE8 0xAC DUP7 0xF9 PUSH24 0x224857D8CE17847C0D700D6659C9C64CA60664736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"164:739:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:119;;;;;;:::i;:::-;;:::i;:::-;;825:76;;;;;;:::i;:::-;;:::i;311:17::-;;;;;;;;;2010:25:15;;;1998:2;1983:18;311:17:7;;;;;;;;286:19;;;:::i;:::-;;;;;;;:::i;762:57::-;;;;;;:::i;:::-;805:2;:7;762:57;637:119;376:10;:22;390:8;376:22;;368:67;;;;;;;3045:2:15;368:67:7;;;3027:21:15;;;3064:18;;;3057:30;3123:34;3103:18;;;3096:62;3175:18;;368:67:7;;;;;;;;719:5:::1;:13;727:5:::0;719;:13:::1;:::i;:::-;-1:-1:-1::0;742:2:7::1;:7:::0;-1:-1:-1;637:119:7:o;825:76::-;881:5;:13;889:5;;881;:13;:::i;:::-;;825:76;;:::o;286:19::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:184:15:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:1059;281:6;289;342:2;330:9;321:7;317:23;313:32;310:52;;;358:1;355;348:12;310:52;398:9;385:23;427:18;468:2;460:6;457:14;454:34;;;484:1;481;474:12;454:34;522:6;511:9;507:22;497:32;;567:7;560:4;556:2;552:13;548:27;538:55;;589:1;586;579:12;538:55;625:2;612:16;647:2;643;640:10;637:36;;;653:18;;:::i;:::-;787:2;781:9;849:4;841:13;;692:66;837:22;;;861:2;833:31;829:40;817:53;;;885:18;;;905:22;;;882:46;879:72;;;931:18;;:::i;:::-;971:10;967:2;960:22;1006:2;998:6;991:18;1048:7;1041:4;1036:2;1032;1028:11;1024:22;1021:35;1018:55;;;1069:1;1066;1059:12;1018:55;1129:2;1122:4;1118:2;1114:13;1107:4;1099:6;1095:17;1082:50;1176:1;1169:4;1152:15;;;1148:26;;1141:37;1152:15;1235:20;;;;1222:34;;-1:-1:-1;;;;;;203:1059:15:o;1267:592::-;1338:6;1346;1399:2;1387:9;1378:7;1374:23;1370:32;1367:52;;;1415:1;1412;1405:12;1367:52;1455:9;1442:23;1484:18;1525:2;1517:6;1514:14;1511:34;;;1541:1;1538;1531:12;1511:34;1579:6;1568:9;1564:22;1554:32;;1624:7;1617:4;1613:2;1609:13;1605:27;1595:55;;1646:1;1643;1636:12;1595:55;1686:2;1673:16;1712:2;1704:6;1701:14;1698:34;;;1728:1;1725;1718:12;1698:34;1773:7;1768:2;1759:6;1755:2;1751:15;1747:24;1744:37;1741:57;;;1794:1;1791;1784:12;1741:57;1825:2;1817:11;;;;;1847:6;;-1:-1:-1;1267:592:15;;-1:-1:-1;;;;1267:592:15:o;2046:607::-;2158:4;2187:2;2216;2205:9;2198:21;2248:6;2242:13;2291:6;2286:2;2275:9;2271:18;2264:34;2316:1;2326:140;2340:6;2337:1;2334:13;2326:140;;;2435:14;;;2431:23;;2425:30;2401:17;;;2420:2;2397:26;2390:66;2355:10;;2326:140;;;2330:3;2515:1;2510:2;2501:6;2490:9;2486:22;2482:31;2475:42;2644:2;2574:66;2569:2;2561:6;2557:15;2553:88;2542:9;2538:104;2534:113;2526:121;;;;2046:607;;;;:::o;2658:180::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;-1:-1:-1;2809:23:15;;2658:180;-1:-1:-1;2658:180:15:o;3204:437::-;3283:1;3279:12;;;;3326;;;3347:61;;3401:4;3393:6;3389:17;3379:27;;3347:61;3454:2;3446:6;3443:14;3423:18;3420:38;3417:218;;3491:77;3488:1;3481:88;3592:4;3589:1;3582:15;3620:4;3617:1;3610:15;3417:218;;3204:437;;;:::o;3772:545::-;3874:2;3869:3;3866:11;3863:448;;;3910:1;3935:5;3931:2;3924:17;3980:4;3976:2;3966:19;4050:2;4038:10;4034:19;4031:1;4027:27;4021:4;4017:38;4086:4;4074:10;4071:20;4068:47;;;-1:-1:-1;4109:4:15;4068:47;4164:2;4159:3;4155:12;4152:1;4148:20;4142:4;4138:31;4128:41;;4219:82;4237:2;4230:5;4227:13;4219:82;;;4282:17;;;4263:1;4252:13;4219:82;;;4223:3;;;3772:545;;;:::o;4553:1471::-;4679:3;4673:10;4706:18;4698:6;4695:30;4692:56;;;4728:18;;:::i;:::-;4757:97;4847:6;4807:38;4839:4;4833:11;4807:38;:::i;:::-;4801:4;4757:97;:::i;:::-;4909:4;;4973:2;4962:14;;4990:1;4985:782;;;;5811:1;5828:6;5825:89;;;-1:-1:-1;5880:19:15;;;5874:26;5825:89;4459:66;4450:1;4446:11;;;4442:84;4438:89;4428:100;4534:1;4530:11;;;4425:117;5927:81;;4955:1063;;4985:782;3719:1;3712:14;;;3756:4;3743:18;;5033:66;5021:79;;;5198:236;5212:7;5209:1;5206:14;5198:236;;;5301:19;;;5295:26;5280:42;;5393:27;;;;5361:1;5349:14;;;;5228:19;;5198:236;;;5202:3;5462:6;5453:7;5450:19;5447:261;;;5523:19;;;5517:26;5624:66;5606:1;5602:14;;;5618:3;5598:24;5594:97;5590:102;5575:118;5560:134;;5447:261;-1:-1:-1;;;;;5754:1:15;5738:14;;;5734:22;5721:36;;-1:-1:-1;4553:1471:15:o;6029:1325::-;6153:18;6148:3;6145:27;6142:53;;;6175:18;;:::i;:::-;6204:94;6294:3;6254:38;6286:4;6280:11;6254:38;:::i;:::-;6248:4;6204:94;:::i;:::-;6324:1;6349:2;6344:3;6341:11;6366:1;6361:735;;;;7140:1;7157:3;7154:93;;;-1:-1:-1;7213:19:15;;;7200:33;7154:93;4459:66;4450:1;4446:11;;;4442:84;4438:89;4428:100;4534:1;4530:11;;;4425:117;7260:78;;6334:1014;;6361:735;3719:1;3712:14;;;3756:4;3743:18;;6406:66;6397:76;;;6557:9;6579:229;6593:7;6590:1;6587:14;6579:229;;;6682:19;;;6669:33;6654:49;;6789:4;6774:20;;;;6742:1;6730:14;;;;6609:12;6579:229;;;6583:3;6836;6827:7;6824:16;6821:219;;;6956:66;6950:3;6944;6941:1;6937:11;6933:21;6929:94;6925:99;6912:9;6907:3;6903:19;6890:33;6886:139;6878:6;6871:155;6821:219;;;7083:1;7077:3;7074:1;7070:11;7066:19;7060:4;7053:33;6334:1014;;;6029:1325;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"368600","executionCost":"infinite","totalCost":"infinite"},"external":{"_a()":"2284","_name()":"infinite","initialize(string,uint256)":"infinite","setA(uint256)":"22356","setMsg(string)":"infinite"}},"methodIdentifiers":{"_a()":"ced7b2e3","_name()":"d28d8852","initialize(string,uint256)":"8beaf7d7","setA(uint256)":"ee919d50","setMsg(string)":"c4784fd4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"anotherMock_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"a_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a_\",\"type\":\"uint256\"}],\"name\":\"setA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"name\":\"setMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This mock does not inheirt the ProxyChild contract and implements the logic itself\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockContract2.sol\":\"Mock2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockContract2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\n/**\\n@dev This mock does not inheirt the ProxyChild contract and implements the logic itself\\n*/\\ncontract Mock2 {\\n    uint256 immutable _version;\\n    address immutable _anotherMock;\\n    address immutable _factory;\\n\\n    string public _name;\\n    uint256 public _a;\\n\\n    modifier onlyFactory() {\\n        require(msg.sender == _factory, \\\"ChildProxy: only factory allowed\\\");\\n        _;\\n    }\\n\\n    constructor(address factory_, uint256 version_, address anotherMock_) {\\n        _factory = factory_;\\n        _version = version_;\\n        _anotherMock = anotherMock_;\\n    }\\n\\n    function initialize(string memory name_, uint256 a_) public onlyFactory {\\n        _name = name_;\\n        _a = a_;\\n    }\\n\\n    function setA(uint256 a_) public {\\n        _a = a_;\\n    }\\n\\n    function setMsg(string calldata name_) public {\\n        _name = name_;\\n    }\\n}\",\"keccak256\":\"0xde4b4b49b804593834a7de9bda26ddc8cbe1b1c4ad71b55b4c289aee348fb385\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1243,"contract":"contracts/mocks/MockContract2.sol:Mock2","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1245,"contract":"contracts/mocks/MockContract2.sol:Mock2","label":"_a","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/MockContract3.sol":{"Mock3":{"abi":[{"inputs":[{"internalType":"address","name":"factory_","type":"address"},{"internalType":"uint256","name":"version_","type":"uint256"},{"internalType":"address","name":"anotherMock_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"_a","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"a_","type":"uint256"}],"name":"setA","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"name":"setMsg","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This mock does not inheirt the ProxyChild contract and no initalize function","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1353":{"entryPoint":null,"id":1353,"parameterSlots":3,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":76,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_address_fromMemory":{"entryPoint":104,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:552:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:15","statements":[{"nodeType":"YulAssignment","src":"84:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:15"},"nodeType":"YulFunctionCall","src":"93:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:15"}]},{"body":{"nodeType":"YulBlock","src":"169:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:15"},"nodeType":"YulFunctionCall","src":"171:12:15"},"nodeType":"YulExpressionStatement","src":"171:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:15"},"nodeType":"YulFunctionCall","src":"150:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:15"},"nodeType":"YulFunctionCall","src":"146:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:15"},"nodeType":"YulFunctionCall","src":"135:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:15"},"nodeType":"YulFunctionCall","src":"125:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:15"},"nodeType":"YulFunctionCall","src":"118:50:15"},"nodeType":"YulIf","src":"115:70:15"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"14:177:15"},{"body":{"nodeType":"YulBlock","src":"311:239:15","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:15"},"nodeType":"YulFunctionCall","src":"359:12:15"},"nodeType":"YulExpressionStatement","src":"359:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:15"},"nodeType":"YulFunctionCall","src":"328:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:15"},"nodeType":"YulFunctionCall","src":"324:32:15"},"nodeType":"YulIf","src":"321:52:15"},{"nodeType":"YulAssignment","src":"382:50:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:15"},"nodeType":"YulFunctionCall","src":"392:40:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:15"}]},{"nodeType":"YulAssignment","src":"441:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"461:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"472:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"457:3:15"},"nodeType":"YulFunctionCall","src":"457:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"451:5:15"},"nodeType":"YulFunctionCall","src":"451:25:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:15"}]},{"nodeType":"YulAssignment","src":"485:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"529:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:18:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"495:29:15"},"nodeType":"YulFunctionCall","src":"495:49:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"485:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:15","type":""}],"src":"196:354:15"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405234801561001057600080fd5b5060405161052c38038061052c83398101604081905261002f91610068565b6001600160a01b0392831660c0526080919091521660a0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c0516104626100ca6000396000505060005050600050506104626000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063c4784fd414610051578063ced7b2e314610066578063d28d885214610082578063ee919d5014610097575b600080fd5b61006461005f36600461014a565b6100aa565b005b61006f60015481565b6040519081526020015b60405180910390f35b61008a6100bc565b60405161007991906101bc565b6100646100a5366004610228565b600155565b60006100b7828483610311565b505050565b600080546100c990610270565b80601f01602080910402602001604051908101604052809291908181526020018280546100f590610270565b80156101425780601f1061011757610100808354040283529160200191610142565b820191906000526020600020905b81548152906001019060200180831161012557829003601f168201915b505050505081565b6000806020838503121561015d57600080fd5b823567ffffffffffffffff8082111561017557600080fd5b818501915085601f83011261018957600080fd5b81358181111561019857600080fd5b8660208285010111156101aa57600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156101e9578581018301518582016040015282016101cd565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561023a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c9082168061028457607f821691505b6020821081036102bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156100b757600081815260208120601f850160051c810160208610156102ea5750805b601f850160051c820191505b81811015610309578281556001016102f6565b505050505050565b67ffffffffffffffff83111561032957610329610241565b61033d836103378354610270565b836102c3565b6000601f84116001811461038f57600085156103595750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610425565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156103de57868501358255602094850194600190920191016103be565b5086821015610419577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212208f2aa45df18343abbe4f59c0081a0dc6c6c792984b2d6ea1ad47452e695ab27064736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x52C CODESIZE SUB DUP1 PUSH2 0x52C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0xC0 MSTORE PUSH1 0x80 SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xA4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86 DUP5 PUSH2 0x4C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH2 0x9B PUSH1 0x40 DUP6 ADD PUSH2 0x4C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x462 PUSH2 0xCA PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH2 0x462 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC4784FD4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xCED7B2E3 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xEE919D50 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x14A JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x64 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7 DUP3 DUP5 DUP4 PUSH2 0x311 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xC9 SWAP1 PUSH2 0x270 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF5 SWAP1 PUSH2 0x270 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x142 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x117 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x142 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1CD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x284 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2EA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x329 JUMPI PUSH2 0x329 PUSH2 0x241 JUMP JUMPDEST PUSH2 0x33D DUP4 PUSH2 0x337 DUP4 SLOAD PUSH2 0x270 JUMP JUMPDEST DUP4 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x359 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x425 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DE JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3BE JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x419 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x2A LOG4 0x5D CALL DUP4 NUMBER 0xAB 0xBE 0x4F MSIZE 0xC0 ADDMOD BYTE 0xD 0xC6 0xC6 0xC7 SWAP3 SWAP9 0x4B 0x2D PUSH15 0xA1AD47452E695AB27064736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"158:490:8:-:0;;;329:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;409:19:8;;;;;438;;;;;467:27;;;158:490;;14:177:15;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;:::-;158:490:8;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_a_1331":{"entryPoint":null,"id":1331,"parameterSlots":0,"returnSlots":0},"@_name_1329":{"entryPoint":188,"id":1329,"parameterSlots":0,"returnSlots":0},"@setA_1363":{"entryPoint":null,"id":1363,"parameterSlots":1,"returnSlots":0},"@setMsg_1373":{"entryPoint":170,"id":1373,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":330,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":707,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":785,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":624,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":577,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4455:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"104:502:15","statements":[{"body":{"nodeType":"YulBlock","src":"150:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"159:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"162:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"152:6:15"},"nodeType":"YulFunctionCall","src":"152:12:15"},"nodeType":"YulExpressionStatement","src":"152:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"125:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"134:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"121:3:15"},"nodeType":"YulFunctionCall","src":"121:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"146:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"117:3:15"},"nodeType":"YulFunctionCall","src":"117:32:15"},"nodeType":"YulIf","src":"114:52:15"},{"nodeType":"YulVariableDeclaration","src":"175:37:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"202:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"189:12:15"},"nodeType":"YulFunctionCall","src":"189:23:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"221:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"231:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"225:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"276:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"288:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"278:6:15"},"nodeType":"YulFunctionCall","src":"278:12:15"},"nodeType":"YulExpressionStatement","src":"278:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"264:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"272:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"261:2:15"},"nodeType":"YulFunctionCall","src":"261:14:15"},"nodeType":"YulIf","src":"258:34:15"},{"nodeType":"YulVariableDeclaration","src":"301:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"315:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"326:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"311:3:15"},"nodeType":"YulFunctionCall","src":"311:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"305:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"381:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"390:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"393:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"383:6:15"},"nodeType":"YulFunctionCall","src":"383:12:15"},"nodeType":"YulExpressionStatement","src":"383:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"360:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"364:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:15"},"nodeType":"YulFunctionCall","src":"356:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"371:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"352:3:15"},"nodeType":"YulFunctionCall","src":"352:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"345:6:15"},"nodeType":"YulFunctionCall","src":"345:35:15"},"nodeType":"YulIf","src":"342:55:15"},{"nodeType":"YulVariableDeclaration","src":"406:30:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"433:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"420:12:15"},"nodeType":"YulFunctionCall","src":"420:16:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"410:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"463:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"475:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"465:6:15"},"nodeType":"YulFunctionCall","src":"465:12:15"},"nodeType":"YulExpressionStatement","src":"465:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"451:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"459:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"448:2:15"},"nodeType":"YulFunctionCall","src":"448:14:15"},"nodeType":"YulIf","src":"445:34:15"},{"body":{"nodeType":"YulBlock","src":"529:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"538:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"541:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"531:6:15"},"nodeType":"YulFunctionCall","src":"531:12:15"},"nodeType":"YulExpressionStatement","src":"531:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"502:2:15"},{"name":"length","nodeType":"YulIdentifier","src":"506:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:15"},"nodeType":"YulFunctionCall","src":"498:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"515:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:15"},"nodeType":"YulFunctionCall","src":"494:24:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"520:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"491:2:15"},"nodeType":"YulFunctionCall","src":"491:37:15"},"nodeType":"YulIf","src":"488:57:15"},{"nodeType":"YulAssignment","src":"554:21:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"568:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"572:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"564:3:15"},"nodeType":"YulFunctionCall","src":"564:11:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"554:6:15"}]},{"nodeType":"YulAssignment","src":"584:16:15","value":{"name":"length","nodeType":"YulIdentifier","src":"594:6:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"584:6:15"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"62:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"73:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"85:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"93:6:15","type":""}],"src":"14:592:15"},{"body":{"nodeType":"YulBlock","src":"712:76:15","statements":[{"nodeType":"YulAssignment","src":"722:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"734:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"745:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"730:3:15"},"nodeType":"YulFunctionCall","src":"730:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"722:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"764:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"775:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"757:6:15"},"nodeType":"YulFunctionCall","src":"757:25:15"},"nodeType":"YulExpressionStatement","src":"757:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"681:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"692:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"703:4:15","type":""}],"src":"611:177:15"},{"body":{"nodeType":"YulBlock","src":"914:486:15","statements":[{"nodeType":"YulVariableDeclaration","src":"924:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"934:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"928:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"963:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"945:6:15"},"nodeType":"YulFunctionCall","src":"945:21:15"},"nodeType":"YulExpressionStatement","src":"945:21:15"},{"nodeType":"YulVariableDeclaration","src":"975:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"995:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"989:5:15"},"nodeType":"YulFunctionCall","src":"989:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"979:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1033:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:15"},"nodeType":"YulFunctionCall","src":"1018:18:15"},{"name":"length","nodeType":"YulIdentifier","src":"1038:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1011:6:15"},"nodeType":"YulFunctionCall","src":"1011:34:15"},"nodeType":"YulExpressionStatement","src":"1011:34:15"},{"nodeType":"YulVariableDeclaration","src":"1054:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1063:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1058:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1123:90:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1152:9:15"},{"name":"i","nodeType":"YulIdentifier","src":"1163:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1148:3:15"},"nodeType":"YulFunctionCall","src":"1148:17:15"},{"kind":"number","nodeType":"YulLiteral","src":"1167:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1144:3:15"},"nodeType":"YulFunctionCall","src":"1144:26:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1186:6:15"},{"name":"i","nodeType":"YulIdentifier","src":"1194:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1182:3:15"},"nodeType":"YulFunctionCall","src":"1182:14:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1198:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1178:3:15"},"nodeType":"YulFunctionCall","src":"1178:23:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1172:5:15"},"nodeType":"YulFunctionCall","src":"1172:30:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1137:6:15"},"nodeType":"YulFunctionCall","src":"1137:66:15"},"nodeType":"YulExpressionStatement","src":"1137:66:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1084:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"1087:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1081:2:15"},"nodeType":"YulFunctionCall","src":"1081:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1095:19:15","statements":[{"nodeType":"YulAssignment","src":"1097:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1106:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1109:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:15"},"nodeType":"YulFunctionCall","src":"1102:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1097:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"1077:3:15","statements":[]},"src":"1073:140:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1237:9:15"},{"name":"length","nodeType":"YulIdentifier","src":"1248:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1233:3:15"},"nodeType":"YulFunctionCall","src":"1233:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"1257:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1229:3:15"},"nodeType":"YulFunctionCall","src":"1229:31:15"},{"kind":"number","nodeType":"YulLiteral","src":"1262:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1222:6:15"},"nodeType":"YulFunctionCall","src":"1222:42:15"},"nodeType":"YulExpressionStatement","src":"1222:42:15"},{"nodeType":"YulAssignment","src":"1273:121:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1308:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1316:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1304:3:15"},"nodeType":"YulFunctionCall","src":"1304:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1321:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1300:3:15"},"nodeType":"YulFunctionCall","src":"1300:88:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1285:3:15"},"nodeType":"YulFunctionCall","src":"1285:104:15"},{"kind":"number","nodeType":"YulLiteral","src":"1391:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1281:3:15"},"nodeType":"YulFunctionCall","src":"1281:113:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1273:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"883:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"894:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"905:4:15","type":""}],"src":"793:607:15"},{"body":{"nodeType":"YulBlock","src":"1475:110:15","statements":[{"body":{"nodeType":"YulBlock","src":"1521:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1530:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1533:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1523:6:15"},"nodeType":"YulFunctionCall","src":"1523:12:15"},"nodeType":"YulExpressionStatement","src":"1523:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1496:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1505:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1492:3:15"},"nodeType":"YulFunctionCall","src":"1492:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1517:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1488:3:15"},"nodeType":"YulFunctionCall","src":"1488:32:15"},"nodeType":"YulIf","src":"1485:52:15"},{"nodeType":"YulAssignment","src":"1546:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1569:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1556:12:15"},"nodeType":"YulFunctionCall","src":"1556:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1546:6:15"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1441:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1452:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1464:6:15","type":""}],"src":"1405:180:15"},{"body":{"nodeType":"YulBlock","src":"1622:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1639:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1642:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1632:6:15"},"nodeType":"YulFunctionCall","src":"1632:88:15"},"nodeType":"YulExpressionStatement","src":"1632:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1736:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1739:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:15"},"nodeType":"YulFunctionCall","src":"1729:15:15"},"nodeType":"YulExpressionStatement","src":"1729:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1760:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1763:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1753:6:15"},"nodeType":"YulFunctionCall","src":"1753:15:15"},"nodeType":"YulExpressionStatement","src":"1753:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1590:184:15"},{"body":{"nodeType":"YulBlock","src":"1834:382:15","statements":[{"nodeType":"YulAssignment","src":"1844:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1858:1:15","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1861:4:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1854:3:15"},"nodeType":"YulFunctionCall","src":"1854:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1844:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1875:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1905:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"1911:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1901:3:15"},"nodeType":"YulFunctionCall","src":"1901:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1879:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1952:31:15","statements":[{"nodeType":"YulAssignment","src":"1954:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1968:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1976:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1964:3:15"},"nodeType":"YulFunctionCall","src":"1964:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1954:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1932:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1925:6:15"},"nodeType":"YulFunctionCall","src":"1925:26:15"},"nodeType":"YulIf","src":"1922:61:15"},{"body":{"nodeType":"YulBlock","src":"2042:168:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2056:6:15"},"nodeType":"YulFunctionCall","src":"2056:88:15"},"nodeType":"YulExpressionStatement","src":"2056:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2164:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2167:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2157:6:15"},"nodeType":"YulFunctionCall","src":"2157:15:15"},"nodeType":"YulExpressionStatement","src":"2157:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2192:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2195:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2185:6:15"},"nodeType":"YulFunctionCall","src":"2185:15:15"},"nodeType":"YulExpressionStatement","src":"2185:15:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1998:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2021:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2029:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2018:2:15"},"nodeType":"YulFunctionCall","src":"2018:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1995:2:15"},"nodeType":"YulFunctionCall","src":"1995:38:15"},"nodeType":"YulIf","src":"1992:218:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1814:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1823:6:15","type":""}],"src":"1779:437:15"},{"body":{"nodeType":"YulBlock","src":"2277:65:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2294:1:15","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2297:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2287:6:15"},"nodeType":"YulFunctionCall","src":"2287:14:15"},"nodeType":"YulExpressionStatement","src":"2287:14:15"},{"nodeType":"YulAssignment","src":"2310:26:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2331:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2318:9:15"},"nodeType":"YulFunctionCall","src":"2318:18:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2310:4:15"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2260:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2268:4:15","type":""}],"src":"2221:121:15"},{"body":{"nodeType":"YulBlock","src":"2428:464:15","statements":[{"body":{"nodeType":"YulBlock","src":"2461:425:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2475:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2485:1:15","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2479:2:15","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2506:2:15"},{"name":"array","nodeType":"YulIdentifier","src":"2510:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2499:6:15"},"nodeType":"YulFunctionCall","src":"2499:17:15"},"nodeType":"YulExpressionStatement","src":"2499:17:15"},{"nodeType":"YulVariableDeclaration","src":"2529:31:15","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2551:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2541:9:15"},"nodeType":"YulFunctionCall","src":"2541:19:15"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2533:4:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2573:57:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2596:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2606:1:15","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2613:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"2625:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2609:3:15"},"nodeType":"YulFunctionCall","src":"2609:19:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2602:3:15"},"nodeType":"YulFunctionCall","src":"2602:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2592:3:15"},"nodeType":"YulFunctionCall","src":"2592:38:15"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2577:11:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2667:23:15","statements":[{"nodeType":"YulAssignment","src":"2669:19:15","value":{"name":"data","nodeType":"YulIdentifier","src":"2684:4:15"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2669:11:15"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2649:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"2661:4:15","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2646:2:15"},"nodeType":"YulFunctionCall","src":"2646:20:15"},"nodeType":"YulIf","src":"2643:47:15"},{"nodeType":"YulVariableDeclaration","src":"2703:41:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2717:4:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2727:1:15","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2734:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2739:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2730:3:15"},"nodeType":"YulFunctionCall","src":"2730:12:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2723:3:15"},"nodeType":"YulFunctionCall","src":"2723:20:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:15"},"nodeType":"YulFunctionCall","src":"2713:31:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2707:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2757:24:15","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2770:11:15"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2761:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2855:21:15","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2864:5:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2871:2:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2857:6:15"},"nodeType":"YulFunctionCall","src":"2857:17:15"},"nodeType":"YulExpressionStatement","src":"2857:17:15"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2805:5:15"},{"name":"_2","nodeType":"YulIdentifier","src":"2812:2:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2802:2:15"},"nodeType":"YulFunctionCall","src":"2802:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2816:26:15","statements":[{"nodeType":"YulAssignment","src":"2818:22:15","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2831:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2838:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2827:3:15"},"nodeType":"YulFunctionCall","src":"2827:13:15"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2818:5:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2798:3:15","statements":[]},"src":"2794:82:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2444:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2449:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2441:2:15"},"nodeType":"YulFunctionCall","src":"2441:11:15"},"nodeType":"YulIf","src":"2438:448:15"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2400:5:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"2407:3:15","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2412:10:15","type":""}],"src":"2347:545:15"},{"body":{"nodeType":"YulBlock","src":"2982:141:15","statements":[{"nodeType":"YulAssignment","src":"2992:125:15","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3007:4:15"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3025:1:15","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3028:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3021:3:15"},"nodeType":"YulFunctionCall","src":"3021:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"3034:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3017:3:15"},"nodeType":"YulFunctionCall","src":"3017:84:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3013:3:15"},"nodeType":"YulFunctionCall","src":"3013:89:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3003:3:15"},"nodeType":"YulFunctionCall","src":"3003:100:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3109:1:15","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3112:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3105:3:15"},"nodeType":"YulFunctionCall","src":"3105:11:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3000:2:15"},"nodeType":"YulFunctionCall","src":"3000:117:15"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2992:4:15"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2959:4:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"2965:3:15","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2973:4:15","type":""}],"src":"2897:226:15"},{"body":{"nodeType":"YulBlock","src":"3231:1222:15","statements":[{"body":{"nodeType":"YulBlock","src":"3272:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3274:16:15"},"nodeType":"YulFunctionCall","src":"3274:18:15"},"nodeType":"YulExpressionStatement","src":"3274:18:15"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3247:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3252:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3244:2:15"},"nodeType":"YulFunctionCall","src":"3244:27:15"},"nodeType":"YulIf","src":"3241:53:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3347:4:15"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3385:4:15"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3379:5:15"},"nodeType":"YulFunctionCall","src":"3379:11:15"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3353:25:15"},"nodeType":"YulFunctionCall","src":"3353:38:15"},{"name":"len","nodeType":"YulIdentifier","src":"3393:3:15"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3303:43:15"},"nodeType":"YulFunctionCall","src":"3303:94:15"},"nodeType":"YulExpressionStatement","src":"3303:94:15"},{"nodeType":"YulVariableDeclaration","src":"3406:18:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3423:1:15","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3410:9:15","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3467:728:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3481:91:15","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3500:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3505:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3496:3:15"},"nodeType":"YulFunctionCall","src":"3496:76:15"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3485:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3585:49:15","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3629:4:15"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3599:29:15"},"nodeType":"YulFunctionCall","src":"3599:35:15"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3589:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3647:18:15","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"3656:9:15"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3651:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3735:172:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3760:6:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3785:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3790:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3781:3:15"},"nodeType":"YulFunctionCall","src":"3781:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3768:12:15"},"nodeType":"YulFunctionCall","src":"3768:33:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3753:6:15"},"nodeType":"YulFunctionCall","src":"3753:49:15"},"nodeType":"YulExpressionStatement","src":"3753:49:15"},{"nodeType":"YulAssignment","src":"3819:24:15","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3833:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3841:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3829:3:15"},"nodeType":"YulFunctionCall","src":"3829:14:15"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3819:6:15"}]},{"nodeType":"YulAssignment","src":"3860:33:15","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3877:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3888:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3873:3:15"},"nodeType":"YulFunctionCall","src":"3873:20:15"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3860:9:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3689:1:15"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3692:7:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3686:2:15"},"nodeType":"YulFunctionCall","src":"3686:14:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3701:21:15","statements":[{"nodeType":"YulAssignment","src":"3703:17:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3712:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"3715:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3708:3:15"},"nodeType":"YulFunctionCall","src":"3708:12:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3703:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"3682:3:15","statements":[]},"src":"3678:229:15"},{"body":{"nodeType":"YulBlock","src":"3952:187:15","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3977:6:15"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4006:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4011:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4002:3:15"},"nodeType":"YulFunctionCall","src":"4002:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3989:12:15"},"nodeType":"YulFunctionCall","src":"3989:33:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4040:1:15","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"4043:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4036:3:15"},"nodeType":"YulFunctionCall","src":"4036:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"4049:3:15","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4032:3:15"},"nodeType":"YulFunctionCall","src":"4032:21:15"},{"kind":"number","nodeType":"YulLiteral","src":"4055:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4028:3:15"},"nodeType":"YulFunctionCall","src":"4028:94:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4024:3:15"},"nodeType":"YulFunctionCall","src":"4024:99:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3985:3:15"},"nodeType":"YulFunctionCall","src":"3985:139:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3970:6:15"},"nodeType":"YulFunctionCall","src":"3970:155:15"},"nodeType":"YulExpressionStatement","src":"3970:155:15"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3926:7:15"},{"name":"len","nodeType":"YulIdentifier","src":"3935:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3923:2:15"},"nodeType":"YulFunctionCall","src":"3923:16:15"},"nodeType":"YulIf","src":"3920:219:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4159:4:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4173:1:15","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"4176:3:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4169:3:15"},"nodeType":"YulFunctionCall","src":"4169:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"4182:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:15"},"nodeType":"YulFunctionCall","src":"4165:19:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4152:6:15"},"nodeType":"YulFunctionCall","src":"4152:33:15"},"nodeType":"YulExpressionStatement","src":"4152:33:15"}]},"nodeType":"YulCase","src":"3460:735:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3465:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4212:235:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4226:14:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4239:1:15","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4230:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4272:74:15","statements":[{"nodeType":"YulAssignment","src":"4290:42:15","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4316:3:15"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4321:9:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4312:3:15"},"nodeType":"YulFunctionCall","src":"4312:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4299:12:15"},"nodeType":"YulFunctionCall","src":"4299:33:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4290:5:15"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"4256:3:15"},"nodeType":"YulIf","src":"4253:93:15"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4366:4:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4425:5:15"},{"name":"len","nodeType":"YulIdentifier","src":"4432:3:15"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4372:52:15"},"nodeType":"YulFunctionCall","src":"4372:64:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4359:6:15"},"nodeType":"YulFunctionCall","src":"4359:78:15"},"nodeType":"YulExpressionStatement","src":"4359:78:15"}]},"nodeType":"YulCase","src":"4204:243:15","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3443:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3448:2:15","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3440:2:15"},"nodeType":"YulFunctionCall","src":"3440:11:15"},"nodeType":"YulSwitch","src":"3433:1014:15"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3211:4:15","type":""},{"name":"src","nodeType":"YulTypedName","src":"3217:3:15","type":""},{"name":"len","nodeType":"YulTypedName","src":"3222:3:15","type":""}],"src":"3128:1325:15"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063c4784fd414610051578063ced7b2e314610066578063d28d885214610082578063ee919d5014610097575b600080fd5b61006461005f36600461014a565b6100aa565b005b61006f60015481565b6040519081526020015b60405180910390f35b61008a6100bc565b60405161007991906101bc565b6100646100a5366004610228565b600155565b60006100b7828483610311565b505050565b600080546100c990610270565b80601f01602080910402602001604051908101604052809291908181526020018280546100f590610270565b80156101425780601f1061011757610100808354040283529160200191610142565b820191906000526020600020905b81548152906001019060200180831161012557829003601f168201915b505050505081565b6000806020838503121561015d57600080fd5b823567ffffffffffffffff8082111561017557600080fd5b818501915085601f83011261018957600080fd5b81358181111561019857600080fd5b8660208285010111156101aa57600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b818110156101e9578581018301518582016040015282016101cd565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561023a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c9082168061028457607f821691505b6020821081036102bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156100b757600081815260208120601f850160051c810160208610156102ea5750805b601f850160051c820191505b81811015610309578281556001016102f6565b505050505050565b67ffffffffffffffff83111561032957610329610241565b61033d836103378354610270565b836102c3565b6000601f84116001811461038f57600085156103595750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610425565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156103de57868501358255602094850194600190920191016103be565b5086821015610419577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212208f2aa45df18343abbe4f59c0081a0dc6c6c792984b2d6ea1ad47452e695ab27064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC4784FD4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xCED7B2E3 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xEE919D50 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x14A JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x64 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7 DUP3 DUP5 DUP4 PUSH2 0x311 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xC9 SWAP1 PUSH2 0x270 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF5 SWAP1 PUSH2 0x270 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x142 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x117 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x142 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1CD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x284 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2EA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x329 JUMPI PUSH2 0x329 PUSH2 0x241 JUMP JUMPDEST PUSH2 0x33D DUP4 PUSH2 0x337 DUP4 SLOAD PUSH2 0x270 JUMP JUMPDEST DUP4 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x359 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x425 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DE JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3BE JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x419 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x2A LOG4 0x5D CALL DUP4 NUMBER 0xAB 0xBE 0x4F MSIZE 0xC0 ADDMOD BYTE 0xD 0xC6 0xC6 0xC7 SWAP3 SWAP9 0x4B 0x2D PUSH15 0xA1AD47452E695AB27064736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"158:490:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:76;;;;;;:::i;:::-;;:::i;:::-;;305:17;;;;;;;;;757:25:15;;;745:2;730:18;305:17:8;;;;;;;;280:19;;;:::i;:::-;;;;;;;:::i;507:57::-;;;;;;:::i;:::-;550:2;:7;507:57;570:76;626:5;:13;634:5;;626;:13;:::i;:::-;;570:76;;:::o;280:19::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:592:15:-;85:6;93;146:2;134:9;125:7;121:23;117:32;114:52;;;162:1;159;152:12;114:52;202:9;189:23;231:18;272:2;264:6;261:14;258:34;;;288:1;285;278:12;258:34;326:6;315:9;311:22;301:32;;371:7;364:4;360:2;356:13;352:27;342:55;;393:1;390;383:12;342:55;433:2;420:16;459:2;451:6;448:14;445:34;;;475:1;472;465:12;445:34;520:7;515:2;506:6;502:2;498:15;494:24;491:37;488:57;;;541:1;538;531:12;488:57;572:2;564:11;;;;;594:6;;-1:-1:-1;14:592:15;;-1:-1:-1;;;;14:592:15:o;793:607::-;905:4;934:2;963;952:9;945:21;995:6;989:13;1038:6;1033:2;1022:9;1018:18;1011:34;1063:1;1073:140;1087:6;1084:1;1081:13;1073:140;;;1182:14;;;1178:23;;1172:30;1148:17;;;1167:2;1144:26;1137:66;1102:10;;1073:140;;;1077:3;1262:1;1257:2;1248:6;1237:9;1233:22;1229:31;1222:42;1391:2;1321:66;1316:2;1308:6;1304:15;1300:88;1289:9;1285:104;1281:113;1273:121;;;;793:607;;;;:::o;1405:180::-;1464:6;1517:2;1505:9;1496:7;1492:23;1488:32;1485:52;;;1533:1;1530;1523:12;1485:52;-1:-1:-1;1556:23:15;;1405:180;-1:-1:-1;1405:180:15:o;1590:184::-;1642:77;1639:1;1632:88;1739:4;1736:1;1729:15;1763:4;1760:1;1753:15;1779:437;1858:1;1854:12;;;;1901;;;1922:61;;1976:4;1968:6;1964:17;1954:27;;1922:61;2029:2;2021:6;2018:14;1998:18;1995:38;1992:218;;2066:77;2063:1;2056:88;2167:4;2164:1;2157:15;2195:4;2192:1;2185:15;1992:218;;1779:437;;;:::o;2347:545::-;2449:2;2444:3;2441:11;2438:448;;;2485:1;2510:5;2506:2;2499:17;2555:4;2551:2;2541:19;2625:2;2613:10;2609:19;2606:1;2602:27;2596:4;2592:38;2661:4;2649:10;2646:20;2643:47;;;-1:-1:-1;2684:4:15;2643:47;2739:2;2734:3;2730:12;2727:1;2723:20;2717:4;2713:31;2703:41;;2794:82;2812:2;2805:5;2802:13;2794:82;;;2857:17;;;2838:1;2827:13;2794:82;;;2798:3;;;2347:545;;;:::o;3128:1325::-;3252:18;3247:3;3244:27;3241:53;;;3274:18;;:::i;:::-;3303:94;3393:3;3353:38;3385:4;3379:11;3353:38;:::i;:::-;3347:4;3303:94;:::i;:::-;3423:1;3448:2;3443:3;3440:11;3465:1;3460:735;;;;4239:1;4256:3;4253:93;;;-1:-1:-1;4312:19:15;;;4299:33;4253:93;3034:66;3025:1;3021:11;;;3017:84;3013:89;3003:100;3109:1;3105:11;;;3000:117;4359:78;;3433:1014;;3460:735;2294:1;2287:14;;;2331:4;2318:18;;3505:66;3496:76;;;3656:9;3678:229;3692:7;3689:1;3686:14;3678:229;;;3781:19;;;3768:33;3753:49;;3888:4;3873:20;;;;3841:1;3829:14;;;;3708:12;3678:229;;;3682:3;3935;3926:7;3923:16;3920:219;;;4055:66;4049:3;4043;4040:1;4036:11;4032:21;4028:94;4024:99;4011:9;4006:3;4002:19;3989:33;3985:139;3977:6;3970:155;3920:219;;;4182:1;4176:3;4173:1;4169:11;4165:19;4159:4;4152:33;3433:1014;;;3128:1325;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"224400","executionCost":"infinite","totalCost":"infinite"},"external":{"_a()":"2284","_name()":"infinite","setA(uint256)":"22356","setMsg(string)":"infinite"}},"methodIdentifiers":{"_a()":"ced7b2e3","_name()":"d28d8852","setA(uint256)":"ee919d50","setMsg(string)":"c4784fd4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"anotherMock_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a_\",\"type\":\"uint256\"}],\"name\":\"setA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"name\":\"setMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This mock does not inheirt the ProxyChild contract and no initalize function\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockContract3.sol\":\"Mock3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockContract3.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\n/**\\n@dev This mock does not inheirt the ProxyChild contract and no initalize function\\n*/\\ncontract Mock3 {\\n    uint256 immutable _version;\\n    address immutable _anotherMock;\\n    address immutable _factory;\\n\\n    string public _name;\\n    uint256 public _a;\\n\\n    constructor(address factory_, uint256 version_, address anotherMock_) {\\n        _factory = factory_;\\n        _version = version_;\\n        _anotherMock = anotherMock_;\\n    }\\n\\n    function setA(uint256 a_) public {\\n        _a = a_;\\n    }\\n\\n    function setMsg(string calldata name_) public {\\n        _name = name_;\\n    }\\n}\",\"keccak256\":\"0x871dea5f74cbd1f923541ceecb8567b618058ef71121087d6c153e0b7e7807b3\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1329,"contract":"contracts/mocks/MockContract3.sol:Mock3","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1331,"contract":"contracts/mocks/MockContract3.sol:Mock3","label":"_a","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/proxy/IProxy.sol":{"IProxy":{"abi":[{"inputs":[],"name":"getImplementationAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getImplementationAddress()":"0cbcae70"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n\\ninterface IProxy {\\n    function getImplementationAddress() external view returns (address);\\n}\",\"keccak256\":\"0xc347986b3d808c671158d689c9ad8a3a9e5f4a78efd5496de3d2777396f9547e\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"RUN OPTIMIZER OFF","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1397":{"entryPoint":null,"id":1397,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50336080526080516102ac61002f6000396000601b01526102ac6000f3fe60806040523661001357610011610017565b005b6100115b60007f00000000000000000000000000000000000000000000000000000000000000009050600536146025361417156101275760003560d81c80640cbcae703c81146100995764ca11c0de1181146100ea5761009460127f66756e6374696f6e206e6f7420666f756e640000000000000000000000000000610132565b610124565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5460601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000168152601481f35b82331461011c5761011c600c7f756e617574686f72697a65640000000000000000000000000000000000000000610132565b610124610177565b50505b61012f6101fa565b50565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101839052604481018290526064808201919081fd5b6bca11c0de15dead10deadc0de6000195460a01c036101bb576101bb600d7f757064617465206c6f636b656400000000000000000000000000000000000000610132565b73ffffffffffffffffffffffffffffffffffffffff600535167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff819055005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff548061024c5761024c600d7f6c6f676963206e6f742073657400000000000000000000000000000000000000610132565b60405136810160405236600082376000803683855af491503d6000823e81610272573d81fd5b3d81f3fea264697066735822122008cba2e77d14c8cdbf42884951755adca3df49c0b7f5dbf6714f8ff7438492a564736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x2AC PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x1B ADD MSTORE PUSH2 0x2AC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x5 CALLDATASIZE EQ PUSH1 0x25 CALLDATASIZE EQ OR ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xD8 SHR DUP1 PUSH5 0xCBCAE703C DUP2 EQ PUSH2 0x99 JUMPI PUSH5 0xCA11C0DE11 DUP2 EQ PUSH2 0xEA JUMPI PUSH2 0x94 PUSH1 0x12 PUSH32 0x66756E6374696F6E206E6F7420666F756E640000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND DUP2 MSTORE PUSH1 0x14 DUP2 RETURN JUMPDEST DUP3 CALLER EQ PUSH2 0x11C JUMPI PUSH2 0x11C PUSH1 0xC PUSH32 0x756E617574686F72697A65640000000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x177 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x12F PUSH2 0x1FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP2 SWAP1 DUP2 REVERT JUMPDEST PUSH12 0xCA11C0DE15DEAD10DEADC0DE PUSH1 0x0 NOT SLOAD PUSH1 0xA0 SHR SUB PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH1 0xD PUSH32 0x757064617465206C6F636B656400000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 CALLDATALOAD AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD DUP1 PUSH2 0x24C JUMPI PUSH2 0x24C PUSH1 0xD PUSH32 0x6C6F676963206E6F742073657400000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE DUP2 ADD PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL SWAP2 POP RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0x272 JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCB LOG2 0xE7 PUSH30 0x14C8CDBF42884951755ADCA3DF49C0B7F5DBF6714F8FF7438492A564736F PUSH13 0x63430008110033000000000000 ","sourceMap":"1404:4588:10:-:0;;;1466:52;;;;;;;;;-1:-1:-1;1501:10:10;1490:21;;1404:4588;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1404":{"entryPoint":null,"id":1404,"parameterSlots":0,"returnSlots":0},"@_1411":{"entryPoint":null,"id":1411,"parameterSlots":0,"returnSlots":0},"@_fallback_1421":{"entryPoint":23,"id":1421,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"1388":[{"length":32,"start":27}]},"linkReferences":{},"object":"60806040523661001357610011610017565b005b6100115b60007f00000000000000000000000000000000000000000000000000000000000000009050600536146025361417156101275760003560d81c80640cbcae703c81146100995764ca11c0de1181146100ea5761009460127f66756e6374696f6e206e6f7420666f756e640000000000000000000000000000610132565b610124565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5460601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000168152601481f35b82331461011c5761011c600c7f756e617574686f72697a65640000000000000000000000000000000000000000610132565b610124610177565b50505b61012f6101fa565b50565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101839052604481018290526064808201919081fd5b6bca11c0de15dead10deadc0de6000195460a01c036101bb576101bb600d7f757064617465206c6f636b656400000000000000000000000000000000000000610132565b73ffffffffffffffffffffffffffffffffffffffff600535167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff819055005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff548061024c5761024c600d7f6c6f676963206e6f742073657400000000000000000000000000000000000000610132565b60405136810160405236600082376000803683855af491503d6000823e81610272573d81fd5b3d81f3fea264697066735822122008cba2e77d14c8cdbf42884951755adca3df49c0b7f5dbf6714f8ff7438492a564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x5 CALLDATASIZE EQ PUSH1 0x25 CALLDATASIZE EQ OR ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xD8 SHR DUP1 PUSH5 0xCBCAE703C DUP2 EQ PUSH2 0x99 JUMPI PUSH5 0xCA11C0DE11 DUP2 EQ PUSH2 0xEA JUMPI PUSH2 0x94 PUSH1 0x12 PUSH32 0x66756E6374696F6E206E6F7420666F756E640000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND DUP2 MSTORE PUSH1 0x14 DUP2 RETURN JUMPDEST DUP3 CALLER EQ PUSH2 0x11C JUMPI PUSH2 0x11C PUSH1 0xC PUSH32 0x756E617574686F72697A65640000000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x177 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x12F PUSH2 0x1FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP2 SWAP1 DUP2 REVERT JUMPDEST PUSH12 0xCA11C0DE15DEAD10DEADC0DE PUSH1 0x0 NOT SLOAD PUSH1 0xA0 SHR SUB PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH1 0xD PUSH32 0x757064617465206C6F636B656400000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 CALLDATALOAD AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SLOAD DUP1 PUSH2 0x24C JUMPI PUSH2 0x24C PUSH1 0xD PUSH32 0x6C6F676963206E6F742073657400000000000000000000000000000000000000 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE DUP2 ADD PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL SWAP2 POP RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY DUP2 PUSH2 0x272 JUMPI RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE DUP2 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCB LOG2 0xE7 PUSH30 0x14C8CDBF42884951755ADCA3DF49C0B7F5DBF6714F8FF7438492A564736F PUSH13 0x63430008110033000000000000 ","sourceMap":"1404:4588:10:-:0;;;;;;1561:11;:9;:11::i;:::-;1404:4588;;1623:11;1695:4295;1831:15;1849:8;1831:26;;2183:3;2167:14;2164:23;2157:4;2141:14;2138:24;2135:53;2132:1106;;;2267:4;2254:18;2249:3;2245:28;2301:8;2385:12;2380:194;;;;2650:12;2645:449;;;;3149:35;3181:2;3159:20;3149:35;:::i;:::-;2294:912;;2380:194;2441:4;2435:11;4095:9;4089:16;4036:2;4011:226;;;2478:3;2471:39;2547:4;2542:3;2535:17;2645:449;2780:7;2770:8;2767:21;2757:118;;2820:29;2846:2;2830:14;2820:29;:::i;:::-;3046:26;;:::i;:::-;2294:912;;2132:1106;3321:13;;:::i;:::-;1892:4092;1695:4295::o;3401:518::-;3465:4;3459:11;3535:13;3523:26;;3650:4;3617:3;3608:13;;3638:17;3679:14;;;3710:16;;;3767:14;;;3798:16;;;3838:14;;;;;3459:11;;3869:36;4351:582;4504:26;4495:4;4491:9;4485:16;4480:3;4476:26;4473:58;4470:132;;4554:30;4581:2;4564:15;4554:30;:::i;:::-;4693:36;4722:4;4709:18;4693:36;4796:9;4789:26;;;;5033:941;5100:9;5094:16;;5127:94;;5173:30;5200:2;5183:15;5173:30;:::i;:::-;5299:4;5293:11;5404:14;5399:3;5395:24;5389:4;5382:38;5506:14;5500:4;5495:3;5482:39;5731:4;5705;5669:14;5644:3;5610:12;5583:5;5549:204;5538:215;;5796:16;5790:4;5785:3;5770:43;5840:3;5830:84;;5879:16;5874:3;5867:29;5830:84;5943:16;5938:3;5931:29"},"gasEstimates":{"creation":{"codeDepositCost":"136800","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_fallback()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"RUN OPTIMIZER OFF\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Proxy is a delegatecall reverse proxy implementation that is secure against function collision. The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation from upgrading the proxy by changing this slot. The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>); The proxy can return its implementation address by calling it using the format abi.encodePacked(hex'0cbcae703c'); All other calls will be proxied through to the implementation. The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the proxy.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/DeterministicAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.11;\\n/**\\n * @title DeterministicAddress\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract DeterministicAddress {\\n    function getMetamorphicContractAddress(bytes32 _salt, address _factory)\\n        public\\n        pure\\n        returns (address)\\n    {\\n        // byte code for metamorphic contract\\n        // 6020363636335afa1536363636515af43d36363e3d36f3\\n        bytes32 metamorphicContractBytecodeHash_ = 0x1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be;\\n        return\\n            address(\\n                uint160(\\n                    uint256(\\n                        keccak256(\\n                            abi.encodePacked(\\n                                hex\\\"ff\\\",\\n                                _factory,\\n                                _salt,\\n                                metamorphicContractBytecodeHash_\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xe181110462a1b624e17cd7a990d30797a1578172fee1a2be3e925ecef0d6f39d\",\"license\":\"MIT-open-group\"},\"contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nimport \\\"contracts/DeterministicAddress.sol\\\";\\n\\n/**\\n * @title Proxy\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\\n */\\n/**\\n * @notice Proxy is a delegatecall reverse proxy implementation that is secure against function\\n * collision.\\n *\\n * The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in\\n * it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded\\n * using the internal mechanism. This does not prevent the implementation from upgrading the proxy\\n * by changing this slot.\\n *\\n * The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the\\n * factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>);\\n *\\n * The proxy can return its implementation address by calling it using the format\\n * abi.encodePacked(hex'0cbcae703c');\\n *\\n * All other calls will be proxied through to the implementation.\\n *\\n * The implementation can not be locked using the internal upgrade mechanism due to the fact that\\n * the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must\\n * carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the\\n * proxy.\\n *\\n * @dev RUN OPTIMIZER OFF\\n */\\ncontract Proxy {\\n    address private immutable _factory;\\n\\n    constructor() {\\n        _factory = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /// Delegates calls to proxy implementation\\n    function _fallback() internal {\\n        // make local copy of factory since immutables are not accessible in assembly as of yet\\n        address factory = _factory;\\n        assembly (\\\"memory-safe\\\") {\\n            // check if the calldata has the special signatures to access the proxy functions. To\\n            // avoid collision the signatures for the proxy function are 5 bytes long (instead of\\n            // the normal 4).\\n            if or(eq(calldatasize(), 0x25), eq(calldatasize(), 0x5)) {\\n                {\\n                    let selector := shr(216, calldataload(0x00))\\n                    switch selector\\n                    // getImplementationAddress()\\n                    case 0x0cbcae703c {\\n                        let ptr := mload(0x40)\\n                        mstore(ptr, getImplementationAddress())\\n                        return(ptr, 0x14)\\n                    }\\n                    // setImplementationAddress()\\n                    case 0xca11c0de11 {\\n                        // revert in case user is not factory/admin\\n                        if iszero(eq(caller(), factory)) {\\n                            revertASM(\\\"unauthorized\\\", 12)\\n                        }\\n                        // if caller is factory, and has 0xca11c0de00<address> as calldata,\\n                        // run admin logic and return\\n                        setImplementationAddress()\\n                    }\\n                    default {\\n                        revertASM(\\\"function not found\\\", 18)\\n                    }\\n                }\\n            }\\n            // admin logic was not run so fallthrough to delegatecall\\n            passthrough()\\n\\n            ///////////// Functions ///////////////\\n\\n            function revertASM(str, len) {\\n                let ptr := mload(0x40)\\n                let startPtr := ptr\\n                mstore(ptr, hex\\\"08c379a0\\\") // keccak256('Error(string)')[0:4]\\n                ptr := add(ptr, 0x4)\\n                mstore(ptr, 0x20)\\n                ptr := add(ptr, 0x20)\\n                mstore(ptr, len) // string length\\n                ptr := add(ptr, 0x20)\\n                mstore(ptr, str)\\n                ptr := add(ptr, 0x20)\\n                revert(startPtr, sub(ptr, startPtr))\\n            }\\n\\n            function getImplementationAddress() -> implAddr {\\n                implAddr := shl(\\n                    96,\\n                    and(\\n                        sload(not(0x00)),\\n                        0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                    )\\n                )\\n            }\\n\\n            // updateImplementation is the builtin logic to change the implementation\\n            function setImplementationAddress() {\\n                // check if the upgrade functionality is locked.\\n                if eq(shr(160, sload(not(0x00))), 0xca11c0de15dead10deadc0de) {\\n                    revertASM(\\\"update locked\\\", 13)\\n                }\\n                // this is an assignment to implementation\\n                let newImpl := shr(96, shl(96, calldataload(0x05)))\\n                // store address into slot\\n                sstore(not(0x00), newImpl)\\n                // stop to not fall into the default case of the switch selector\\n                stop()\\n            }\\n\\n            // passthrough is the passthrough logic to delegate to the implementation\\n            function passthrough() {\\n                let logicAddress := sload(not(0x00))\\n                if iszero(logicAddress) {\\n                    revertASM(\\\"logic not set\\\", 13)\\n                }\\n                // load free memory pointer\\n                let ptr := mload(0x40)\\n                // allocate memory proportionate to calldata\\n                mstore(0x40, add(ptr, calldatasize()))\\n                // copy calldata into memory\\n                calldatacopy(ptr, 0x00, calldatasize())\\n                let ret := delegatecall(\\n                    gas(),\\n                    logicAddress,\\n                    ptr,\\n                    calldatasize(),\\n                    0x00,\\n                    0x00\\n                )\\n                returndatacopy(ptr, 0x00, returndatasize())\\n                if iszero(ret) {\\n                    revert(ptr, returndatasize())\\n                }\\n                return(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a8897b127757b03568269f0eff6742ea27988880a04baafecf409df6ab7f193\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Proxy is a delegatecall reverse proxy implementation that is secure against function collision. The forwarding address is stored at the slot location of not(0). If not(0) has a value stored in it that is of the form 0xca11c0de15dead10deadc0de< address > the proxy may no longer be upgraded using the internal mechanism. This does not prevent the implementation from upgrading the proxy by changing this slot. The proxy may be directly upgraded ( if the lock is not set ) by calling the proxy from the factory address using the format abi.encodeWithSelector(0xca11c0de11, <address>); The proxy can return its implementation address by calling it using the format abi.encodePacked(hex'0cbcae703c'); All other calls will be proxied through to the implementation. The implementation can not be locked using the internal upgrade mechanism due to the fact that the internal mechanism zeros out the higher order bits. Therefore, the implementation itself must carry the locking mechanism that sets the higher order bits to lock the upgrade capability of the proxy.","version":1}}},"contracts/proxy/ProxyImplementationGetter.sol":{"ProxyImplementationGetter":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/ProxyImplementationGetter.sol\":\"ProxyImplementationGetter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/ProxyImplementationGetter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\nabstract contract ProxyImplementationGetter {\\n    function __getProxyImplementation(\\n        address _proxy\\n    ) internal view returns (address implAddress) {\\n        bytes memory cdata = hex\\\"0cbcae703c\\\";\\n        assembly (\\\"memory-safe\\\") {\\n            let success := staticcall(\\n                gas(),\\n                _proxy,\\n                add(cdata, 0x20),\\n                mload(cdata),\\n                0x00,\\n                0x00\\n            )\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, returndatasize()))\\n            returndatacopy(ptr, 0x00, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n            implAddress := shr(96, mload(ptr))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcbc560c3969890872ab8f65d798b714fe7969a81b663632d2554453c7b8cd2da\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/proxy/ProxyInternalUpgradeLock.sol":{"ProxyInternalUpgradeLock":{"abi":[],"devdoc":{"author":"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)","kind":"dev","methods":{},"title":"ProxyInternalUpgradeLock","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProxyInternalUpgradeLock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/ProxyInternalUpgradeLock.sol\":\"ProxyInternalUpgradeLock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/ProxyInternalUpgradeLock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title ProxyInternalUpgradeLock\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\\n */\\nabstract contract ProxyInternalUpgradeLock {\\n    function __lockImplementation() internal {\\n        assembly (\\\"memory-safe\\\") {\\n            let implSlot := not(0x00)\\n            sstore(\\n                implSlot,\\n                or(\\n                    0xca11c0de15dead10deadc0de0000000000000000000000000000000000000000,\\n                    and(\\n                        sload(implSlot),\\n                        0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\\n                    )\\n                )\\n            )\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xda62e79f0dafb11f0971a9a443410f9aae63826ab5ca1d7c86a0a588c964375c\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/proxy/ProxyInternalUpgradeUnlock.sol":{"ProxyInternalUpgradeUnlock":{"abi":[],"devdoc":{"author":"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)","kind":"dev","methods":{},"title":"ProxyInternalUpgradeUnlock","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProxyInternalUpgradeUnlock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/ProxyInternalUpgradeUnlock.sol\":\"ProxyInternalUpgradeUnlock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/ProxyInternalUpgradeUnlock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title ProxyInternalUpgradeUnlock\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul), Leonardo Teixeira(vtleonardo)\\n */\\nabstract contract ProxyInternalUpgradeUnlock {\\n    function __unlockImplementation() internal {\\n        assembly (\\\"memory-safe\\\") {\\n            let implSlot := not(0x00)\\n            sstore(\\n                implSlot,\\n                and(\\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff,\\n                    sload(implSlot)\\n                )\\n            )\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x666dcc3b9122cd37850db2eb7c27f61d4f06bdf54b8305f19041684272aa0b12\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/proxy/ProxyUpgrader.sol":{"ProxyUpgrader":{"abi":[],"devdoc":{"author":"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)","kind":"dev","methods":{},"title":"ProxyUpgrader","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProxyUpgrader\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/ProxyUpgrader.sol\":\"ProxyUpgrader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000000},\"remappings\":[]},\"sources\":{\"contracts/proxy/ProxyUpgrader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT-open-group\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title ProxyUpgrader\\n * @author Hunter Prendergast (et3p), ZJ Lin, Troy Salem (Cr0wn_Gh0ul)\\n */\\nabstract contract ProxyUpgrader {\\n    function __upgrade(address _proxy, address _newImpl) internal {\\n        bytes memory cdata = abi.encodePacked(\\n            hex\\\"ca11c0de11\\\",\\n            uint256(uint160(_newImpl))\\n        );\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(\\n                gas(),\\n                _proxy,\\n                0,\\n                add(cdata, 0x20),\\n                mload(cdata),\\n                0x00,\\n                0x00\\n            )\\n            let ptr := mload(0x40)\\n            mstore(0x40, add(ptr, returndatasize()))\\n            returndatacopy(ptr, 0x00, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x14c677421afe6ad998c9c67ecb69e7d15b843ff5dec0a3b30a09f7662382cc09\",\"license\":\"MIT-open-group\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}