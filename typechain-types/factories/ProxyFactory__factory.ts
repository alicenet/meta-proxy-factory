/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ProxyFactory, ProxyFactoryInterface } from "../ProxyFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "DeployedProxy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "DeployedRaw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "DeployedStatic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "DeployedTemplate",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cdata_",
        type: "bytes",
      },
    ],
    name: "callAny",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contracts",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "contracts_",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "cdata_",
        type: "bytes",
      },
    ],
    name: "delegateCallAny",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "delegator",
    outputs: [
      {
        internalType: "address",
        name: "delegator_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "deployCode_",
        type: "bytes",
      },
    ],
    name: "deployCreate",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "deployCode_",
        type: "bytes",
      },
    ],
    name: "deployCreate2",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt_",
        type: "bytes32",
      },
    ],
    name: "deployProxy",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "initCallData_",
        type: "bytes",
      },
    ],
    name: "deployStatic",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "deployCode_",
        type: "bytes",
      },
    ],
    name: "deployTemplate",
    outputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "getMetamorphicContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumContracts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initCallData_",
        type: "bytes",
      },
    ],
    name: "initializeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt_",
        type: "bytes32",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "cdata_",
        type: "bytes[]",
      },
    ],
    name: "multiCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDelegator_",
        type: "address",
      },
    ],
    name: "setDelegator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementationAddress_",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newImpl_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initCallData_",
        type: "bytes",
      },
    ],
    name: "upgradeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516000906738585839386009f360c01b906200003360208201620000ad565b601f1982820381018352601f9091011660408190526200005a9291903090602001620000bb565b604051602081830303815290604052905060008151602083016000f090508062000088573d6000803e3d6000fd5b6001600160a01b031660805250600080546001600160a01b0319163317905562000117565b61024680620017b483390190565b6001600160c01b0319841681528251600090815b81811015620000ee5760208187018101516008868401015201620000cf565b8181111562000101576000600883860101525b5060089201918201929092526028019392505050565b608051611681620001336000396000610e2d01526116816000f3fe60806040526004361061015f5760003560e01c806383cd9cc3116100c0578063cfe10b3011610074578063e1d7a8e411610059578063e1d7a8e41461047f578063f39ec1f71461049f578063fa481da5146104bf5761015f565b8063cfe10b3014610441578063d784d4261461045f5761015f565b80638da5cb5b116100a55780638da5cb5b146103c0578063aaf10f42146103eb578063ce9b7930146104165761015f565b806383cd9cc3146102bd5780638653a465146102dd5761015f565b8063348a0cdc116101175780634713ee7a116100fc5780634713ee7a1461027557806356f2a761146102885780636c0f79b61461029b5761015f565b8063348a0cdc1461023557806339cab472146102555761015f565b806313af40351161014857806313af4035146101ab57806317cff2c5146101cb57806327fe1822146102155761015f565b8063043c94141461017657806312e6bf6a14610198575b34801561016b57600080fd5b506003543d5260203df35b34801561018257600080fd5b50610196610191366004611247565b6104df565b005b6101966101a63660046112a3565b61051f565b3480156101b757600080fd5b506101966101c63660046112e7565b6105a5565b3480156101d757600080fd5b506101eb6101e6366004611304565b61061a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561022157600080fd5b506101eb610230366004611304565b61065b565b34801561024157600080fd5b50610196610250366004611346565b610695565b34801561026157600080fd5b506101eb6102703660046113bb565b6106d1565b6101966102833660046113d4565b610710565b6101eb610296366004611429565b6107b0565b3480156102a757600080fd5b506102b06107f5565b60405161020c9190611464565b3480156102c957600080fd5b506101966102d83660046112e7565b61084d565b3480156102e957600080fd5b506101eb6102f83660046114a8565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b3480156103cc57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166101eb565b3480156103f757600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff166101eb565b34801561042257600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166101eb565b34801561044d57600080fd5b5060025460405190815260200161020c565b34801561046b57600080fd5b5061019661047a3660046112e7565b6108c2565b34801561048b57600080fd5b5061019661049a3660046113d4565b610959565b3480156104ab57600080fd5b506101eb6104ba3660046113bb565b6109b9565b3480156104cb57600080fd5b506101eb6104da3660046114d8565b610a62565b33301480610504575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61050d57600080fd5b61051984848484610aa5565b50505050565b33301480610544575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61054d57600080fd5b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350610596925087915086905083610c04565b61059e610c21565b5050505050565b333014806105ca575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6105d357600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600033301480610641575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61064a57600080fd5b6106548383610c2b565b9392505050565b600033301480610682575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61068b57600080fd5b6106548383610d20565b333014806106ba575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6106c357600080fd5b6106cd8282610d97565b5050565b6000333014806106f8575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61070157600080fd5b61070a82610e28565b92915050565b33301480610735575060005473ffffffffffffffffffffffffffffffffffffffff1633145b80610757575060015473ffffffffffffffffffffffffffffffffffffffff1633145b61076057600080fd5b600082828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506107a89250869150839050610f12565b610519610c21565b6000333014806107d7575060005473ffffffffffffffffffffffffffffffffffffffff1633145b6107e057600080fd5b6107ec85858585610f2e565b95945050505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561084357602002820191906000526020600020905b81548152602001906001019080831161082f575b5050505050905090565b33301480610872575060005473ffffffffffffffffffffffffffffffffffffffff1633145b61087b57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b333014806108e7575060005473ffffffffffffffffffffffffffffffffffffffff1633145b80610909575060015473ffffffffffffffffffffffffffffffffffffffff1633145b61091257600080fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3330148061097e575060005473ffffffffffffffffffffffffffffffffffffffff1633145b806109a0575060015473ffffffffffffffffffffffffffffffffffffffff1633145b6109a957600080fd5b6109b4838383610feb565b505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018490527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be605580840191909152835180840390910181526075909201909252805191012060009061070a565b600033301480610a89575060005473ffffffffffffffffffffffffffffffffffffffff1633145b610a9257600080fd5b610a9d848484611020565b949350505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018790527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be6055808401919091528351808403909101815260759092019092528051910120610b508185611139565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16630cbcae706040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd6919061150b565b73ffffffffffffffffffffffffffffffffffffffff1614610bf957610bf9611528565b61059e818484610feb565b805181602001600080838387895af161059e573d6000803e3d6000fd5b3d6000803e3d6000f35b6000604051602883018101604052807f38585839386009f30000000000000000000000000000000000000000000000008152600881019050838582378381019050308152602081019050818103826000f092505050610c88813b90565b610c9157600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527f6cd94ea1c5d9f99038bb4629d8a759399654d3861b73bf3a2b0cf484dae721389060200160405180910390a1600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905592915050565b600060405180838582378301818103826000f092505050610d3f813b90565b610d4857600080fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a192915050565b60005b81811015610e1f576000838383818110610db657610db6611557565b9050602002810190610dc89190611586565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939450610e0c933093509150849050610c04565b5080610e17816115eb565b915050610d9a565b506106cd610c21565b6000807f000000000000000000000000000000000000000000000000000000000000000090508060035560405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152836017826000f5925050813b610e8e57600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0183905560405173ffffffffffffffffffffffffffffffffffffffff831681527f06690e5b52be10a3d5820ec875c3dd3327f3077954a09f104201e40e5f7082c69060200160405180910390a150919050565b8051816020016000808383875af4610519573d6000803e3d6000fd5b600060405180838582378301858282038389f59250505073ffffffffffffffffffffffffffffffffffffffff8116610f6557600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fd3acf0da590cfcd8f020afd7f40b7e6e4c8bd2fc9eb7aec9836837b667685b3a9060200160405180910390a1949350505050565b80156109b4576040518082016040528183823760008083836000885af1610519576040519050803d016040523d6000823e3d81fd5b600060405160208101604052766020363636335afa1536363636515af43d36363e3d36f360481b8152846017826000f59150503d15611063573d6000803e3d6000fd5b803b1581151715611098577f537461746963206465706c6f79206661696c656400000000000000000000000060005260206000fd5b81156110a9576110a9818484610feb565b803b6110b457600080fd5b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0184905560405173ffffffffffffffffffffffffffffffffffffffff821681527fe8b9cb7d60827a7d55e211f1382dd0f129adb541af9fe45a09ab4a18b76e7c659060200160405180910390a19392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff83166024808301919091528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fca11c0de00000000000000000000000000000000000000000000000000000000178152815160009182919082875af16109b4576040513d81016040523d6000823e3d81fd5b73ffffffffffffffffffffffffffffffffffffffff811681146111fb57600080fd5b50565b60008083601f84011261121057600080fd5b50813567ffffffffffffffff81111561122857600080fd5b60208301915083602082850101111561124057600080fd5b9250929050565b6000806000806060858703121561125d57600080fd5b84359350602085013561126f816111d9565b9250604085013567ffffffffffffffff81111561128b57600080fd5b611297878288016111fe565b95989497509550505050565b600080600080606085870312156112b957600080fd5b84356112c4816111d9565b935060208501359250604085013567ffffffffffffffff81111561128b57600080fd5b6000602082840312156112f957600080fd5b8135610654816111d9565b6000806020838503121561131757600080fd5b823567ffffffffffffffff81111561132e57600080fd5b61133a858286016111fe565b90969095509350505050565b6000806020838503121561135957600080fd5b823567ffffffffffffffff8082111561137157600080fd5b818501915085601f83011261138557600080fd5b81358181111561139457600080fd5b8660208260051b85010111156113a957600080fd5b60209290920196919550909350505050565b6000602082840312156113cd57600080fd5b5035919050565b6000806000604084860312156113e957600080fd5b83356113f4816111d9565b9250602084013567ffffffffffffffff81111561141057600080fd5b61141c868287016111fe565b9497909650939450505050565b6000806000806060858703121561143f57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561128b57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561149c57835183529284019291840191600101611480565b50909695505050505050565b600080604083850312156114bb57600080fd5b8235915060208301356114cd816111d9565b809150509250929050565b6000806000604084860312156114ed57600080fd5b83359250602084013567ffffffffffffffff81111561141057600080fd5b60006020828403121561151d57600080fd5b8151610654816111d9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115bb57600080fd5b83018035915067ffffffffffffffff8211156115d657600080fd5b60200191503681900382131561124057600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611644577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212202ae784101319c6158f5ce53d62933e1f9796ffbe0f76c7f3c88007c1e28de5a164736f6c634300080b003360a060405234801561001057600080fd5b503360805260805161021761002f6000396000607901526102176000f3fe6080604052600436106100225760003560e01c80630cbcae701461003957610031565b366100315761002f610077565b005b61002f610077565b34801561004557600080fd5b5061004e61019e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610169565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5473ffffffffffffffffffffffffffffffffffffffff600435169060a01c6bca11c0de15dead10cced00001415610119577f696d706c6f63000000000000000000000000000000000000000000000000000060005260206000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff55005b60405136810160405236600082376000803683600019545af43d6000833e80610164573d82fd5b503d81f35b803314156101935760243614156101935763ca11c0de60003560e01c14156101935761019361009d565b61019b61013d565b50565b600073ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff541660005260206000f3fea26469706673582212204d2fc8317b6216965fbf33d316516c31e54e3ccc8875a5f50bba448cfefae1db64736f6c634300080b0033";

type ProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyFactory__factory extends ContractFactory {
  constructor(...args: ProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyFactory> {
    return super.deploy(overrides || {}) as Promise<ProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyFactory {
    return super.attach(address) as ProxyFactory;
  }
  override connect(signer: Signer): ProxyFactory__factory {
    return super.connect(signer) as ProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyFactoryInterface {
    return new utils.Interface(_abi) as ProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyFactory {
    return new Contract(address, _abi, signerOrProvider) as ProxyFactory;
  }
}
